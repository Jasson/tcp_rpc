!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ALERT	deps/lager/include/lager.hrl	/^-define(ALERT, 2).$/;"	d
ALL_APPS_DIRS	deps/ranch/erlang.mk	/^ALL_APPS_DIRS = $(if $(wildcard $(APPS_DIR)\/),$(filter-out $(APPS_DIR),$(shell find $(APPS_DIR) -maxdepth 1 -type d)))$/;"	m
ALL_DEPS_DIRS	deps/ranch/erlang.mk	/^ALL_DEPS_DIRS = $(addprefix $(DEPS_DIR)\/,$(foreach dep,$(filter-out $(IGNORE_DEPS),$(BUILD_DEPS) $(DEPS)),$(call dep_name,$(dep))))$/;"	m
ALL_DOC_DEPS_DIRS	deps/ranch/erlang.mk	/^ALL_DOC_DEPS_DIRS = $(addprefix $(DEPS_DIR)\/,$(DOC_DEPS))$/;"	m
ALL_REL_DEPS_DIRS	deps/ranch/erlang.mk	/^ALL_REL_DEPS_DIRS = $(addprefix $(DEPS_DIR)\/,$(REL_DEPS))$/;"	m
ALL_SHELL_DEPS_DIRS	deps/ranch/erlang.mk	/^ALL_SHELL_DEPS_DIRS = $(addprefix $(DEPS_DIR)\/,$(SHELL_DEPS))$/;"	m
ALL_SRC_FILES	deps/ranch/erlang.mk	/^ALL_SRC_FILES := $(sort $(call core_find,src\/,*))$/;"	m
ALL_TEST_DEPS_DIRS	deps/ranch/erlang.mk	/^ALL_TEST_DEPS_DIRS = $(addprefix $(DEPS_DIR)\/,$(TEST_DEPS))$/;"	m
APPNAME	deps/goldrush/Makefile	/^APPNAME = goldrush$/;"	m
APPS_DIR	deps/ranch/erlang.mk	/^APPS_DIR ?= $(CURDIR)\/apps$/;"	m
ASCIIDOC_MANUAL_FILES	deps/ranch/erlang.mk	/^ASCIIDOC_MANUAL_FILES := $(wildcard doc\/src\/manual\/*.asciidoc)$/;"	m
ASN1_FILES	deps/ranch/erlang.mk	/^ASN1_FILES = $(sort $(call core_find,asn1\/,*.asn1))$/;"	m
CC	deps/ranch/erlang.mk	/^	CC = \/mingw64\/bin\/gcc$/;"	m
CC	deps/ranch/erlang.mk	/^	CC ?= cc$/;"	m
CC	deps/ranch/erlang.mk	/^	CC ?= gcc$/;"	m
CFLAGS	deps/ranch/erlang.mk	/^	CFLAGS ?= -O3 -std=c99 -arch x86_64 -finline-functions -Wall -Wmissing-prototypes$/;"	m
CFLAGS	deps/ranch/erlang.mk	/^	CFLAGS ?= -O3 -std=c99 -finline-functions -Wall -Wmissing-prototypes$/;"	m
CHILD	deps/goldrush/src/gr_sup.erl	/^-define(CHILD(I, Type), {I, {I, start_link, []}, permanent, 5000, Type, [I]}).$/;"	d
CHILD	src/ecache_sup.erl	/^-define(CHILD(I, Type), {I, {I, start_link, []}, permanent, 5000, Type, [I]}).$/;"	d
CI_ERLLVM	deps/ranch/erlang.mk	/^CI_ERLLVM ?=$/;"	m
CI_HIPE	deps/ranch/erlang.mk	/^CI_HIPE ?=$/;"	m
CI_INSTALL_DIR	deps/ranch/erlang.mk	/^CI_INSTALL_DIR ?= $(HOME)\/erlang$/;"	m
CI_OTP	deps/ranch/Makefile	/^CI_OTP ?= \\$/;"	m
CI_OTP	deps/ranch/erlang.mk	/^CI_OTP ?=$/;"	m
COMPILE_C	deps/ranch/erlang.mk	/^COMPILE_C = $(c_verbose) $(CC) $(CFLAGS) $(CPPFLAGS) -c$/;"	m
COMPILE_CPP	deps/ranch/erlang.mk	/^COMPILE_CPP = $(cpp_verbose) $(CXX) $(CXXFLAGS) $(CPPFLAGS) -c$/;"	m
COMPILE_FIRST	deps/ranch/Makefile	/^COMPILE_FIRST = ranch_transport$/;"	m
COMPILE_FIRST	deps/ranch/erlang.mk	/^COMPILE_FIRST ?=$/;"	m
COMPILE_FIRST_PATHS	deps/ranch/erlang.mk	/^COMPILE_FIRST_PATHS = $(addprefix src\/,$(addsuffix .erl,$(COMPILE_FIRST)))$/;"	m
COMPILE_MIB_FIRST	deps/ranch/erlang.mk	/^COMPILE_MIB_FIRST ?=$/;"	m
COMPILE_MIB_FIRST_PATHS	deps/ranch/erlang.mk	/^COMPILE_MIB_FIRST_PATHS = $(addprefix mibs\/,$(addsuffix .mib,$(COMPILE_MIB_FIRST)))$/;"	m
CORE_FILES	deps/ranch/erlang.mk	/^CORE_FILES := $(filter %.core,$(ALL_SRC_FILES))$/;"	m
COVERDATA	deps/ranch/erlang.mk	/^COVERDATA = $(filter-out all.coverdata,$(wildcard *.coverdata))$/;"	m
COVER_MODS	deps/ranch/erlang.mk	/^COVER_MODS = $(notdir $(basename $(call core_ls,ebin\/*.beam)))$/;"	m
COVER_REPORT_DIR	deps/ranch/erlang.mk	/^COVER_REPORT_DIR = cover$/;"	m
CRASH_LOG	deps/lager/src/error_logger_lager_h.erl	/^-define(CRASH_LOG(Event),$/;"	d
CRITICAL	deps/lager/include/lager.hrl	/^-define(CRITICAL, 4).$/;"	d
CT_EXTRA	deps/ranch/erlang.mk	/^CT_EXTRA = -group $(firstword $(t_words)) -case $(lastword $(t_words))$/;"	m
CT_EXTRA	deps/ranch/erlang.mk	/^CT_EXTRA = -group $t$/;"	m
CT_EXTRA	deps/ranch/erlang.mk	/^CT_EXTRA =$/;"	m
CT_LOGS_DIR	deps/ranch/erlang.mk	/^CT_LOGS_DIR ?= $(CURDIR)\/logs$/;"	m
CT_OPTS	deps/ranch/erlang.mk	/^CT_OPTS ?=$/;"	m
CT_RUN	deps/ranch/erlang.mk	/^CT_RUN = ct_run \\$/;"	m
CT_SUITES	deps/ranch/erlang.mk	/^CT_SUITES := $(sort $(subst _SUITE.erl,,$(notdir $(call core_find,$(TEST_DIR)\/,*_SUITE.erl))))$/;"	m
CT_SUITES	deps/ranch/erlang.mk	/^CT_SUITES ?=$/;"	m
CXXFLAGS	deps/ranch/erlang.mk	/^	CXXFLAGS ?= -O3 -arch x86_64 -finline-functions -Wall$/;"	m
CXXFLAGS	deps/ranch/erlang.mk	/^	CXXFLAGS ?= -O3 -finline-functions -Wall$/;"	m
C_SRC_DIR	deps/ranch/erlang.mk	/^C_SRC_DIR ?= $(CURDIR)\/c_src$/;"	m
C_SRC_ENV	deps/ranch/erlang.mk	/^C_SRC_ENV ?= $(C_SRC_DIR)\/env.mk$/;"	m
C_SRC_OUTPUT	deps/ranch/erlang.mk	/^C_SRC_OUTPUT ?= $(CURDIR)\/priv\/$(PROJECT)$/;"	m
C_SRC_OUTPUT_EXECUTABLE_EXTENSION	deps/ranch/erlang.mk	/^	C_SRC_OUTPUT_EXECUTABLE_EXTENSION ?= .exe$/;"	m
C_SRC_OUTPUT_EXECUTABLE_EXTENSION	deps/ranch/erlang.mk	/^	C_SRC_OUTPUT_EXECUTABLE_EXTENSION ?=$/;"	m
C_SRC_OUTPUT_FILE	deps/ranch/erlang.mk	/^	C_SRC_OUTPUT_FILE = $(C_SRC_OUTPUT)$(C_SRC_OUTPUT_EXECUTABLE_EXTENSION)$/;"	m
C_SRC_OUTPUT_FILE	deps/ranch/erlang.mk	/^	C_SRC_OUTPUT_FILE = $(C_SRC_OUTPUT)$(C_SRC_OUTPUT_SHARED_EXTENSION)$/;"	m
C_SRC_OUTPUT_SHARED_EXTENSION	deps/ranch/erlang.mk	/^	C_SRC_OUTPUT_SHARED_EXTENSION ?= .dll$/;"	m
C_SRC_OUTPUT_SHARED_EXTENSION	deps/ranch/erlang.mk	/^	C_SRC_OUTPUT_SHARED_EXTENSION ?= .so$/;"	m
C_SRC_TYPE	deps/ranch/erlang.mk	/^C_SRC_TYPE ?= shared$/;"	m
DEBUG	deps/lager/include/lager.hrl	/^-define(DEBUG, 128).$/;"	d
DEFAULT_CHECK_INTERVAL	deps/lager/src/lager_file_backend.erl	/^-define(DEFAULT_CHECK_INTERVAL, 1000).$/;"	d
DEFAULT_HANDLER_CONF	deps/lager/src/lager_app.erl	/^-define(DEFAULT_HANDLER_CONF,$/;"	d
DEFAULT_LOG_LEVEL	deps/lager/src/lager_file_backend.erl	/^-define(DEFAULT_LOG_LEVEL, info).$/;"	d
DEFAULT_ROTATION_COUNT	deps/lager/src/lager_file_backend.erl	/^-define(DEFAULT_ROTATION_COUNT, 5).$/;"	d
DEFAULT_ROTATION_DATE	deps/lager/src/lager_file_backend.erl	/^-define(DEFAULT_ROTATION_DATE, "$D0"). %% midnight$/;"	d
DEFAULT_ROTATION_SIZE	deps/lager/src/lager_file_backend.erl	/^-define(DEFAULT_ROTATION_SIZE, 10485760). %% 10mb$/;"	d
DEFAULT_SINK	deps/lager/include/lager.hrl	/^-define(DEFAULT_SINK, lager_event).$/;"	d
DEFAULT_SYNC_INTERVAL	deps/lager/src/lager_file_backend.erl	/^-define(DEFAULT_SYNC_INTERVAL, 1000).$/;"	d
DEFAULT_SYNC_LEVEL	deps/lager/src/lager_file_backend.erl	/^-define(DEFAULT_SYNC_LEVEL, error).$/;"	d
DEFAULT_SYNC_SIZE	deps/lager/src/lager_file_backend.erl	/^-define(DEFAULT_SYNC_SIZE, 1024*64). %% 64kb$/;"	d
DEFAULT_TRACER	deps/lager/include/lager.hrl	/^-define(DEFAULT_TRACER, lager_default_tracer).$/;"	d
DEFAULT_TRUNCATION	deps/lager/include/lager.hrl	/^-define(DEFAULT_TRUNCATION, 4096).$/;"	d
DEPS	deps/ranch/examples/tcp_echo/Makefile	/^DEPS = ranch$/;"	m
DEPS	deps/ranch/examples/tcp_reverse/Makefile	/^DEPS = ranch$/;"	m
DEPS_DIR	deps/ranch/erlang.mk	/^DEPS_DIR ?= $(CURDIR)\/deps$/;"	m
DEP_PLUGINS	deps/ranch/erlang.mk	/^DEP_PLUGINS ?=$/;"	m
DIALYZER	deps/goldrush/Makefile	/^DIALYZER = dialyzer$/;"	m
DIALYZER_APPS	deps/lager/Makefile	/^DIALYZER_APPS = kernel stdlib erts sasl eunit syntax_tools compiler crypto \\$/;"	m
DIALYZER_DIRS	deps/ranch/erlang.mk	/^DIALYZER_DIRS ?= --src -r $(wildcard src) $(ALL_APPS_DIRS)$/;"	m
DIALYZER_FLAGS	deps/lager/tools.mk	/^DIALYZER_FLAGS ?= -Wunmatched_returns$/;"	m
DIALYZER_OPTS	deps/ranch/erlang.mk	/^DIALYZER_OPTS ?= -Werror_handling -Wrace_conditions -Wunmatched_returns # -Wunderspecs$/;"	m
DIALYZER_PLT	deps/ranch/erlang.mk	/^DIALYZER_PLT ?= $(CURDIR)\/.$(PROJECT).plt$/;"	m
DOC_DEPS	deps/ranch/Makefile	/^DOC_DEPS = asciideck$/;"	m
DTL_FILES	deps/ranch/erlang.mk	/^DTL_FILES := $(sort $(call core_find,$(DTL_PATH),*.dtl))$/;"	m
DTL_FULL_PATH	deps/ranch/erlang.mk	/^DTL_FULL_PATH ?=$/;"	m
DTL_MODULES	deps/ranch/erlang.mk	/^DTL_MODULES = $(if $(DTL_FULL_PATH),$(subst \/,_,$(DTL_NAMES)),$(notdir $(DTL_NAMES)))$/;"	m
DTL_NAMES	deps/ranch/erlang.mk	/^DTL_NAMES   = $(addsuffix $(DTL_SUFFIX),$(DTL_FILES:$(DTL_PATH)\/%.dtl=%))$/;"	m
DTL_OPTS	deps/ranch/erlang.mk	/^DTL_OPTS ?=$/;"	m
DTL_PATH	deps/ranch/erlang.mk	/^DTL_PATH := $(abspath $(DTL_PATH))$/;"	m
DTL_PATH	deps/ranch/erlang.mk	/^DTL_PATH ?= templates\/$/;"	m
DTL_SUFFIX	deps/ranch/erlang.mk	/^DTL_SUFFIX ?= _dtl$/;"	m
EDOC_OPTS	deps/ranch/erlang.mk	/^EDOC_OPTS ?=$/;"	m
EMERGENCY	deps/lager/include/lager.hrl	/^-define(EMERGENCY, 1).$/;"	d
ERL	deps/ranch/erlang.mk	/^ERL = erl +A0 -noinput -boot start_clean$/;"	m
ERLANG_MK_BUILD_CONFIG	deps/ranch/erlang.mk	/^ERLANG_MK_BUILD_CONFIG ?= build.config$/;"	m
ERLANG_MK_BUILD_DIR	deps/ranch/erlang.mk	/^ERLANG_MK_BUILD_DIR ?= .erlang.mk.build$/;"	m
ERLANG_MK_COMMIT	deps/ranch/erlang.mk	/^ERLANG_MK_COMMIT ?=$/;"	m
ERLANG_MK_FILENAME	deps/ranch/erlang.mk	/^ERLANG_MK_FILENAME := $(realpath $(lastword $(MAKEFILE_LIST)))$/;"	m
ERLANG_MK_RECURSIVE_DEPS_LIST	deps/ranch/erlang.mk	/^ERLANG_MK_RECURSIVE_DEPS_LIST = $(ERLANG_MK_TMP)\/recursive-deps-list.log$/;"	m
ERLANG_MK_RECURSIVE_DOC_DEPS_LIST	deps/ranch/erlang.mk	/^ERLANG_MK_RECURSIVE_DOC_DEPS_LIST = $(ERLANG_MK_TMP)\/recursive-doc-deps-list.log$/;"	m
ERLANG_MK_RECURSIVE_REL_DEPS_LIST	deps/ranch/erlang.mk	/^ERLANG_MK_RECURSIVE_REL_DEPS_LIST = $(ERLANG_MK_TMP)\/recursive-rel-deps-list.log$/;"	m
ERLANG_MK_RECURSIVE_SHELL_DEPS_LIST	deps/ranch/erlang.mk	/^ERLANG_MK_RECURSIVE_SHELL_DEPS_LIST = $(ERLANG_MK_TMP)\/recursive-shell-deps-list.log$/;"	m
ERLANG_MK_RECURSIVE_TEST_DEPS_LIST	deps/ranch/erlang.mk	/^ERLANG_MK_RECURSIVE_TEST_DEPS_LIST = $(ERLANG_MK_TMP)\/recursive-test-deps-list.log$/;"	m
ERLANG_MK_RECURSIVE_TMP_LIST	deps/ranch/erlang.mk	/^ERLANG_MK_RECURSIVE_TMP_LIST := $(abspath $(ERLANG_MK_TMP)\/recursive-tmp-deps.log)$/;"	m
ERLANG_MK_REPO	deps/ranch/erlang.mk	/^ERLANG_MK_REPO ?= https:\/\/github.com\/ninenines\/erlang.mk$/;"	m
ERLANG_MK_TMP	deps/ranch/erlang.mk	/^ERLANG_MK_TMP ?= $(CURDIR)\/.erlang.mk$/;"	m
ERLANG_MK_VERSION	deps/ranch/erlang.mk	/^ERLANG_MK_VERSION = 2016.12.08$/;"	m
ERLC_EXCLUDE	deps/ranch/erlang.mk	/^ERLC_EXCLUDE ?=$/;"	m
ERLC_EXCLUDE_PATHS	deps/ranch/erlang.mk	/^ERLC_EXCLUDE_PATHS = $(addprefix src\/,$(addsuffix .erl,$(ERLC_EXCLUDE)))$/;"	m
ERLC_MIB_OPTS	deps/ranch/erlang.mk	/^ERLC_MIB_OPTS ?=$/;"	m
ERLC_OPTS	deps/ranch/erlang.mk	/^ERLC_OPTS ?= -Werror +debug_info +warn_export_vars +warn_shadow_vars \\$/;"	m
ERLC_OPTS	deps/ranch/erlang.mk	/^test-build:: ERLC_OPTS=$(TEST_ERLC_OPTS)$/;"	m
ERL_FILES	deps/ranch/erlang.mk	/^ERL_FILES := $(filter %.erl,$(ALL_SRC_FILES))$/;"	m
ERL_LIBS	deps/ranch/erlang.mk	/^	ERL_LIBS := $(ERL_LIBS):$(APPS_DIR):$(DEPS_DIR)$/;"	m
ERL_LIBS	deps/ranch/erlang.mk	/^	ERL_LIBS = $(APPS_DIR):$(DEPS_DIR)$/;"	m
ERROR	deps/lager/include/lager.hrl	/^-define(ERROR, 8).$/;"	d
ERROR_LOGGER_SINK	deps/lager/include/lager.hrl	/^-define(ERROR_LOGGER_SINK, error_logger_lager_event).$/;"	d
ESCRIPT_COMMENT	deps/ranch/erlang.mk	/^ESCRIPT_COMMENT ?= This is an -*- erlang -*- file$/;"	m
ESCRIPT_EMU_ARGS	deps/ranch/erlang.mk	/^ESCRIPT_EMU_ARGS ?= -escript main $(ESCRIPT_NAME)$/;"	m
ESCRIPT_FILE	deps/ranch/erlang.mk	/^ESCRIPT_FILE ?= $(ESCRIPT_NAME)$/;"	m
ESCRIPT_NAME	deps/ranch/erlang.mk	/^ESCRIPT_NAME ?= $(PROJECT)$/;"	m
ESCRIPT_SHEBANG	deps/ranch/erlang.mk	/^ESCRIPT_SHEBANG ?= \/usr\/bin\/env escript$/;"	m
ESCRIPT_ZIP	deps/ranch/erlang.mk	/^ESCRIPT_ZIP ?= 7z a -tzip -mx=9 -mtc=off $(if $(filter-out 0,$(V)),,> \/dev\/null)$/;"	m
ESCRIPT_ZIP_FILE	deps/ranch/erlang.mk	/^ESCRIPT_ZIP_FILE ?= $(ERLANG_MK_TMP)\/escript.zip$/;"	m
ETS_TABLE	deps/lager/src/lager_backend_throttle.erl	/^-define(ETS_TABLE, async_threshold_test).$/;"	d
EUNIT_EBIN_MODS	deps/ranch/erlang.mk	/^EUNIT_EBIN_MODS = $(notdir $(basename $(ERL_FILES) $(BEAM_FILES)))$/;"	m
EUNIT_ERL_OPTS	deps/ranch/erlang.mk	/^EUNIT_ERL_OPTS ?=$/;"	m
EUNIT_HRL_MODS	deps/ranch/erlang.mk	/^EUNIT_HRL_MODS = $(subst $(space),$(comma),$(shell \\$/;"	m
EUNIT_MODS	deps/ranch/erlang.mk	/^EUNIT_MODS = $(foreach mod,$(EUNIT_EBIN_MODS) $(filter-out \\$/;"	m
EUNIT_OPTS	deps/ranch/erlang.mk	/^EUNIT_OPTS ?=$/;"	m
EUNIT_TEST_MODS	deps/ranch/erlang.mk	/^EUNIT_TEST_MODS = $(notdir $(basename $(call core_find,$(TEST_DIR)\/,*.erl)))$/;"	m
ExpectedPart	deps/lager/test/pr_stacktrace_test.erl	/^ExpectedPart = "$/;"	f	module:pr_stacktrace_test
FILENAMES	deps/lager/src/lager_app.erl	/^-define(FILENAMES, '__lager_file_backend_filenames').$/;"	d
GLOBAL	deps/lager/src/lager_config.erl	/^-define(GLOBAL, '_global').$/;"	d
IGNORE_DEPS	deps/ranch/erlang.mk	/^IGNORE_DEPS ?=$/;"	m
INFO	deps/lager/include/lager.hrl	/^-define(INFO, 64).$/;"	d
INT_LOG	deps/lager/include/lager.hrl	/^-define(INT_LOG(Level, Format, Args),$/;"	d
KERL	deps/ranch/erlang.mk	/^KERL := $(ERLANG_MK_TMP)\/kerl\/kerl$/;"	m
KERL_COMMIT	deps/ranch/erlang.mk	/^KERL_COMMIT ?= master$/;"	m
KERL_GIT	deps/ranch/erlang.mk	/^KERL_GIT ?= https:\/\/github.com\/kerl\/kerl$/;"	m
KERL_MAKEFLAGS	deps/ranch/erlang.mk	/^KERL_MAKEFLAGS ?=$/;"	m
K_TIMEOUT	src/ecache_protocol.erl	/^-define(K_TIMEOUT, 90000).$/;"	d
LAGER_MD_KEY	deps/lager/src/lager.erl	/^-define(LAGER_MD_KEY, '__lager_metadata').$/;"	d
LDFLAGS	deps/ranch/erlang.mk	/^	LDFLAGS ?= -arch x86_64 -flat_namespace -undefined suppress$/;"	m
LEVEL2NUM	deps/lager/include/lager.hrl	/^-define(LEVEL2NUM(Level),$/;"	d
LEVELS	deps/lager/include/lager.hrl	/^-define(LEVELS,$/;"	d
LEVELS_UNSAFE	deps/lager/include/lager.hrl	/^-define(LEVELS_UNSAFE,$/;"	d
LIFE_SPAN	src/ecache_protocol.erl	/^-define(LIFE_SPAN, 6).$/;"	d
LOCAL_DEPS	deps/ranch/Makefile	/^LOCAL_DEPS = ssl$/;"	m
LOCAL_PLT	deps/lager/tools.mk	/^LOCAL_PLT = .local_dialyzer_plt$/;"	m
LOGFMT	deps/lager/src/error_logger_lager_h.erl	/^-define(LOGFMT(Sink, Level, Pid, Fmt, Args),$/;"	d
LOGMSG	deps/lager/src/error_logger_lager_h.erl	/^-define(LOGMSG(Sink, Level, Pid, Msg),$/;"	d
LOG_NONE	deps/lager/include/lager.hrl	/^-define(LOG_NONE, 0).$/;"	d
MAN_INSTALL_PATH	deps/ranch/erlang.mk	/^MAN_INSTALL_PATH ?= \/usr\/local\/share\/man$/;"	m
MAN_PROJECT	deps/ranch/erlang.mk	/^MAN_PROJECT ?= $(shell echo $(PROJECT) | sed 's\/^.\/\\U&\\E\/')$/;"	m
MAN_SECTIONS	deps/ranch/erlang.mk	/^MAN_SECTIONS ?= 3 7$/;"	m
MAN_VERSION	deps/ranch/erlang.mk	/^MAN_VERSION ?= $(PROJECT_VERSION)$/;"	m
MIB_FILES	deps/ranch/erlang.mk	/^MIB_FILES = $(sort $(call core_find,mibs\/,*.mib))$/;"	m
NOTICE	deps/lager/include/lager.hrl	/^-define(NOTICE, 32).$/;"	d
NOTIFY	deps/lager/include/lager.hrl	/^-define(NOTIFY(Level, Pid, Format, Args),$/;"	d
NUM2LEVEL	deps/lager/include/lager.hrl	/^-define(NUM2LEVEL(Num),$/;"	d
OBJECTS	deps/ranch/erlang.mk	/^OBJECTS = $(addsuffix .o, $(basename $(SOURCES)))$/;"	m
OTP_GIT	deps/ranch/erlang.mk	/^OTP_GIT ?= https:\/\/github.com\/erlang\/otp$/;"	m
PLATFORM	deps/ranch/erlang.mk	/^PLATFORM = darwin$/;"	m
PLATFORM	deps/ranch/erlang.mk	/^PLATFORM = dragonfly$/;"	m
PLATFORM	deps/ranch/erlang.mk	/^PLATFORM = freebsd$/;"	m
PLATFORM	deps/ranch/erlang.mk	/^PLATFORM = gnu$/;"	m
PLATFORM	deps/ranch/erlang.mk	/^PLATFORM = linux$/;"	m
PLATFORM	deps/ranch/erlang.mk	/^PLATFORM = msys2$/;"	m
PLATFORM	deps/ranch/erlang.mk	/^PLATFORM = netbsd$/;"	m
PLATFORM	deps/ranch/erlang.mk	/^PLATFORM = openbsd$/;"	m
PLATFORM	deps/ranch/erlang.mk	/^PLATFORM = solaris$/;"	m
PLT	deps/lager/tools.mk	/^PLT ?= $(HOME)\/.combo_dialyzer_plt$/;"	m
PLT_APPS	deps/ranch/Makefile	/^PLT_APPS = crypto public_key ssl$/;"	m
PLT_APPS	deps/ranch/erlang.mk	/^PLT_APPS ?=$/;"	m
POLL_NEXT_MESSAGE_TTL	src/ecache_protocol.erl	/^-define(POLL_NEXT_MESSAGE_TTL, 15000).$/;"	d
PROJECT	deps/lager/tools.mk	/^PROJECT ?= $(shell basename `find src -name "*.app.src"` .app.src)$/;"	m
PROJECT	deps/ranch/Makefile	/^PROJECT = ranch$/;"	m
PROJECT	deps/ranch/erlang.mk	/^PROJECT := $(strip $(PROJECT))$/;"	m
PROJECT	deps/ranch/erlang.mk	/^PROJECT ?= $(notdir $(CURDIR))$/;"	m
PROJECT	deps/ranch/examples/tcp_echo/Makefile	/^PROJECT = tcp_echo$/;"	m
PROJECT	deps/ranch/examples/tcp_reverse/Makefile	/^PROJECT = tcp_reverse$/;"	m
PROJECT_DESCRIPTION	deps/ranch/Makefile	/^PROJECT_DESCRIPTION = Socket acceptor pool for TCP protocols.$/;"	m
PROJECT_ENV	deps/ranch/erlang.mk	/^PROJECT_ENV ?= []$/;"	m
PROJECT_MOD	deps/ranch/erlang.mk	/^PROJECT_MOD ?= $(PROJECT)_app$/;"	m
PROJECT_REGISTERED	deps/ranch/Makefile	/^PROJECT_REGISTERED = ranch_server$/;"	m
PROJECT_VERSION	deps/ranch/Makefile	/^PROJECT_VERSION = 1.4.0$/;"	m
PROJECT_VERSION	deps/ranch/erlang.mk	/^PROJECT_VERSION ?= rolling$/;"	m
QC_OUT	deps/lager/test/trunc_io_eqc.erl	/^-define(QC_OUT(P),$/;"	d
REBAR	deps/goldrush/Makefile	/^REBAR = rebar$/;"	m
REBAR	deps/lager/tools.mk	/^REBAR ?= .\/rebar$/;"	m
REBAR_DEPS_DIR	deps/ranch/erlang.mk	/^REBAR_DEPS_DIR = $(DEPS_DIR)$/;"	m
RELX	deps/ranch/erlang.mk	/^RELX ?= $(ERLANG_MK_TMP)\/relx$/;"	m
RELX_CONFIG	deps/ranch/erlang.mk	/^RELX_CONFIG ?= $(CURDIR)\/relx.config$/;"	m
RELX_OPTS	deps/ranch/erlang.mk	/^RELX_OPTS ?=$/;"	m
RELX_OUTPUT_DIR	deps/ranch/erlang.mk	/^	RELX_OUTPUT_DIR = $(word 2,$(RELX_OPTS))$/;"	m
RELX_OUTPUT_DIR	deps/ranch/erlang.mk	/^RELX_OUTPUT_DIR ?= _rel$/;"	m
RELX_REL	deps/ranch/erlang.mk	/^RELX_REL := $(shell $(call erlang,$(get_relx_release.erl)))$/;"	m
RELX_REL_NAME	deps/ranch/erlang.mk	/^RELX_REL_NAME := $(word 1,$(RELX_REL))$/;"	m
RELX_REL_VSN	deps/ranch/erlang.mk	/^RELX_REL_VSN := $(word 2,$(RELX_REL))$/;"	m
RELX_URL	deps/ranch/erlang.mk	/^RELX_URL ?= https:\/\/github.com\/erlware\/relx\/releases\/download\/v3.19.0\/relx$/;"	m
REVISION	deps/lager/tools.mk	/^REVISION ?= $(shell git rev-parse --short HEAD)$/;"	m
ROTATE_TIMEOUT	deps/lager/src/lager.erl	/^-define(ROTATE_TIMEOUT, 100000).$/;"	d
SERVER	deps/goldrush/src/gr_manager.erl	/^-define(SERVER, ?MODULE).$/;"	d
SFX_ARCHIVE	deps/ranch/erlang.mk	/^SFX_ARCHIVE ?= $(RELX_OUTPUT_DIR)\/$(RELX_REL_NAME)\/$(RELX_REL_NAME)-$(RELX_REL_VSN).tar.gz$/;"	m
SFX_OUTPUT_FILE	deps/ranch/erlang.mk	/^SFX_OUTPUT_FILE ?= $(RELX_OUTPUT_DIR)\/$(RELX_REL_NAME).run$/;"	m
SHELL_ERL	deps/ranch/erlang.mk	/^SHELL_ERL ?= erl$/;"	m
SHELL_OPTS	deps/ranch/erlang.mk	/^SHELL_OPTS ?=$/;"	m
SHELL_PATHS	deps/ranch/erlang.mk	/^SHELL_PATHS ?= $(CURDIR)\/ebin $(APPS_DIR)\/*\/ebin $(DEPS_DIR)\/*\/ebin$/;"	m
SHOULD_LOG	deps/lager/include/lager.hrl	/^-define(SHOULD_LOG(Level),$/;"	d
SHOULD_LOG	deps/lager/include/lager.hrl	/^-define(SHOULD_LOG(Sink, Level),$/;"	d
SOURCES	deps/ranch/erlang.mk	/^SOURCES := $(sort $(foreach pat,*.c *.C *.cc *.cpp,$(call core_find,$(C_SRC_DIR)\/,$(pat))))$/;"	m
STATUS_AUTHED	src/ecache_protocol.erl	/^-define(STATUS_AUTHED,                  'STATUS_AUTHED').               % 认证成功$/;"	d
STATUS_WAITING_AUTH	src/ecache_protocol.erl	/^-define(STATUS_WAITING_AUTH,            'STATUS_WAITING_AUTH').         % 等待认证$/;"	d
STATUS_WAITING_SHUTDOWN	src/ecache_protocol.erl	/^-define(STATUS_WAITING_SHUTDOWN,        'STATUS_WAITING_SHUTDOWN').     % 验证失败，程序等待被杀死$/;"	d
TAB	deps/ranch/src/ranch_server.erl	/^-define(TAB, ?MODULE).$/;"	d
TBL	deps/lager/src/lager_config.erl	/^-define(TBL, lager_config).$/;"	d
TERSE_FORMAT	deps/lager/src/lager_common_test_backend.erl	/^-define(TERSE_FORMAT,[time, " ", color, "[", severity,"] ", message]).$/;"	d
TERSE_FORMAT	deps/lager/src/lager_console_backend.erl	/^-define(TERSE_FORMAT,[time, " ", color, "[", severity,"] ", message]).$/;"	d
TEST_DEPS	deps/ranch/Makefile	/^TEST_DEPS = ct_helper$/;"	m
TEST_DIR	deps/ranch/erlang.mk	/^TEST_DIR ?= $(CURDIR)\/test$/;"	m
TEST_ERLC_OPTS	deps/ranch/erlang.mk	/^TEST_ERLC_OPTS ?= +debug_info +warn_export_vars +warn_shadow_vars +warn_obsolete_guard$/;"	m
TEST_SINK_EVENT	deps/lager/test/lager_manager_killer_test.erl	/^-define(TEST_SINK_EVENT, '__lager_test_sink_lager_event'). %% <-- used by lager API calls and internals for gen_event$/;"	d
TEST_SINK_EVENT	deps/lager/test/lager_test_backend.erl	/^-define(TEST_SINK_EVENT, '__lager_test_sink_lager_event'). %% <-- used by lager API calls and internals for gen_event$/;"	d
TEST_SINK_NAME	deps/lager/test/lager_manager_killer_test.erl	/^-define(TEST_SINK_NAME, '__lager_test_sink').              %% <-- used by parse transform$/;"	d
TEST_SINK_NAME	deps/lager/test/lager_test_backend.erl	/^-define(TEST_SINK_NAME, '__lager_test_sink').              %% <-- used by parse transform$/;"	d
THROTTLE	deps/lager/src/lager_app.erl	/^-define(THROTTLE, lager_backend_throttle).$/;"	d
TIMEOUT	deps/ranch/examples/tcp_reverse/src/reverse_protocol.erl	/^-define(TIMEOUT, 5000).$/;"	d
TOGGLE_ASYNC	deps/lager/src/lager_backend_throttle.erl	/^-define(TOGGLE_ASYNC(), test_increment(async_toggled)).$/;"	d
TOGGLE_ASYNC	deps/lager/src/lager_backend_throttle.erl	/^-define(TOGGLE_ASYNC(), true).$/;"	d
TOGGLE_SYNC	deps/lager/src/lager_backend_throttle.erl	/^-define(TOGGLE_SYNC(), test_increment(sync_toggled)).$/;"	d
TOGGLE_SYNC	deps/lager/src/lager_backend_throttle.erl	/^-define(TOGGLE_SYNC(), true).$/;"	d
TRACE_SINK	deps/lager/src/lager.erl	/^-define(TRACE_SINK, '__trace_sink').$/;"	d
UNAME_S	deps/ranch/erlang.mk	/^UNAME_S := $(shell uname -s)$/;"	m
V	deps/ranch/erlang.mk	/^V ?= 0$/;"	m
WARNING	deps/lager/include/lager.hrl	/^-define(WARNING, 16).$/;"	d
WS	deps/ranch/erlang.mk	/^WS = $(subst a,,a $(wordlist 1,$(SP),a a a a a a a a a a a a a a a a a a a a))$/;"	m
WS	deps/ranch/erlang.mk	/^WS = $(tab)$/;"	m
XREFR	deps/ranch/erlang.mk	/^XREFR ?= $(CURDIR)\/xrefr$/;"	m
XREFR_ARGS	deps/ranch/erlang.mk	/^	XREFR_ARGS := -c $(XREF_CONFIG)$/;"	m
XREFR_ARGS	deps/ranch/erlang.mk	/^	XREFR_ARGS :=$/;"	m
XREFR_URL	deps/ranch/erlang.mk	/^XREFR_URL ?= https:\/\/github.com\/inaka\/xref_runner\/releases\/download\/0.2.2\/xrefr$/;"	m
XRL_ERL_FILES	deps/ranch/erlang.mk	/^XRL_ERL_FILES = $(addprefix src\/,$(patsubst %.xrl,%.erl,$(notdir $(XRL_FILES))))$/;"	m
XRL_FILES	deps/ranch/erlang.mk	/^XRL_FILES := $(filter %.xrl,$(ALL_SRC_FILES))$/;"	m
YRL_ERL_FILES	deps/ranch/erlang.mk	/^YRL_ERL_FILES = $(addprefix src\/,$(patsubst %.yrl,%.erl,$(notdir $(YRL_FILES))))$/;"	m
YRL_FILES	deps/ranch/erlang.mk	/^YRL_FILES := $(filter %.yrl,$(ALL_SRC_FILES))$/;"	m
a	deps/lager/test/compress_pr_record_test.erl	/^-record(a, {field1, field2, foo, bar, baz, zyu, zix}).$/;"	r
a	deps/lager/test/pr_nested_record_test.erl	/^-record(a, {field1 :: term(), field2 :: term()}).$/;"	r
abstract_all	deps/goldrush/src/glc_code.erl	/^abstract_all([H|T], OnMatch, OnNomatch, State) ->$/;"	f	module:glc_code
abstract_all	deps/goldrush/src/glc_code.erl	/^abstract_all([], OnMatch, _OnNomatch, State) ->$/;"	f	module:glc_code
abstract_any	deps/goldrush/src/glc_code.erl	/^abstract_any([H|T], OnMatch, OnNomatch, State) ->$/;"	f	module:glc_code
abstract_any	deps/goldrush/src/glc_code.erl	/^abstract_any([], _OnMatch, OnNomatch, State) ->$/;"	f	module:glc_code
abstract_apply	deps/goldrush/src/glc_code.erl	/^abstract_apply(Function, Arguments) ->$/;"	f	module:glc_code
abstract_apply	deps/goldrush/src/glc_code.erl	/^abstract_apply(Module, Function, Arguments) ->$/;"	f	module:glc_code
abstract_count	deps/goldrush/src/glc_code.erl	/^abstract_count(Counter) ->$/;"	f	module:glc_code
abstract_count	deps/goldrush/src/glc_code.erl	/^abstract_count(Counter, Value) ->$/;"	f	module:glc_code
abstract_count	deps/goldrush/src/glc_code.erl	/^abstract_count(Counter, Value) when is_integer(Value) ->$/;"	f	module:glc_code
abstract_filter	deps/goldrush/src/glc_code.erl	/^abstract_filter(Cond, _Data, State) ->$/;"	f	module:glc_code
abstract_filter	deps/goldrush/src/glc_code.erl	/^abstract_filter([{with, _Cond, _Fun}|_] = I, Data, State) ->$/;"	f	module:glc_code
abstract_filter	deps/goldrush/src/glc_code.erl	/^abstract_filter({Type, [{with, _Cond, _Fun}|_] = I}, Data, State) when Type =:= all; Type =:= any ->$/;"	f	module:glc_code
abstract_filter	deps/goldrush/src/glc_code.erl	/^abstract_filter({with, Cond, Fun}, Data, State) ->$/;"	f	module:glc_code
abstract_filter_	deps/goldrush/src/glc_code.erl	/^abstract_filter_({'all', Conds}, OnMatch, OnNomatch, State) ->$/;"	f	module:glc_code
abstract_filter_	deps/goldrush/src/glc_code.erl	/^abstract_filter_({'any', Conds}, OnMatch, OnNomatch, State) ->$/;"	f	module:glc_code
abstract_filter_	deps/goldrush/src/glc_code.erl	/^abstract_filter_({Key, '!'}, OnMatch, OnNomatch, State) ->$/;"	f	module:glc_code
abstract_filter_	deps/goldrush/src/glc_code.erl	/^abstract_filter_({Key, '*'}, OnMatch, OnNomatch, State) ->$/;"	f	module:glc_code
abstract_filter_	deps/goldrush/src/glc_code.erl	/^abstract_filter_({Key, Op, Value}, OnMatch, OnNomatch, State)$/;"	f	module:glc_code
abstract_filter_	deps/goldrush/src/glc_code.erl	/^abstract_filter_({null, false}, _OnMatch, OnNomatch, State) ->$/;"	f	module:glc_code
abstract_filter_	deps/goldrush/src/glc_code.erl	/^abstract_filter_({null, true}, OnMatch, _OnNomatch, State) ->$/;"	f	module:glc_code
abstract_get	deps/goldrush/src/glc_code.erl	/^abstract_get(#module{'query'=_Query, store=Store}) ->$/;"	f	module:glc_code
abstract_get	deps/goldrush/src/glc_code.erl	/^abstract_get(#module{'query'=_Query, store=undefined}) ->$/;"	f	module:glc_code
abstract_getcount	deps/goldrush/src/glc_code.erl	/^abstract_getcount(Counter) ->$/;"	f	module:glc_code
abstract_getcount	deps/goldrush/src/glc_code.erl	/^abstract_getcount(Counter) when is_atom(Counter) ->$/;"	f	module:glc_code
abstract_getkey	deps/goldrush/src/glc_code.erl	/^abstract_getkey(Key, OnMatch, OnNomatch, #state{fields=Fields}=State) ->$/;"	f	module:glc_code
abstract_getkey_	deps/goldrush/src/glc_code.erl	/^abstract_getkey_(Key, OnMatch, OnNomatch, #state{$/;"	f	module:glc_code
abstract_getparam	deps/goldrush/src/glc_code.erl	/^abstract_getparam(Term, OnBound, #state{paramvars=Params}=State) ->$/;"	f	module:glc_code
abstract_getparam	deps/goldrush/src/glc_code.erl	/^abstract_getparam([_|_]=Terms, OnBound, #state{paramvars=_Params, fields=_Fields,$/;"	f	module:glc_code
abstract_getparam_key	deps/goldrush/src/glc_code.erl	/^abstract_getparam_key(Term, ParamsTable) ->$/;"	f	module:glc_code
abstract_info	deps/goldrush/src/glc_code.erl	/^abstract_info(#module{'query'=Query}) ->$/;"	f	module:glc_code
abstract_job	deps/goldrush/src/glc_code.erl	/^abstract_job(Time) ->$/;"	f	module:glc_code
abstract_job	deps/goldrush/src/glc_code.erl	/^abstract_job(Time, Error) ->$/;"	f	module:glc_code
abstract_module	deps/goldrush/src/glc_code.erl	/^abstract_module(Module, Data) ->$/;"	f	module:glc_code
abstract_module_	deps/goldrush/src/glc_code.erl	/^abstract_module_(Module, #module{tables=Tables, $/;"	f	module:glc_code
abstract_opfilter	deps/goldrush/src/glc_code.erl	/^abstract_opfilter(Key, Opname, Value, OnMatch, OnNomatch, State) ->$/;"	f	module:glc_code
abstract_query	deps/goldrush/src/glc_code.erl	/^abstract_query(Query) ->$/;"	f	module:glc_code
abstract_query	deps/goldrush/src/glc_code.erl	/^abstract_query([{with, _Query, _}|_] = I) ->$/;"	f	module:glc_code
abstract_query	deps/goldrush/src/glc_code.erl	/^abstract_query({all, [{with, _Q, _A}|_] = I}) ->$/;"	f	module:glc_code
abstract_query	deps/goldrush/src/glc_code.erl	/^abstract_query({any, [{with, _Q, _A}|_] = I}) ->$/;"	f	module:glc_code
abstract_query	deps/goldrush/src/glc_code.erl	/^abstract_query({with, Query, _}) ->$/;"	f	module:glc_code
abstract_query_find	deps/goldrush/src/glc_code.erl	/^abstract_query_find(K, Store) ->$/;"	f	module:glc_code
abstract_reset	deps/goldrush/src/glc_code.erl	/^abstract_reset() ->$/;"	f	module:glc_code
abstract_resetcount	deps/goldrush/src/glc_code.erl	/^abstract_resetcount(Counter) ->$/;"	f	module:glc_code
abstract_runjob	deps/goldrush/src/glc_code.erl	/^abstract_runjob(#module{'query'=_Query, store=_Store}) ->$/;"	f	module:glc_code
abstract_tables	deps/goldrush/src/glc_code.erl	/^abstract_tables(Tables) ->$/;"	f	module:glc_code
abstract_with	deps/goldrush/src/glc_code.erl	/^abstract_with(Fun, Data, State) when is_function(Fun, 1); is_function(Fun, 2)  ->$/;"	f	module:glc_code
abstract_with	deps/goldrush/src/glc_code.erl	/^abstract_with([Fun0|_] = Funs, Data, State) $/;"	f	module:glc_code
abstract_with_	deps/goldrush/src/glc_code.erl	/^abstract_with_({Fun, Fun2}, Event, #module{store=Store}) ->$/;"	f	module:glc_code
abstract_within	deps/goldrush/src/glc_code.erl	/^abstract_within([], OnNomatch, State) ->$/;"	f	module:glc_code
abstract_within	deps/goldrush/src/glc_code.erl	/^abstract_within([{H, Fun, Data}|T], OnNomatch, State) ->$/;"	f	module:glc_code
accept	deps/ranch/src/ranch_ssl.erl	/^accept(LSocket, Timeout) ->$/;"	f	module:ranch_ssl
accept	deps/ranch/src/ranch_tcp.erl	/^accept(LSocket, Timeout) ->$/;"	f	module:ranch_tcp
accept_ack	deps/ranch/src/ranch.erl	/^accept_ack(Ref) ->$/;"	f	module:ranch
accept_ack	deps/ranch/src/ranch_ssl.erl	/^accept_ack(CSocket, Timeout) ->$/;"	f	module:ranch_ssl
accept_ack	deps/ranch/src/ranch_tcp.erl	/^accept_ack(_, _) ->$/;"	f	module:ranch_tcp
acceptor_SUITE	deps/ranch/test/acceptor_SUITE.erl	/^-module(acceptor_SUITE).$/;"	m
active_connections	deps/ranch/src/ranch_conns_sup.erl	/^active_connections(SupPid) ->$/;"	f	module:ranch_conns_sup
active_echo_protocol	deps/ranch/test/active_echo_protocol.erl	/^-module(active_echo_protocol).$/;"	m
add_configured_traces	deps/lager/src/lager_app.erl	/^add_configured_traces() ->$/;"	f	module:lager_app
add_secs	deps/lager/src/lager_file_backend.erl	/^add_secs({Mega, Secs, Micro}, Add) ->$/;"	f	module:lager_file_backend
add_trace_to_loglevel_config	deps/lager/src/lager.erl	/^add_trace_to_loglevel_config(Trace, Sink) ->$/;"	f	module:lager
adjust	deps/lager/src/lager_format.erl	/^adjust(Data, Pad, left) -> [Data|Pad];$/;"	f	module:lager_format
adjust	deps/lager/src/lager_format.erl	/^adjust(Data, Pad, right) -> [Pad|Data].$/;"	f	module:lager_format
adjust	deps/lager/src/lager_format.erl	/^adjust(Data, [], _) -> Data;$/;"	f	module:lager_format
alist	deps/lager/src/lager_trunc_io.erl	/^alist(H, _Max, _Options) ->$/;"	f	module:lager_trunc_io
alist	deps/lager/src/lager_trunc_io.erl	/^alist([H|T], Max, #print_options{force_strings=true} = Options) when is_integer(H) ->$/;"	f	module:lager_trunc_io
alist	deps/lager/src/lager_trunc_io.erl	/^alist([H|T], Max, Options = #print_options{force_strings=false,lists_as_strings=true}) when H =:= $"; H =:= $\\\\ ->$/;"	f	module:lager_trunc_io
alist	deps/lager/src/lager_trunc_io.erl	/^alist([H|T], Max, Options = #print_options{force_strings=true}) when is_binary(H); is_list(H) ->$/;"	f	module:lager_trunc_io
alist	deps/lager/src/lager_trunc_io.erl	/^alist([H|T], Max, Options) when H =:= $\\t; H =:= $\\n; H =:= $\\r; H =:= $\\v; H =:= $\\e; H=:= $\\f; H=:= $\\b ->$/;"	f	module:lager_trunc_io
alist	deps/lager/src/lager_trunc_io.erl	/^alist([H|T], Max, Options) when is_integer(H), H >= 16#20, H =< 16#7e ->     % definitely printable$/;"	f	module:lager_trunc_io
alist	deps/lager/src/lager_trunc_io.erl	/^alist([H|T], Max, Options) when is_integer(H), H >= 16#a0, H =< 16#ff ->     % definitely printable$/;"	f	module:lager_trunc_io
alist	deps/lager/src/lager_trunc_io.erl	/^alist([H|_L], _Max, _Options) ->$/;"	f	module:lager_trunc_io
alist	deps/lager/src/lager_trunc_io.erl	/^alist([], _Max, #print_options{force_strings=true}) -> {"", 0};$/;"	f	module:lager_trunc_io
alist	deps/lager/src/lager_trunc_io.erl	/^alist([], _Max, _Options) -> {"\\"", 1};$/;"	f	module:lager_trunc_io
alist	deps/lager/src/lager_trunc_io.erl	/^alist(_, Max, #print_options{force_strings=false}) when Max < 5 -> {"...\\"", 4};$/;"	f	module:lager_trunc_io
alist	deps/lager/src/lager_trunc_io.erl	/^alist(_, Max, #print_options{force_strings=true}) when Max < 4 -> {"...", 3};$/;"	f	module:lager_trunc_io
alist	deps/lager/src/lager_trunc_io.erl	/^alist(_, _, #print_options{force_strings=true}) ->$/;"	f	module:lager_trunc_io
alist_start	deps/lager/src/lager_trunc_io.erl	/^alist_start(L, Max, #print_options{force_strings=true} = Options) ->$/;"	f	module:lager_trunc_io
alist_start	deps/lager/src/lager_trunc_io.erl	/^alist_start(L, Max, Options) ->$/;"	f	module:lager_trunc_io
alist_start	deps/lager/src/lager_trunc_io.erl	/^alist_start([H|T], Max, Options) when H =:= $\\t; H =:= $\\n; H =:= $\\r; H =:= $\\v; H =:= $\\e; H=:= $\\f; H=:= $\\b ->$/;"	f	module:lager_trunc_io
alist_start	deps/lager/src/lager_trunc_io.erl	/^alist_start([H|T], Max, Options) when is_integer(H), H >= 16#20, H =< 16#7e ->  % definitely printable$/;"	f	module:lager_trunc_io
alist_start	deps/lager/src/lager_trunc_io.erl	/^alist_start([H|T], Max, Options) when is_integer(H), H >= 16#a0, H =< 16#ff ->  % definitely printable$/;"	f	module:lager_trunc_io
alist_start	deps/lager/src/lager_trunc_io.erl	/^alist_start([], _Max, #print_options{force_strings=true}) -> {"", 0};$/;"	f	module:lager_trunc_io
alist_start	deps/lager/src/lager_trunc_io.erl	/^alist_start([], _Max, _Options) -> {"[]", 2};$/;"	f	module:lager_trunc_io
alist_start	deps/lager/src/lager_trunc_io.erl	/^alist_start(_, Max, _Options) when Max < 4 -> {"...", 3};$/;"	f	module:lager_trunc_io
alist_start	deps/lager/src/lager_trunc_io.erl	/^alist_start(_, _Max, #print_options{depth=0}) -> {"[...]", 5};$/;"	f	module:lager_trunc_io
all	deps/goldrush/src/glc.erl	/^all(Filters) ->$/;"	f	module:glc
all	deps/goldrush/src/glc_ops.erl	/^all(Other) ->$/;"	f	module:glc_ops
all	deps/goldrush/src/glc_ops.erl	/^all([_|_]=Conds) ->$/;"	f	module:glc_ops
all	deps/ranch/test/acceptor_SUITE.erl	/^all() ->$/;"	f	module:acceptor_SUITE
all	deps/ranch/test/sendfile_SUITE.erl	/^all() ->$/;"	f	module:sendfile_SUITE
all	deps/ranch/test/shutdown_SUITE.erl	/^all() ->$/;"	f	module:shutdown_SUITE
all_changed	src/reloader.erl	/^all_changed() ->$/;"	f	module:reloader
all_common_test	deps/goldrush/src/glc_lib.erl	/^all_common_test() ->$/;"	f	module:glc_lib
all_equiv_test	deps/goldrush/src/glc_lib.erl	/^all_equiv_test() ->$/;"	f	module:glc_lib
all_nest_test	deps/goldrush/src/glc_lib.erl	/^all_nest_test() ->$/;"	f	module:glc_lib
all_one_test	deps/goldrush/src/glc_lib.erl	/^all_one_test() ->$/;"	f	module:glc_lib
all_sort_test	deps/goldrush/src/glc_lib.erl	/^all_sort_test() ->$/;"	f	module:glc_lib
all_two_test	deps/goldrush/src/glc_lib.erl	/^all_two_test() ->$/;"	f	module:glc_lib
analyze_exception	deps/lager/src/lager_stdlib.erl	/^analyze_exception(_Class, Term, Stack) ->$/;"	f	module:lager_stdlib
analyze_exception	deps/lager/src/lager_stdlib.erl	/^analyze_exception(error, Term, Stack) ->$/;"	f	module:lager_stdlib
any	deps/goldrush/src/glc.erl	/^any(Filters) ->$/;"	f	module:glc
any	deps/goldrush/src/glc_ops.erl	/^any(Other) ->$/;"	f	module:glc_ops
any	deps/goldrush/src/glc_ops.erl	/^any([_|_]=Conds) ->$/;"	f	module:glc_ops
any_equiv_test	deps/goldrush/src/glc_lib.erl	/^any_equiv_test() ->$/;"	f	module:glc_lib
any_nest_test	deps/goldrush/src/glc_lib.erl	/^any_nest_test() ->$/;"	f	module:glc_lib
any_one_test	deps/goldrush/src/glc_lib.erl	/^any_one_test() ->$/;"	f	module:glc_lib
any_required_test	deps/goldrush/src/glc_lib.erl	/^any_required_test() ->$/;"	f	module:glc_lib
any_sort_test	deps/goldrush/src/glc_lib.erl	/^any_sort_test() ->$/;"	f	module:glc_lib
app_file	deps/ranch/erlang.mk	/^define app_file$/;"	m
app_verbose	deps/ranch/erlang.mk	/^app_verbose = $(app_verbose_$(V))$/;"	m
app_verbose_0	deps/ranch/erlang.mk	/^app_verbose_0 = @echo " APP   " $(PROJECT);$/;"	m
app_verbose_2	deps/ranch/erlang.mk	/^app_verbose_2 = set -x;$/;"	m
append	deps/goldrush/src/gre.erl	/^append(KeyVal, {list, List}) ->$/;"	f	module:gre
application	deps/goldrush/src/gr_context.erl	/^application(Pid) ->$/;"	f	module:gr_context
application	deps/goldrush/src/gr_context.erl	/^application(Pid) when Pid =:= self() ->$/;"	f	module:gr_context
application_config_mangling_test_	deps/lager/src/lager_app.erl	/^application_config_mangling_test_() ->$/;"	f	module:lager_app
appsrc_verbose	deps/ranch/erlang.mk	/^appsrc_verbose = $(appsrc_verbose_$(V))$/;"	m
appsrc_verbose_0	deps/ranch/erlang.mk	/^appsrc_verbose_0 = @echo " APP   " $(PROJECT).app.src;$/;"	m
appsrc_verbose_2	deps/ranch/erlang.mk	/^appsrc_verbose_2 = set -x;$/;"	m
argss	deps/lager/src/lager_stdlib.erl	/^argss(0) ->$/;"	f	module:lager_stdlib
argss	deps/lager/src/lager_stdlib.erl	/^argss(1) ->$/;"	f	module:lager_stdlib
argss	deps/lager/src/lager_stdlib.erl	/^argss(2) ->$/;"	f	module:lager_stdlib
argss	deps/lager/src/lager_stdlib.erl	/^argss(I) ->$/;"	f	module:lager_stdlib
asciidoc2man.erl	deps/ranch/erlang.mk	/^define asciidoc2man.erl$/;"	m
asn1_verbose	deps/ranch/erlang.mk	/^asn1_verbose = $(asn1_verbose_$(V))$/;"	m
asn1_verbose_0	deps/ranch/erlang.mk	/^asn1_verbose_0 = @echo " ASN1  " $(filter %.asn1,$(?F));$/;"	m
asn1_verbose_2	deps/ranch/erlang.mk	/^asn1_verbose_2 = set -x;$/;"	m
async_threshold_test_	deps/lager/test/lager_test_backend.erl	/^async_threshold_test_() ->$/;"	f	module:lager_test_backend
atom_needs_quoting	deps/lager/src/lager_trunc_io.erl	/^atom_needs_quoting([H|T]) when (H >= $a andalso H =< $z);$/;"	f	module:lager_trunc_io
atom_needs_quoting	deps/lager/src/lager_trunc_io.erl	/^atom_needs_quoting([]) ->$/;"	f	module:lager_trunc_io
atom_needs_quoting	deps/lager/src/lager_trunc_io.erl	/^atom_needs_quoting(_) ->$/;"	f	module:lager_trunc_io
atom_needs_quoting_start	deps/lager/src/lager_trunc_io.erl	/^atom_needs_quoting_start([H|T]) when H >= $a, H =< $z ->$/;"	f	module:lager_trunc_io
atom_needs_quoting_start	deps/lager/src/lager_trunc_io.erl	/^atom_needs_quoting_start(_) ->$/;"	f	module:lager_trunc_io
atom_quoting_test	deps/lager/src/lager_trunc_io.erl	/^atom_quoting_test() ->$/;"	f	module:lager_trunc_io
auth	src/tcp_client.erl	/^auth() ->$/;"	f	module:tcp_client
b	deps/lager/test/pr_nested_record_test.erl	/^-record(b, {field1 :: term() , field2 :: term()}).$/;"	r
bad_arg	deps/lager/test/pr_stacktrace_test.erl	/^bad_arg() ->$/;"	f	module:pr_stacktrace_test
bad_arity	deps/lager/test/pr_stacktrace_test.erl	/^bad_arity() ->$/;"	f	module:pr_stacktrace_test
base	deps/lager/src/lager_format.erl	/^base(B) when is_integer(B) ->$/;"	f	module:lager_format
base	deps/lager/src/lager_format.erl	/^base(none) ->$/;"	f	module:lager_format
basic_test_	deps/lager/src/lager_default_formatter.erl	/^basic_test_() ->$/;"	f	module:lager_default_formatter
binary_printing_test	deps/lager/src/lager_trunc_io.erl	/^binary_printing_test() ->$/;"	f	module:lager_trunc_io
bitstring_printing_test	deps/lager/src/lager_trunc_io.erl	/^bitstring_printing_test() ->$/;"	f	module:lager_trunc_io
boot	deps/lager/src/lager_app.erl	/^boot('__all_extra') ->$/;"	f	module:lager_app
boot	deps/lager/src/lager_app.erl	/^boot('__traces') ->$/;"	f	module:lager_app
boot	deps/lager/src/lager_app.erl	/^boot() ->$/;"	f	module:lager_app
boot	deps/lager/src/lager_app.erl	/^boot(?DEFAULT_SINK) -> boot();$/;"	f	module:lager_app
boot	deps/lager/src/lager_app.erl	/^boot(Sink) ->$/;"	f	module:lager_app
boot_sink	deps/lager/src/lager_app.erl	/^boot_sink(Sink, false) ->$/;"	f	module:lager_app
boot_sink	deps/lager/src/lager_app.erl	/^boot_sink(Sink, {Sink, Def}) ->$/;"	f	module:lager_app
bounce	deps/lager/src/lager_common_test_backend.erl	/^bounce() ->$/;"	f	module:lager_common_test_backend
bounce	deps/lager/src/lager_common_test_backend.erl	/^bounce(Level) ->$/;"	f	module:lager_common_test_backend
brackets_to_parens	deps/lager/src/lager_stdlib.erl	/^brackets_to_parens(S) ->$/;"	f	module:lager_stdlib
brutal_kill	deps/ranch/test/shutdown_SUITE.erl	/^brutal_kill(_) ->$/;"	f	module:shutdown_SUITE
bs_Makefile	deps/ranch/erlang.mk	/^define bs_Makefile$/;"	m
bs_app	deps/ranch/erlang.mk	/^define bs_app$/;"	m
bs_apps_Makefile	deps/ranch/erlang.mk	/^define bs_apps_Makefile$/;"	m
bs_appsrc	deps/ranch/erlang.mk	/^define bs_appsrc$/;"	m
bs_appsrc_lib	deps/ranch/erlang.mk	/^define bs_appsrc_lib$/;"	m
bs_c_nif	deps/ranch/erlang.mk	/^define bs_c_nif$/;"	m
bs_erl_nif	deps/ranch/erlang.mk	/^define bs_erl_nif$/;"	m
bs_relx_config	deps/ranch/erlang.mk	/^define bs_relx_config$/;"	m
bs_sys_config	deps/ranch/erlang.mk	/^define bs_sys_config$/;"	m
bs_vm_args	deps/ranch/erlang.mk	/^define bs_vm_args$/;"	m
build	deps/lager/src/lager_format.erl	/^build([$\\n], Acc, MaxLen, #options{chomp=true}) ->$/;"	f	module:lager_format
build	deps/lager/src/lager_format.erl	/^build([$\\n|Cs], Acc, MaxLen, O) ->$/;"	f	module:lager_format
build	deps/lager/src/lager_format.erl	/^build([$\\t|Cs], Acc, MaxLen, O) ->$/;"	f	module:lager_format
build	deps/lager/src/lager_format.erl	/^build([C|Cs], Acc, MaxLen, O) ->$/;"	f	module:lager_format
build	deps/lager/src/lager_format.erl	/^build([], Acc, MaxLen, _O) ->$/;"	f	module:lager_format
build	deps/lager/src/lager_format.erl	/^build([{$n, _, _, _, _, _, _}], Acc, MaxLen, #options{chomp=true}) ->$/;"	f	module:lager_format
build	deps/lager/src/lager_format.erl	/^build([{C,As,F,Ad,P,Pad,Enc}|Cs], Acc, MaxLen, O) ->$/;"	f	module:lager_format
build2	deps/lager/src/lager_format.erl	/^build2([C|Cs], Count, MaxLen) ->$/;"	f	module:lager_format
build2	deps/lager/src/lager_format.erl	/^build2([], _, _) -> [].$/;"	f	module:lager_format
build2	deps/lager/src/lager_format.erl	/^build2([{C,As,F,Ad,P,Pad,Enc}|Cs], Count, MaxLen) ->$/;"	f	module:lager_format
build_fmt_args	deps/lager/test/trunc_io_eqc.erl	/^build_fmt_args(FmtArgs) ->$/;"	f	module:trunc_io_eqc
c_verbose	deps/ranch/erlang.mk	/^c_verbose = $(c_verbose_$(V))$/;"	m
c_verbose_0	deps/ranch/erlang.mk	/^c_verbose_0 = @echo " C     " $(?F);$/;"	m
calculate_fudge	deps/lager/test/trunc_io_eqc.erl	/^calculate_fudge([], Acc) ->$/;"	f	module:trunc_io_eqc
calculate_fudge	deps/lager/test/trunc_io_eqc.erl	/^calculate_fudge([_|T], Acc) ->$/;"	f	module:trunc_io_eqc
calculate_fudge	deps/lager/test/trunc_io_eqc.erl	/^calculate_fudge([{"~62P", _Arg, _Depth}|T], Acc) ->$/;"	f	module:trunc_io_eqc
calculate_fudge	deps/lager/test/trunc_io_eqc.erl	/^calculate_fudge([{Fmt, Arg}|T], Acc) when$/;"	f	module:trunc_io_eqc
calculate_next_rotation	deps/lager/src/lager_util.erl	/^calculate_next_rotation(Spec) ->$/;"	f	module:lager_util
calculate_next_rotation	deps/lager/src/lager_util.erl	/^calculate_next_rotation([], Now) ->$/;"	f	module:lager_util
calculate_next_rotation	deps/lager/src/lager_util.erl	/^calculate_next_rotation([{date, Date}|T], {{Year, Month, Day}, _} = Now) ->$/;"	f	module:lager_util
calculate_next_rotation	deps/lager/src/lager_util.erl	/^calculate_next_rotation([{date, Date}|T], {{_, _, Date}, _} = Now) ->$/;"	f	module:lager_util
calculate_next_rotation	deps/lager/src/lager_util.erl	/^calculate_next_rotation([{date, last}|T], {{Year, Month, Day}, _} = Now) ->$/;"	f	module:lager_util
calculate_next_rotation	deps/lager/src/lager_util.erl	/^calculate_next_rotation([{day, Day}|T], {Date, _Time} = Now) ->$/;"	f	module:lager_util
calculate_next_rotation	deps/lager/src/lager_util.erl	/^calculate_next_rotation([{hour, X}|T], {{_, _, _}, _} = Now) ->$/;"	f	module:lager_util
calculate_next_rotation	deps/lager/src/lager_util.erl	/^calculate_next_rotation([{hour, X}|T], {{_, _, _}, {Hour, _, _}} = Now) when Hour < X ->$/;"	f	module:lager_util
cdata_to_chars	deps/lager/src/lager_format.erl	/^cdata_to_chars(B) when is_binary(B) ->$/;"	f	module:lager_format
cdata_to_chars	deps/lager/src/lager_format.erl	/^cdata_to_chars([C|Cs]) when is_integer(C), C >= $\\000 ->$/;"	f	module:lager_format
cdata_to_chars	deps/lager/src/lager_format.erl	/^cdata_to_chars([I|Cs]) ->$/;"	f	module:lager_format
cdata_to_chars	deps/lager/src/lager_format.erl	/^cdata_to_chars([]) ->$/;"	f	module:lager_format
char	deps/lager/src/lager_format.erl	/^char(C, F, Adj, P, Pad) when F >= P ->$/;"	f	module:lager_format
char	deps/lager/src/lager_format.erl	/^char(C, F, _Adj, none, _Pad) -> chars(C, F);$/;"	f	module:lager_format
char	deps/lager/src/lager_format.erl	/^char(C, none, _Adj, P, _Pad) -> chars(C, P);$/;"	f	module:lager_format
char	deps/lager/src/lager_format.erl	/^char(C, none, _Adj, none, _Pad) -> [C];$/;"	f	module:lager_format
chars	deps/lager/src/lager_format.erl	/^chars(C, 1) ->$/;"	f	module:lager_format
chars	deps/lager/src/lager_format.erl	/^chars(C, 2) ->$/;"	f	module:lager_format
chars	deps/lager/src/lager_format.erl	/^chars(C, 3) ->$/;"	f	module:lager_format
chars	deps/lager/src/lager_format.erl	/^chars(C, N) when is_integer(N) ->$/;"	f	module:lager_format
chars	deps/lager/src/lager_format.erl	/^chars(C, N) when is_integer(N), (N band 1) =:= 0 ->$/;"	f	module:lager_format
chars	deps/lager/src/lager_format.erl	/^chars(_C, 0) ->$/;"	f	module:lager_format
check	deps/lager/test/trunc_io_eqc.erl	/^check() ->$/;"	f	module:trunc_io_eqc
check_data	src/ecache_protocol.erl	/^check_data(_Data) ->$/;"	f	module:ecache_protocol
check_handler_config	deps/lager/src/lager_app.erl	/^check_handler_config(Handler, _BadConfig) ->$/;"	f	module:lager_app
check_handler_config	deps/lager/src/lager_app.erl	/^check_handler_config(_Handler, Config) when is_list(Config) orelse is_atom(Config) ->$/;"	f	module:lager_app
check_handler_config	deps/lager/src/lager_app.erl	/^check_handler_config({lager_file_backend, F}, Config) when is_list(Config); is_tuple(Config) ->$/;"	f	module:lager_app
check_handler_config_test_	deps/lager/src/lager_app.erl	/^check_handler_config_test_() ->$/;"	f	module:lager_app
check_hwm	deps/lager/src/lager_util.erl	/^check_hwm(Shaper = #lager_shaper{hwm = undefined}) ->$/;"	f	module:lager_util
check_hwm	deps/lager/src/lager_util.erl	/^check_hwm(Shaper = #lager_shaper{lasttime = Last, dropped = Drop}) ->$/;"	f	module:lager_util
check_hwm	deps/lager/src/lager_util.erl	/^check_hwm(Shaper = #lager_shaper{mps = Mps, hwm = Hwm}) when Mps < Hwm ->$/;"	f	module:lager_util
check_tcp_options	deps/ranch/test/check_tcp_options.erl	/^-module(check_tcp_options).$/;"	m
check_trace	deps/lager/src/lager_util.erl	/^check_trace(Attrs, {Filter, _Level, Dest}) when is_list(Filter) ->$/;"	f	module:lager_util
check_trace	deps/lager/src/lager_util.erl	/^check_trace(Attrs, {Filter, _Level, Dest}) when is_tuple(Filter) ->$/;"	f	module:lager_util
check_trace_test	deps/lager/src/lager_util.erl	/^check_trace_test() ->$/;"	f	module:lager_util
check_traces	deps/lager/src/lager_util.erl	/^check_traces(Attrs, Level, [Flow|Flows], Acc) ->$/;"	f	module:lager_util
check_traces	deps/lager/src/lager_util.erl	/^check_traces(Attrs, Level, [{Filter, _, _}|Flows], Acc) when length(Attrs) < length(Filter) ->$/;"	f	module:lager_util
check_traces	deps/lager/src/lager_util.erl	/^check_traces(Attrs, Level, [{_, {mask, FilterLevel}, _}|Flows], Acc) when (Level band FilterLevel) == 0 ->$/;"	f	module:lager_util
check_traces	deps/lager/src/lager_util.erl	/^check_traces(_, _,  [], Acc) ->$/;"	f	module:lager_util
child_spec	deps/ranch/src/ranch.erl	/^child_spec(Ref, NumAcceptors, Transport, TransOpts, Protocol, ProtoOpts)$/;"	f	module:ranch
child_spec	deps/ranch/src/ranch.erl	/^child_spec(Ref, Transport, TransOpts, Protocol, ProtoOpts) ->$/;"	f	module:ranch
chunk_size	deps/ranch/src/ranch_transport.erl	/^chunk_size(Opts) ->$/;"	f	module:ranch_transport
ci_hipe_target	deps/ranch/erlang.mk	/^define ci_hipe_target$/;"	m
ci_otp_target	deps/ranch/erlang.mk	/^define ci_otp_target$/;"	m
ci_target	deps/ranch/erlang.mk	/^define ci_target$/;"	m
ci_verbose	deps/ranch/erlang.mk	/^ci_verbose = $(ci_verbose_$(V))$/;"	m
ci_verbose_0	deps/ranch/erlang.mk	/^ci_verbose_0 = @echo " CI    " $(1);$/;"	m
clean_traces	deps/ranch/test/acceptor_SUITE.erl	/^clean_traces() ->$/;"	f	module:acceptor_SUITE
clean_traces	deps/ranch/test/sendfile_SUITE.erl	/^clean_traces() ->$/;"	f	module:sendfile_SUITE
clean_up_config_checks	deps/lager/src/lager_app.erl	/^clean_up_config_checks() ->$/;"	f	module:lager_app
cleanup	deps/lager/test/lager_test_backend.erl	/^cleanup(_) ->$/;"	f	module:lager_test_backend
cleanup_listener_opts	deps/ranch/src/ranch_server.erl	/^cleanup_listener_opts(Ref) ->$/;"	f	module:ranch_server
clear_all_traces	deps/lager/src/lager.erl	/^clear_all_traces() ->$/;"	f	module:lager
clear_traces_by_sink	deps/lager/src/lager.erl	/^clear_traces_by_sink(Sinks) ->$/;"	f	module:lager
client	src/tcp_client.erl	/^client() ->$/;"	f	module:tcp_client
client	src/tcp_client.erl	/^client(Message) ->$/;"	f	module:tcp_client
client	src/tcp_client.erl	/^client(PortNo, Message) ->$/;"	f	module:tcp_client
close	deps/ranch/src/ranch_ssl.erl	/^close(Socket) ->$/;"	f	module:ranch_ssl
close	deps/ranch/src/ranch_tcp.erl	/^close(Socket) ->$/;"	f	module:ranch_tcp
close_file	deps/lager/src/lager_file_backend.erl	/^close_file(#state{fd=FD} = State) ->$/;"	f	module:lager_file_backend
close_file	deps/lager/src/lager_file_backend.erl	/^close_file(#state{fd=undefined} = State) ->$/;"	f	module:lager_file_backend
code_change	deps/goldrush/src/gr_counter.erl	/^code_change(_OldVsn, State, _Extra) ->$/;"	f	module:gr_counter
code_change	deps/goldrush/src/gr_manager.erl	/^code_change(_OldVsn, State, _Extra) ->$/;"	f	module:gr_manager
code_change	deps/goldrush/src/gr_param.erl	/^code_change(_OldVsn, State, _Extra) ->$/;"	f	module:gr_param
code_change	deps/lager/src/error_logger_lager_h.erl	/^code_change(_OldVsn, State, _Extra) ->$/;"	f	module:error_logger_lager_h
code_change	deps/lager/src/error_logger_lager_h.erl	/^code_change(_OldVsn, {state, Shaper, GLStrategy}, _Extra) ->$/;"	f	module:error_logger_lager_h
code_change	deps/lager/src/error_logger_lager_h.erl	/^code_change(_OldVsn, {state, Sink, Shaper, GLS}, _Extra) ->$/;"	f	module:error_logger_lager_h
code_change	deps/lager/src/lager_backend_throttle.erl	/^code_change(_OldVsn, State, _Extra) ->$/;"	f	module:lager_backend_throttle
code_change	deps/lager/src/lager_common_test_backend.erl	/^code_change(_OldVsn, State, _Extra) ->$/;"	f	module:lager_common_test_backend
code_change	deps/lager/src/lager_console_backend.erl	/^code_change(_OldVsn, State, _Extra) ->$/;"	f	module:lager_console_backend
code_change	deps/lager/src/lager_crash_log.erl	/^code_change(_OldVsn, State, _Extra) ->$/;"	f	module:lager_crash_log
code_change	deps/lager/src/lager_file_backend.erl	/^code_change(_OldVsn, State, _Extra) ->$/;"	f	module:lager_file_backend
code_change	deps/lager/src/lager_handler_watcher.erl	/^code_change(_OldVsn, State, _Extra) ->$/;"	f	module:lager_handler_watcher
code_change	deps/lager/src/lager_manager_killer.erl	/^code_change(_OldVsn, State, _Extra) ->$/;"	f	module:lager_manager_killer
code_change	deps/lager/test/crash.erl	/^code_change(_, State, _) ->$/;"	f	module:crash
code_change	deps/lager/test/lager_crash_backend.erl	/^code_change(_OldVsn, State, _Extra) ->$/;"	f	module:lager_crash_backend
code_change	deps/lager/test/lager_slow_backend.erl	/^code_change(_OldVsn, State, _Extra) ->$/;"	f	module:lager_slow_backend
code_change	deps/lager/test/lager_test_backend.erl	/^code_change(_OldVsn, State, _Extra) ->$/;"	f	module:lager_test_backend
code_change	deps/ranch/examples/tcp_reverse/src/reverse_protocol.erl	/^code_change(_OldVsn, State, _Extra) ->$/;"	f	module:reverse_protocol
code_change	deps/ranch/src/ranch_server.erl	/^code_change(_OldVsn, State, _Extra) ->$/;"	f	module:ranch_server
code_change	src/ecache_protocol.erl	/^code_change(OldVsn, SockState, Extra) ->$/;"	f	module:ecache_protocol
code_change	src/reloader.erl	/^code_change(_Vsn, State, _Extra) ->$/;"	f	module:reloader
collect	deps/lager/src/lager_format.erl	/^collect([$~|Fmt0], Args0) ->$/;"	f	module:lager_format
collect	deps/lager/src/lager_format.erl	/^collect([C|Fmt], Args) ->$/;"	f	module:lager_format
collect	deps/lager/src/lager_format.erl	/^collect([], []) -> [].$/;"	f	module:lager_format
collect_cc	deps/lager/src/lager_format.erl	/^collect_cc([$#|Fmt], [A|Args]) -> {$#,[A],Fmt,Args};$/;"	f	module:lager_format
collect_cc	deps/lager/src/lager_format.erl	/^collect_cc([$+|Fmt], [A|Args]) -> {$+,[A],Fmt,Args};$/;"	f	module:lager_format
collect_cc	deps/lager/src/lager_format.erl	/^collect_cc([$B|Fmt], [A|Args]) -> {$B,[A],Fmt,Args};$/;"	f	module:lager_format
collect_cc	deps/lager/src/lager_format.erl	/^collect_cc([$P|Fmt], [A,Depth|Args]) -> {$P,[A,Depth],Fmt,Args};$/;"	f	module:lager_format
collect_cc	deps/lager/src/lager_format.erl	/^collect_cc([$W|Fmt], [A,Depth|Args]) -> {$W,[A,Depth],Fmt,Args};$/;"	f	module:lager_format
collect_cc	deps/lager/src/lager_format.erl	/^collect_cc([$X|Fmt], [A,Prefix|Args]) -> {$X,[A,Prefix],Fmt,Args};$/;"	f	module:lager_format
collect_cc	deps/lager/src/lager_format.erl	/^collect_cc([$b|Fmt], [A|Args]) -> {$b,[A],Fmt,Args};$/;"	f	module:lager_format
collect_cc	deps/lager/src/lager_format.erl	/^collect_cc([$c|Fmt], [A|Args]) -> {$c,[A],Fmt,Args};$/;"	f	module:lager_format
collect_cc	deps/lager/src/lager_format.erl	/^collect_cc([$e|Fmt], [A|Args]) -> {$e,[A],Fmt,Args};$/;"	f	module:lager_format
collect_cc	deps/lager/src/lager_format.erl	/^collect_cc([$f|Fmt], [A|Args]) -> {$f,[A],Fmt,Args};$/;"	f	module:lager_format
collect_cc	deps/lager/src/lager_format.erl	/^collect_cc([$g|Fmt], [A|Args]) -> {$g,[A],Fmt,Args};$/;"	f	module:lager_format
collect_cc	deps/lager/src/lager_format.erl	/^collect_cc([$i|Fmt], [A|Args]) -> {$i,[A],Fmt,Args}.$/;"	f	module:lager_format
collect_cc	deps/lager/src/lager_format.erl	/^collect_cc([$n|Fmt], Args) when is_list(Args) -> {$n,[],Fmt,Args};$/;"	f	module:lager_format
collect_cc	deps/lager/src/lager_format.erl	/^collect_cc([$p|Fmt], [A|Args]) -> {$p,[A],Fmt,Args};$/;"	f	module:lager_format
collect_cc	deps/lager/src/lager_format.erl	/^collect_cc([$s|Fmt], [A|Args]) -> {$s,[A],Fmt,Args};$/;"	f	module:lager_format
collect_cc	deps/lager/src/lager_format.erl	/^collect_cc([$w|Fmt], [A|Args]) -> {$w,[A],Fmt,Args};$/;"	f	module:lager_format
collect_cc	deps/lager/src/lager_format.erl	/^collect_cc([$x|Fmt], [A,Prefix|Args]) -> {$x,[A,Prefix],Fmt,Args};$/;"	f	module:lager_format
collect_cc	deps/lager/src/lager_format.erl	/^collect_cc([$~|Fmt], Args) when is_list(Args) -> {$~,[],Fmt,Args};$/;"	f	module:lager_format
collect_cseq	deps/lager/src/lager_format.erl	/^collect_cseq(Fmt0, Args0) ->$/;"	f	module:lager_format
collect_workers	deps/lager/test/lager_test_backend.erl	/^collect_workers(Workers) ->$/;"	f	module:lager_test_backend
collect_workers	deps/lager/test/lager_test_backend.erl	/^collect_workers([]) ->$/;"	f	module:lager_test_backend
comma	deps/ranch/erlang.mk	/^comma := ,$/;"	m
comma_list	deps/ranch/erlang.mk	/^define comma_list$/;"	m
common	deps/goldrush/src/glc_lib.erl	/^common(Other) ->$/;"	f	module:glc_lib
common	deps/goldrush/src/glc_lib.erl	/^common({all, Conds}) ->$/;"	f	module:glc_lib
common	deps/goldrush/src/glc_lib.erl	/^common({any, Conds}) ->$/;"	f	module:glc_lib
common_	deps/goldrush/src/glc_lib.erl	/^common_([H|T], Seen) ->$/;"	f	module:glc_lib
common_	deps/goldrush/src/glc_lib.erl	/^common_([], _Seen) ->$/;"	f	module:glc_lib
common_	deps/goldrush/src/glc_lib.erl	/^common_([{any, Conds}|T], Seen) ->$/;"	f	module:glc_lib
compat_convert_erlc_opts	deps/ranch/erlang.mk	/^define compat_convert_erlc_opts$/;"	m
compat_erlc_opts_to_list	deps/ranch/erlang.mk	/^define compat_erlc_opts_to_list$/;"	m
compat_prepare_erlc_opts	deps/ranch/erlang.mk	/^compat_prepare_erlc_opts = $(shell echo "$1" | sed 's\/, *\/,\/g')$/;"	m
compat_rebar_config	deps/ranch/erlang.mk	/^define compat_rebar_config$/;"	m
compile	deps/goldrush/src/glc.erl	/^compile(Module, Query) ->$/;"	f	module:glc
compile	deps/goldrush/src/glc.erl	/^compile(Module, Query, Reset) when is_boolean(Reset) ->$/;"	f	module:glc
compile	deps/goldrush/src/glc.erl	/^compile(Module, Query, Store) when is_list(Store) ->$/;"	f	module:glc
compile	deps/goldrush/src/glc.erl	/^compile(Module, Query, Store, Reset) ->$/;"	f	module:glc
compile	deps/goldrush/src/glc.erl	/^compile(Module, Query, undefined) ->$/;"	f	module:glc
compile	deps/goldrush/src/glc_code.erl	/^compile(Module, ModuleData) ->$/;"	f	module:glc_code
compile_asn1	deps/ranch/erlang.mk	/^define compile_asn1$/;"	m
compile_erl	deps/ranch/erlang.mk	/^define compile_erl$/;"	m
compile_forms	deps/goldrush/src/glc_code.erl	/^compile_forms(Forms, Opts) ->$/;"	f	module:glc_code
compile_proto	deps/ranch/erlang.mk	/^define compile_proto$/;"	m
compile_proto.erl	deps/ranch/erlang.mk	/^define compile_proto.erl$/;"	m
compress_pr_record_test	deps/lager/test/compress_pr_record_test.erl	/^-module(compress_pr_record_test).$/;"	m
concat_lists	deps/lager/src/lager_transform.erl	/^concat_lists({call, Line, _Function, _Args} = Call, B) ->$/;"	f	module:lager_transform
concat_lists	deps/lager/src/lager_transform.erl	/^concat_lists({cons, Line, Element, Tail}, B) ->$/;"	f	module:lager_transform
concat_lists	deps/lager/src/lager_transform.erl	/^concat_lists({lc, Line, _Body, _Generator} = LC, B) ->$/;"	f	module:lager_transform
concat_lists	deps/lager/src/lager_transform.erl	/^concat_lists({nil, _Line}, B) ->$/;"	f	module:lager_transform
concat_lists	deps/lager/src/lager_transform.erl	/^concat_lists({record_field, Line, _Var, _Record, _Field} = Rec, B) ->$/;"	f	module:lager_transform
concat_lists	deps/lager/src/lager_transform.erl	/^concat_lists({var, Line, _Name}=Var, B) ->$/;"	f	module:lager_transform
cond_lowercase	deps/lager/src/lager_format.erl	/^cond_lowercase(String, true) ->$/;"	f	module:lager_format
cond_lowercase	deps/lager/src/lager_format.erl	/^cond_lowercase(String,false) ->$/;"	f	module:lager_format
config_to_id	deps/lager/src/lager_file_backend.erl	/^config_to_id(Config) ->$/;"	f	module:lager_file_backend
config_to_id	deps/lager/src/lager_file_backend.erl	/^config_to_id([{Name,_Severity,_Size,_Rotation,_Count}, _Format]) ->$/;"	f	module:lager_file_backend
config_to_id	deps/lager/src/lager_file_backend.erl	/^config_to_id([{Name,_Severity}, _Format]) when is_list(Name) ->$/;"	f	module:lager_file_backend
config_to_id	deps/lager/src/lager_file_backend.erl	/^config_to_id({Name,_Severity,_Size,_Rotation,_Count}) ->$/;"	f	module:lager_file_backend
config_to_id	deps/lager/src/lager_file_backend.erl	/^config_to_id({Name,_Severity}) when is_list(Name) ->$/;"	f	module:lager_file_backend
config_to_levels	deps/lager/src/lager_util.erl	/^config_to_levels(Conf) ->$/;"	f	module:lager_util
config_to_levels	deps/lager/src/lager_util.erl	/^config_to_levels(Conf) when is_atom(Conf) ->$/;"	f	module:lager_util
config_to_levels	deps/lager/src/lager_util.erl	/^config_to_levels([$! | Rest]) ->$/;"	f	module:lager_util
config_to_levels	deps/lager/src/lager_util.erl	/^config_to_levels([$< | Rest]) ->$/;"	f	module:lager_util
config_to_levels	deps/lager/src/lager_util.erl	/^config_to_levels([$<, $= | Rest]) ->$/;"	f	module:lager_util
config_to_levels	deps/lager/src/lager_util.erl	/^config_to_levels([$= | Rest]) ->$/;"	f	module:lager_util
config_to_levels	deps/lager/src/lager_util.erl	/^config_to_levels([$=, $< | Rest]) ->$/;"	f	module:lager_util
config_to_levels	deps/lager/src/lager_util.erl	/^config_to_levels([$=, $> | Rest]) ->$/;"	f	module:lager_util
config_to_levels	deps/lager/src/lager_util.erl	/^config_to_levels([$> | Rest]) ->$/;"	f	module:lager_util
config_to_levels	deps/lager/src/lager_util.erl	/^config_to_levels([$>, $= | Rest]) ->$/;"	f	module:lager_util
config_to_levels_int	deps/lager/src/lager_util.erl	/^config_to_levels_int(Conf) ->$/;"	f	module:lager_util
config_to_levels_test	deps/lager/src/lager_util.erl	/^config_to_levels_test() ->$/;"	f	module:lager_util
config_to_mask	deps/lager/src/lager_util.erl	/^config_to_mask(Conf) ->$/;"	f	module:lager_util
config_to_mask_test	deps/lager/src/lager_util.erl	/^config_to_mask_test() ->$/;"	f	module:lager_util
config_validation_test_	deps/lager/src/lager_file_backend.erl	/^config_validation_test_() ->$/;"	f	module:lager_file_backend
configure_extra_sinks	deps/lager/src/lager_app.erl	/^configure_extra_sinks(Sinks) ->$/;"	f	module:lager_app
configure_sink	deps/lager/src/lager_app.erl	/^configure_sink(Sink, SinkDef) ->$/;"	f	module:lager_app
configured_sink	deps/lager/src/error_logger_lager_h.erl	/^configured_sink() ->$/;"	f	module:error_logger_lager_h
confirm_manager_exit	deps/lager/test/lager_manager_killer_test.erl	/^confirm_manager_exit(Manager, Delay) ->$/;"	f	module:lager_manager_killer_test
confirm_sink_reregister	deps/lager/test/lager_manager_killer_test.erl	/^confirm_sink_reregister(Sink, Delay) ->$/;"	f	module:lager_manager_killer_test
connect	deps/ranch/src/ranch_ssl.erl	/^connect(Host, Port, Opts) when is_integer(Port) ->$/;"	f	module:ranch_ssl
connect	deps/ranch/src/ranch_ssl.erl	/^connect(Host, Port, Opts, Timeout) when is_integer(Port) ->$/;"	f	module:ranch_ssl
connect	deps/ranch/src/ranch_tcp.erl	/^connect(Host, Port, Opts) when is_integer(Port) ->$/;"	f	module:ranch_tcp
connect	deps/ranch/src/ranch_tcp.erl	/^connect(Host, Port, Opts, Timeout) when is_integer(Port) ->$/;"	f	module:ranch_tcp
connect	src/tcp_client.erl	/^connect() ->$/;"	f	module:tcp_client
connect	src/tcp_client.erl	/^connect(ClientId) ->$/;"	f	module:tcp_client
connect_loop	deps/ranch/test/acceptor_SUITE.erl	/^connect_loop(Port, N, Sleep) ->$/;"	f	module:acceptor_SUITE
connect_loop	deps/ranch/test/acceptor_SUITE.erl	/^connect_loop(_, 0, _) ->$/;"	f	module:acceptor_SUITE
connection_type_supervisor	deps/ranch/test/acceptor_SUITE.erl	/^connection_type_supervisor(_) ->$/;"	f	module:acceptor_SUITE
connection_type_supervisor_separate_from_connection	deps/ranch/test/acceptor_SUITE.erl	/^connection_type_supervisor_separate_from_connection(_) ->$/;"	f	module:acceptor_SUITE
consider_profiling	deps/ranch/src/ranch_app.erl	/^consider_profiling() ->$/;"	f	module:ranch_app
console_log_test_	deps/lager/src/lager_console_backend.erl	/^console_log_test_() ->$/;"	f	module:lager_console_backend
constants	deps/goldrush/src/glc_lib.erl	/^constants(Query) ->$/;"	f	module:glc_lib
control	deps/lager/src/lager_format.erl	/^control($#, [A], F, Adj, P, Pad, _Enc, L) when is_integer(A) ->$/;"	f	module:lager_format
control	deps/lager/src/lager_format.erl	/^control($+, [A], F, Adj, P, Pad, _Enc, L) when is_integer(A) ->$/;"	f	module:lager_format
control	deps/lager/src/lager_format.erl	/^control($B, [A], F, Adj, P, Pad, _Enc, L) when is_integer(A) ->$/;"	f	module:lager_format
control	deps/lager/src/lager_format.erl	/^control($X, [A,Prefix], F, Adj, P, Pad, _Enc, L) when is_integer(A) ->$/;"	f	module:lager_format
control	deps/lager/src/lager_format.erl	/^control($X, [A,Prefix], F, Adj, P, Pad, _Enc, L) when is_integer(A), $/;"	f	module:lager_format
control	deps/lager/src/lager_format.erl	/^control($b, [A], F, Adj, P, Pad, _Enc, L) when is_integer(A) ->$/;"	f	module:lager_format
control	deps/lager/src/lager_format.erl	/^control($c, [A], F, Adj, P, Pad, _Enc, L) when is_integer(A) ->$/;"	f	module:lager_format
control	deps/lager/src/lager_format.erl	/^control($c, [A], F, Adj, P, Pad, unicode, L) when is_integer(A) ->$/;"	f	module:lager_format
control	deps/lager/src/lager_format.erl	/^control($e, [A], F, Adj, P, Pad, _Enc, L) when is_float(A) ->$/;"	f	module:lager_format
control	deps/lager/src/lager_format.erl	/^control($f, [A], F, Adj, P, Pad, _Enc, L) when is_float(A) ->$/;"	f	module:lager_format
control	deps/lager/src/lager_format.erl	/^control($g, [A], F, Adj, P, Pad, _Enc, L) when is_float(A) ->$/;"	f	module:lager_format
control	deps/lager/src/lager_format.erl	/^control($i, [_A], _F, _Adj, _P, _Pad, _Enc, L) ->$/;"	f	module:lager_format
control	deps/lager/src/lager_format.erl	/^control($n, [], F, Adj, P, Pad, _Enc, L) ->$/;"	f	module:lager_format
control	deps/lager/src/lager_format.erl	/^control($s, [A], F, Adj, P, Pad, _Enc, L) when is_atom(A) ->$/;"	f	module:lager_format
control	deps/lager/src/lager_format.erl	/^control($x, [A,Prefix], F, Adj, P, Pad, _Enc, L) when is_integer(A) ->$/;"	f	module:lager_format
control	deps/lager/src/lager_format.erl	/^control($x, [A,Prefix], F, Adj, P, Pad, _Enc, L) when is_integer(A), $/;"	f	module:lager_format
control	deps/lager/src/lager_format.erl	/^control($~, [], F, Adj, P, Pad, _Enc, L) ->$/;"	f	module:lager_format
control	deps/lager/src/lager_format.erl	/^control(C, A, F, Adj, P, Pad, Enc, L) ->$/;"	f	module:lager_format
control2	deps/lager/src/lager_format.erl	/^control2($P, [A,Depth], _F, _Adj, _P, _Pad, _Enc, L) when is_integer(Depth) ->$/;"	f	module:lager_format
control2	deps/lager/src/lager_format.erl	/^control2($W, [A,Depth], F, Adj, P, Pad, _Enc, L) when is_integer(Depth) ->$/;"	f	module:lager_format
control2	deps/lager/src/lager_format.erl	/^control2($p, [A], _F, _Adj, _P, _Pad, _Enc, L) ->$/;"	f	module:lager_format
control2	deps/lager/src/lager_format.erl	/^control2($s, [L0], F, Adj, P, Pad, latin1, L) ->$/;"	f	module:lager_format
control2	deps/lager/src/lager_format.erl	/^control2($s, [L0], F, Adj, P, Pad, unicode, L) ->$/;"	f	module:lager_format
control2	deps/lager/src/lager_format.erl	/^control2($w, [A], F, Adj, P, Pad, _Enc, L) ->$/;"	f	module:lager_format
controlling_process	deps/ranch/src/ranch_ssl.erl	/^controlling_process(Socket, Pid) ->$/;"	f	module:ranch_ssl
controlling_process	deps/ranch/src/ranch_tcp.erl	/^controlling_process(Socket, Pid) ->$/;"	f	module:ranch_tcp
core_dep_plugin	deps/ranch/erlang.mk	/^define core_dep_plugin$/;"	m
core_eq	deps/ranch/erlang.mk	/^core_eq = $(and $(findstring $(1),$(2)),$(findstring $(2),$(1)))$/;"	m
core_find	deps/ranch/erlang.mk	/^core_find = $(if $(wildcard $1),$(shell find $(1:%\/=%) -type f -name $(subst *,\\*,$2)))$/;"	m
core_http_get	deps/ranch/erlang.mk	/^core_http_get = curl -Lf$(if $(filter-out 0,$(V)),,s)o $(call core_native_path,$1) $2$/;"	m
core_lc	deps/ranch/erlang.mk	/^core_lc = $(subst A,a,$(subst B,b,$(subst C,c,$(subst D,d,$(subst E,e,$(subst F,f,$(subst G,g,$(subst H,h,$(subst I,i,$(subst J,j,$(subst K,k,$(subst L,l,$(subst M,m,$(subst N,n,$(subst O,o,$(subst P,p,$(subst Q,q,$(subst R,r,$(subst S,s,$(subst T,t,$(subst U,u,$(subst V,v,$(subst W,w,$(subst X,x,$(subst Y,y,$(subst Z,z,$(1)))))))))))))))))))))))))))$/;"	m
core_ls	deps/ranch/erlang.mk	/^core_ls = $(filter-out $(1),$(shell echo $(1)))$/;"	m
core_native_path	deps/ranch/erlang.mk	/^core_native_path = $(subst \\,\\\\\\\\,$(shell cygpath -w $1))$/;"	m
core_native_path	deps/ranch/erlang.mk	/^core_native_path = $1$/;"	m
core_relpath	deps/ranch/erlang.mk	/^core_relpath = $(shell perl -e 'use File::Spec; print File::Spec->abs2rel(@ARGV) . "\\n"' $1 $2)$/;"	m
count	deps/lager/test/lager_test_backend.erl	/^count() ->$/;"	f	module:lager_test_backend
count	deps/lager/test/lager_test_backend.erl	/^count(Sink) ->$/;"	f	module:lager_test_backend
count_connections	deps/ranch/src/ranch_server.erl	/^count_connections(Ref) ->$/;"	f	module:ranch_server
count_ignored	deps/lager/test/lager_test_backend.erl	/^count_ignored() ->$/;"	f	module:lager_test_backend
count_ignored	deps/lager/test/lager_test_backend.erl	/^count_ignored(Sink) ->$/;"	f	module:lager_test_backend
count_nl	deps/lager/src/lager_stdlib.erl	/^count_nl($\\n) ->$/;"	f	module:lager_stdlib
count_nl	deps/lager/src/lager_stdlib.erl	/^count_nl(Bin) when is_binary(Bin) ->$/;"	f	module:lager_stdlib
count_nl	deps/lager/src/lager_stdlib.erl	/^count_nl([E | Es]) ->$/;"	f	module:lager_stdlib
count_nl	deps/lager/src/lager_stdlib.erl	/^count_nl(_) ->$/;"	f	module:lager_stdlib
counts_name	deps/goldrush/src/glc.erl	/^counts_name(Module) -> reg_name(Module, "_counters").$/;"	f	module:glc
cover_report.erl	deps/ranch/erlang.mk	/^define cover_report.erl$/;"	m
cpp_verbose	deps/ranch/erlang.mk	/^cpp_verbose = $(cpp_verbose_$(V))$/;"	m
cpp_verbose_0	deps/ranch/erlang.mk	/^cpp_verbose_0 = @echo " CPP   " $(?F);$/;"	m
crash	deps/lager/test/crash.erl	/^-module(crash).$/;"	m
crash	deps/lager/test/lager_test_backend.erl	/^crash(Type) ->$/;"	f	module:lager_test_backend
crash_protocol	deps/ranch/test/crash_protocol.erl	/^-module(crash_protocol).$/;"	m
ct_app_target	deps/ranch/erlang.mk	/^define ct_app_target$/;"	m
ct_suite_target	deps/ranch/erlang.mk	/^define ct_suite_target$/;"	m
date_time_now	deps/lager/src/lager_default_formatter.erl	/^date_time_now() ->$/;"	f	module:lager_default_formatter
datetime	deps/lager/src/lager_msg.erl	/^datetime(Msg) ->$/;"	f	module:lager_msg
dec_depth	deps/lager/src/lager_trunc_io.erl	/^dec_depth(#print_options{depth=Depth} = Options) when Depth > 0 ->$/;"	f	module:lager_trunc_io
dec_depth	deps/lager/src/lager_trunc_io.erl	/^dec_depth(Options) ->$/;"	f	module:lager_trunc_io
decide_crash_log	deps/lager/src/lager_sup.erl	/^decide_crash_log(File) ->$/;"	f	module:lager_sup
decide_crash_log	deps/lager/src/lager_sup.erl	/^decide_crash_log(false) ->$/;"	f	module:lager_sup
decide_crash_log	deps/lager/src/lager_sup.erl	/^decide_crash_log(undefined) ->$/;"	f	module:lager_sup
default_is_output_test_	deps/goldrush/src/glc_lib.erl	/^default_is_output_test_() ->$/;"	f	module:glc_lib
delete	deps/goldrush/src/glc.erl	/^delete(Module) ->$/;"	f	module:glc
delete	deps/goldrush/src/glc_lib.erl	/^delete(Cond, _Filter) ->$/;"	f	module:glc_lib
delete	deps/goldrush/src/glc_lib.erl	/^delete(Filter, Filter) ->$/;"	f	module:glc_lib
delete	deps/goldrush/src/glc_lib.erl	/^delete({all, Conds}, Filter) ->$/;"	f	module:glc_lib
delete	deps/goldrush/src/glc_lib.erl	/^delete({any, Conds}, Filter) ->$/;"	f	module:glc_lib
delete_from_all_test	deps/goldrush/src/glc_lib.erl	/^delete_from_all_test() ->$/;"	f	module:glc_lib
delete_from_any_test	deps/goldrush/src/glc_lib.erl	/^delete_from_any_test() ->$/;"	f	module:glc_lib
deleteall	deps/goldrush/src/glc_lib.erl	/^deleteall(Filter, [H|T]) ->$/;"	f	module:glc_lib
deleteall	deps/goldrush/src/glc_lib.erl	/^deleteall(Filter, []) ->$/;"	f	module:glc_lib
dep_autopatch	deps/ranch/erlang.mk	/^define dep_autopatch$/;"	m
dep_autopatch2	deps/ranch/erlang.mk	/^define dep_autopatch2$/;"	m
dep_autopatch_appsrc.erl	deps/ranch/erlang.mk	/^define dep_autopatch_appsrc.erl$/;"	m
dep_autopatch_appsrc_script.erl	deps/ranch/erlang.mk	/^define dep_autopatch_appsrc_script.erl$/;"	m
dep_autopatch_erlang_mk	deps/ranch/erlang.mk	/^define dep_autopatch_erlang_mk$/;"	m
dep_autopatch_fetch_rebar	deps/ranch/erlang.mk	/^define dep_autopatch_fetch_rebar$/;"	m
dep_autopatch_gen	deps/ranch/erlang.mk	/^define dep_autopatch_gen$/;"	m
dep_autopatch_noop	deps/ranch/erlang.mk	/^define dep_autopatch_noop$/;"	m
dep_autopatch_rebar	deps/ranch/erlang.mk	/^define dep_autopatch_rebar$/;"	m
dep_autopatch_rebar.erl	deps/ranch/erlang.mk	/^define dep_autopatch_rebar.erl$/;"	m
dep_commit	deps/ranch/erlang.mk	/^dep_commit = $(if $(dep_$(1)_commit),$(dep_$(1)_commit),$(if $(dep_$(1)),$(word 3,$(dep_$(1))),$(pkg_$(1)_commit)))$/;"	m
dep_ct_helper	deps/ranch/Makefile	/^dep_ct_helper = git https:\/\/github.com\/ninenines\/ct_helper master$/;"	m
dep_fetch	deps/ranch/erlang.mk	/^define dep_fetch$/;"	m
dep_fetch_cp	deps/ranch/erlang.mk	/^define dep_fetch_cp$/;"	m
dep_fetch_fail	deps/ranch/erlang.mk	/^define dep_fetch_fail$/;"	m
dep_fetch_git	deps/ranch/erlang.mk	/^define dep_fetch_git$/;"	m
dep_fetch_git-submodule	deps/ranch/erlang.mk	/^define dep_fetch_git-submodule$/;"	m
dep_fetch_hex	deps/ranch/erlang.mk	/^define dep_fetch_hex$/;"	m
dep_fetch_hg	deps/ranch/erlang.mk	/^define dep_fetch_hg$/;"	m
dep_fetch_legacy	deps/ranch/erlang.mk	/^define dep_fetch_legacy$/;"	m
dep_fetch_svn	deps/ranch/erlang.mk	/^define dep_fetch_svn$/;"	m
dep_name	deps/ranch/erlang.mk	/^dep_name = $(if $(dep_$(1)),$(1),$(if $(pkg_$(1)_name),$(pkg_$(1)_name),$(1)))$/;"	m
dep_ranch_commit	deps/ranch/examples/tcp_echo/Makefile	/^dep_ranch_commit = master$/;"	m
dep_ranch_commit	deps/ranch/examples/tcp_reverse/Makefile	/^dep_ranch_commit = master$/;"	m
dep_repo	deps/ranch/erlang.mk	/^dep_repo = $(patsubst git:\/\/github.com\/%,https:\/\/github.com\/%, \\$/;"	m
dep_target	deps/ranch/erlang.mk	/^define dep_target$/;"	m
dep_verbose	deps/ranch/erlang.mk	/^dep_verbose = $(dep_verbose_$(V))$/;"	m
dep_verbose_0	deps/ranch/erlang.mk	/^dep_verbose_0 = @echo " DEP   " $(1);$/;"	m
dep_verbose_2	deps/ranch/erlang.mk	/^dep_verbose_2 = set -x;$/;"	m
depth_limit_test	deps/lager/src/lager_trunc_io.erl	/^depth_limit_test() ->$/;"	f	module:lager_trunc_io
destinations	deps/lager/src/lager_msg.erl	/^destinations(Msg) ->$/;"	f	module:lager_msg
determine_async_behavior	deps/lager/src/lager_app.erl	/^determine_async_behavior(Sink, Threshold, Window) ->$/;"	f	module:lager_app
determine_async_behavior	deps/lager/src/lager_app.erl	/^determine_async_behavior(Sink, Threshold, undefined) ->$/;"	f	module:lager_app
determine_async_behavior	deps/lager/src/lager_app.erl	/^determine_async_behavior(_Sink, Threshold, Window) when not is_integer(Window) orelse Window > Threshold orelse Window < 0 ->$/;"	f	module:lager_app
determine_async_behavior	deps/lager/src/lager_app.erl	/^determine_async_behavior(_Sink, Threshold, _Window) when not is_integer(Threshold) orelse Threshold < 0 ->$/;"	f	module:lager_app
determine_async_behavior	deps/lager/src/lager_app.erl	/^determine_async_behavior(_Sink, undefined, _Window) ->$/;"	f	module:lager_app
determine_rotation_date	deps/lager/src/lager_sup.erl	/^determine_rotation_date(_) ->$/;"	f	module:lager_sup
determine_rotation_date	deps/lager/src/lager_sup.erl	/^determine_rotation_date({ok, ""}) ->$/;"	f	module:lager_sup
determine_rotation_date	deps/lager/src/lager_sup.erl	/^determine_rotation_date({ok, Val3}) ->$/;"	f	module:lager_sup
disallowed_listen_options	deps/ranch/src/ranch_ssl.erl	/^disallowed_listen_options() ->$/;"	f	module:ranch_ssl
disallowed_listen_options	deps/ranch/src/ranch_tcp.erl	/^disallowed_listen_options() ->$/;"	f	module:ranch_tcp
discard_messages	deps/lager/src/lager_util.erl	/^discard_messages(Second, Count) ->$/;"	f	module:lager_util
dispatch_log	deps/lager/src/lager.erl	/^dispatch_log(Severity, Metadata, Format, Args, Size) ->$/;"	f	module:lager
dispatch_log	deps/lager/src/lager.erl	/^dispatch_log(Severity, _Module, _Function, _Line, _Pid, Metadata, Format, Args, Size) ->$/;"	f	module:lager
dispatch_log	deps/lager/src/lager.erl	/^dispatch_log(Sink, Severity, Metadata, Format, Args, Size, Safety) when is_atom(Severity)->$/;"	f	module:lager
do_listen	deps/ranch/src/ranch_ssl.erl	/^do_listen(Opts) ->$/;"	f	module:ranch_ssl
do_log	deps/lager/src/lager.erl	/^do_log(Severity, Metadata, Format, Args, Size, SeverityAsInt, LevelThreshold, TraceFilters, Sink, SinkPid) when is_atom(Severity) ->$/;"	f	module:lager
do_log	deps/lager/src/lager.erl	/^do_log(Severity, Metadata, Format, Args, Size, SeverityAsInt, LevelThreshold, TraceFilters, SinkPid) ->$/;"	f	module:lager
do_log	deps/lager/src/lager_crash_log.erl	/^do_log({log, Event}, #state{name=Name, fd=FD, inode=Inode, flap=Flap,$/;"	f	module:lager_crash_log
do_log_impl	deps/lager/src/lager.erl	/^do_log_impl(Severity, Metadata, Format, Args, SeverityAsInt, LevelThreshold, TraceFilters, Sink, SinkPid, FormatFun) ->$/;"	f	module:lager
do_log_unsafe	deps/lager/src/lager.erl	/^do_log_unsafe(Severity, Metadata, Format, Args, _Size, SeverityAsInt, LevelThreshold, TraceFilters, Sink, SinkPid) when is_atom(Severity) ->$/;"	f	module:lager
do_ssl_sni_echo	deps/ranch/test/acceptor_SUITE.erl	/^do_ssl_sni_echo() ->$/;"	f	module:acceptor_SUITE
do_ssl_sni_fail	deps/ranch/test/acceptor_SUITE.erl	/^do_ssl_sni_fail() ->$/;"	f	module:acceptor_SUITE
do_transform	deps/lager/src/lager_transform.erl	/^do_transform(Line, SinkName, Severity, Arguments0) ->$/;"	f	module:lager_transform
do_transform	deps/lager/src/lager_transform.erl	/^do_transform(Line, SinkName, Severity, Arguments0, Safety) ->$/;"	f	module:lager_transform
do_write	deps/lager/src/lager_file_backend.erl	/^do_write(#state{fd=FD, name=Name, flap=Flap} = State, Level, Msg) ->$/;"	f	module:lager_file_backend
doit	src/reloader.erl	/^doit(From, To) ->$/;"	f	module:reloader
dtl_verbose	deps/ranch/erlang.mk	/^dtl_verbose = $(dtl_verbose_$(V))$/;"	m
dtl_verbose_0	deps/ranch/erlang.mk	/^dtl_verbose_0 = @echo " DTL   " $(filter %.dtl,$(?F));$/;"	m
ecache_app	src/ecache_app.erl	/^-module(ecache_app).$/;"	m
ecache_protocol	src/ecache_protocol.erl	/^-module(ecache_protocol).$/;"	m
ecache_sup	src/ecache_sup.erl	/^-module(ecache_sup).$/;"	m
echo_protocol	deps/ranch/examples/tcp_echo/src/echo_protocol.erl	/^-module(echo_protocol).$/;"	m
echo_protocol	deps/ranch/test/echo_protocol.erl	/^-module(echo_protocol).$/;"	m
empty	deps/ranch/erlang.mk	/^empty :=$/;"	m
encoding	deps/lager/src/lager_format.erl	/^encoding(Fmt,Args) ->$/;"	f	module:lager_format
encoding	deps/lager/src/lager_format.erl	/^encoding([$t|Fmt],Args) ->$/;"	f	module:lager_format
end_per_group	deps/ranch/test/sendfile_SUITE.erl	/^end_per_group(_, _) ->$/;"	f	module:sendfile_SUITE
end_per_suite	deps/ranch/test/sendfile_SUITE.erl	/^end_per_suite(Config) ->$/;"	f	module:sendfile_SUITE
ensure_logfile	deps/lager/src/lager_util.erl	/^ensure_logfile(Name, FD, Inode, Buffer) ->$/;"	f	module:lager_util
ensure_started	deps/lager/test/lager_manager_killer_test.erl	/^ensure_started(App) ->$/;"	f	module:lager_manager_killer_test
eol	deps/lager/src/lager_console_backend.erl	/^eol() ->$/;"	f	module:lager_console_backend
eq	deps/goldrush/src/glc.erl	/^eq(Key, Term) ->$/;"	f	module:glc
eq	deps/goldrush/src/glc_ops.erl	/^eq(Key, Term) ->$/;"	f	module:glc_ops
eq	deps/goldrush/src/glc_ops.erl	/^eq(Key, Term) when is_atom(Key) ->$/;"	f	module:glc_ops
eqc_test_	deps/lager/test/trunc_io_eqc.erl	/^eqc_test_() ->$/;"	f	module:trunc_io_eqc
erl	deps/goldrush/src/glc_code.erl	/^-define(erl, erl_syntax).$/;"	d
erlang	deps/ranch/erlang.mk	/^define erlang$/;"	m
erlc_verbose	deps/ranch/erlang.mk	/^erlc_verbose = $(erlc_verbose_$(V))$/;"	m
erlc_verbose_0	deps/ranch/erlang.mk	/^erlc_verbose_0 = @echo " ERLC  " $(filter-out $(patsubst %,%.erl,$(ERLC_EXCLUDE)),\\$/;"	m
erlc_verbose_2	deps/ranch/erlang.mk	/^erlc_verbose_2 = set -x;$/;"	m
erlydtl_compile.erl	deps/ranch/erlang.mk	/^define erlydtl_compile.erl$/;"	m
error:badarg	deps/lager/test/pr_stacktrace_test.erl	/^error:badarg",$/;"	f	module:pr_stacktrace_test
error:undef	deps/lager/test/pr_stacktrace_test.erl	/^error:undef",$/;"	f	module:pr_stacktrace_test
error_logger_lager_h	deps/lager/src/error_logger_lager_h.erl	/^-module(error_logger_lager_h).$/;"	m
error_logger_redirect_cleanup	deps/lager/test/lager_test_backend.erl	/^error_logger_redirect_cleanup(_) ->$/;"	f	module:lager_test_backend
error_logger_redirect_crash_cleanup	deps/lager/test/lager_test_backend.erl	/^error_logger_redirect_crash_cleanup(_Sink) ->$/;"	f	module:lager_test_backend
error_logger_redirect_crash_setup	deps/lager/test/lager_test_backend.erl	/^error_logger_redirect_crash_setup() ->$/;"	f	module:lager_test_backend
error_logger_redirect_crash_setup_sink	deps/lager/test/lager_test_backend.erl	/^error_logger_redirect_crash_setup_sink() ->$/;"	f	module:lager_test_backend
error_logger_redirect_crash_test_	deps/lager/test/lager_test_backend.erl	/^error_logger_redirect_crash_test_() ->$/;"	f	module:lager_test_backend
error_logger_redirect_setup	deps/lager/test/lager_test_backend.erl	/^error_logger_redirect_setup() ->$/;"	f	module:lager_test_backend
error_logger_redirect_setup_sink	deps/lager/test/lager_test_backend.erl	/^error_logger_redirect_setup_sink() ->$/;"	f	module:lager_test_backend
error_logger_redirect_test_	deps/lager/test/lager_test_backend.erl	/^error_logger_redirect_test_() ->$/;"	f	module:lager_test_backend
error_msg	deps/lager/test/sync_error_logger.erl	/^error_msg(Format) ->$/;"	f	module:sync_error_logger
error_msg	deps/lager/test/sync_error_logger.erl	/^error_msg(Format, Args) ->$/;"	f	module:sync_error_logger
error_report	deps/lager/test/sync_error_logger.erl	/^error_report(Report) ->$/;"	f	module:sync_error_logger
error_report	deps/lager/test/sync_error_logger.erl	/^error_report(Type, Report) ->$/;"	f	module:sync_error_logger
escape	deps/lager/src/lager_trunc_io.erl	/^escape($\\b) -> "\\\\b";$/;"	f	module:lager_trunc_io
escape	deps/lager/src/lager_trunc_io.erl	/^escape($\\e) -> "\\\\e";$/;"	f	module:lager_trunc_io
escape	deps/lager/src/lager_trunc_io.erl	/^escape($\\f) -> "\\\\f";$/;"	f	module:lager_trunc_io
escape	deps/lager/src/lager_trunc_io.erl	/^escape($\\n) -> "\\\\n";$/;"	f	module:lager_trunc_io
escape	deps/lager/src/lager_trunc_io.erl	/^escape($\\r) -> "\\\\r";$/;"	f	module:lager_trunc_io
escape	deps/lager/src/lager_trunc_io.erl	/^escape($\\t) -> "\\\\t";$/;"	f	module:lager_trunc_io
escape	deps/lager/src/lager_trunc_io.erl	/^escape($\\v) -> "\\\\v".$/;"	f	module:lager_trunc_io
eunit.erl	deps/ranch/erlang.mk	/^define eunit.erl$/;"	m
eval_gl	deps/lager/src/error_logger_lager_h.erl	/^eval_gl(Event, #state{groupleader_strategy=GlStrategy0}=State) when is_pid(element(2, Event)) ->$/;"	f	module:error_logger_lager_h
eval_gl	deps/lager/src/error_logger_lager_h.erl	/^eval_gl(Event, State) ->$/;"	f	module:error_logger_lager_h
events_test_	deps/goldrush/src/glc.erl	/^events_test_() ->$/;"	f	module:glc
execute	deps/goldrush/src/glc_run.erl	/^execute(Fun, [Event, Store]) ->$/;"	f	module:glc_run
exited	deps/lager/src/lager_stdlib.erl	/^exited(error) ->$/;"	f	module:lager_stdlib
exited	deps/lager/src/lager_stdlib.erl	/^exited(exit) ->$/;"	f	module:lager_stdlib
exited	deps/lager/src/lager_stdlib.erl	/^exited(throw) ->$/;"	f	module:lager_stdlib
exited_size	deps/lager/src/lager_stdlib.erl	/^exited_size(Class) ->$/;"	f	module:lager_stdlib
expand_handlers	deps/lager/src/lager_app.erl	/^expand_handlers([H|T]) ->$/;"	f	module:lager_app
expand_handlers	deps/lager/src/lager_app.erl	/^expand_handlers([]) ->$/;"	f	module:lager_app
expand_handlers	deps/lager/src/lager_app.erl	/^expand_handlers([{Mod, Config}|T]) when is_atom(Mod) ->$/;"	f	module:lager_app
expand_handlers	deps/lager/src/lager_app.erl	/^expand_handlers([{lager_file_backend, Configs}|T]) ->$/;"	f	module:lager_app
expand_handlers	deps/lager/src/lager_app.erl	/^expand_handlers([{lager_file_backend, [{Key, _Value}|_]=Config}|T]) when is_atom(Key) ->$/;"	f	module:lager_app
expand_path	deps/lager/src/lager_util.erl	/^expand_path(RelPath) ->$/;"	f	module:lager_util
expand_path_test	deps/lager/src/lager_util.erl	/^expand_path_test() ->$/;"	f	module:lager_util
explain_reason	deps/lager/src/lager_stdlib.erl	/^explain_reason(Reason, Class, [], PF, Str) ->$/;"	f	module:lager_stdlib
explain_reason	deps/lager/src/lager_stdlib.erl	/^explain_reason(badarg, error, [], _PF, _Str) ->$/;"	f	module:lager_stdlib
explain_reason	deps/lager/src/lager_stdlib.erl	/^explain_reason(badarith, error, [], _PF, _Str) ->$/;"	f	module:lager_stdlib
explain_reason	deps/lager/src/lager_stdlib.erl	/^explain_reason(function_clause, error, [{F,A}], _PF, _Str) ->$/;"	f	module:lager_stdlib
explain_reason	deps/lager/src/lager_stdlib.erl	/^explain_reason(function_clause, error=Cl, [{M,F,As}], PF, Str) ->$/;"	f	module:lager_stdlib
explain_reason	deps/lager/src/lager_stdlib.erl	/^explain_reason(if_clause, error, [], _PF, _Str) ->$/;"	f	module:lager_stdlib
explain_reason	deps/lager/src/lager_stdlib.erl	/^explain_reason(noproc, error, [], _PF, _Str) ->$/;"	f	module:lager_stdlib
explain_reason	deps/lager/src/lager_stdlib.erl	/^explain_reason(notalive, error, [], _PF, _Str) ->$/;"	f	module:lager_stdlib
explain_reason	deps/lager/src/lager_stdlib.erl	/^explain_reason(restricted_shell_started, exit, [], _PF, _Str) ->$/;"	f	module:lager_stdlib
explain_reason	deps/lager/src/lager_stdlib.erl	/^explain_reason(restricted_shell_stopped, exit, [], _PF, _Str) ->$/;"	f	module:lager_stdlib
explain_reason	deps/lager/src/lager_stdlib.erl	/^explain_reason(system_limit, error, [], _PF, _Str) ->$/;"	f	module:lager_stdlib
explain_reason	deps/lager/src/lager_stdlib.erl	/^explain_reason(timeout_value, error, [], _PF, _Str) ->$/;"	f	module:lager_stdlib
explain_reason	deps/lager/src/lager_stdlib.erl	/^explain_reason(undef, error, [{M,F,A}], _PF, _Str) ->$/;"	f	module:lager_stdlib
explain_reason	deps/lager/src/lager_stdlib.erl	/^explain_reason({argument_limit,_Fun}, error, [], _PF, _Str) ->$/;"	f	module:lager_stdlib
explain_reason	deps/lager/src/lager_stdlib.erl	/^explain_reason({bad_filter,V}, error=Cl, [], PF, Str) ->$/;"	f	module:lager_stdlib
explain_reason	deps/lager/src/lager_stdlib.erl	/^explain_reason({bad_generator,V}, error=Cl, [], PF, Str) ->$/;"	f	module:lager_stdlib
explain_reason	deps/lager/src/lager_stdlib.erl	/^explain_reason({badarg,V}, error=Cl, [], PF, Str) -> % orelse, andalso$/;"	f	module:lager_stdlib
explain_reason	deps/lager/src/lager_stdlib.erl	/^explain_reason({badarity,{Fun,As}}, error, [], _PF, _Str) $/;"	f	module:lager_stdlib
explain_reason	deps/lager/src/lager_stdlib.erl	/^explain_reason({badfun,Term}, error=Cl, [], PF, Str) ->$/;"	f	module:lager_stdlib
explain_reason	deps/lager/src/lager_stdlib.erl	/^explain_reason({badmatch,Term}, error=Cl, [], PF, Str) ->$/;"	f	module:lager_stdlib
explain_reason	deps/lager/src/lager_stdlib.erl	/^explain_reason({case_clause,V}, error=Cl, [], PF, Str) ->$/;"	f	module:lager_stdlib
explain_reason	deps/lager/src/lager_stdlib.erl	/^explain_reason({restricted_shell_bad_return, V}, exit=Cl, [], PF, Str) ->$/;"	f	module:lager_stdlib
explain_reason	deps/lager/src/lager_stdlib.erl	/^explain_reason({restricted_shell_disallowed,{ForMF,As}}, $/;"	f	module:lager_stdlib
explain_reason	deps/lager/src/lager_stdlib.erl	/^explain_reason({shell_undef,F,A}, error, [], _PF, _Str) ->$/;"	f	module:lager_stdlib
explain_reason	deps/lager/src/lager_stdlib.erl	/^explain_reason({try_clause,V}, error=Cl, [], PF, Str) ->$/;"	f	module:lager_stdlib
explain_reason	deps/lager/src/lager_stdlib.erl	/^explain_reason({unbound,V}, error, [], _PF, _Str) ->$/;"	f	module:lager_stdlib
extra_sinks_test_	deps/lager/test/lager_test_backend.erl	/^extra_sinks_test_() ->$/;"	f	module:lager_test_backend
fetch	deps/goldrush/src/gre.erl	/^fetch(Key, {list, List}=Event) ->$/;"	f	module:gre
field_value	deps/lager/src/lager_format.erl	/^field_value(Fmt, Args) ->$/;"	f	module:lager_format
field_value	deps/lager/src/lager_format.erl	/^field_value(Fmt, Args, F) -> %Default case$/;"	f	module:lager_format
field_value	deps/lager/src/lager_format.erl	/^field_value([$*|Fmt], [A|Args]) when is_integer(A) ->$/;"	f	module:lager_format
field_value	deps/lager/src/lager_format.erl	/^field_value([C|Fmt], Args) when is_integer(C), C >= $0, C =< $9 ->$/;"	f	module:lager_format
field_value	deps/lager/src/lager_format.erl	/^field_value([C|Fmt], Args, F) when is_integer(C), C >= $0, C =< $9 ->$/;"	f	module:lager_format
field_variable	deps/goldrush/src/glc_code.erl	/^field_variable(Key) ->$/;"	f	module:glc_code
field_variable_	deps/goldrush/src/glc_code.erl	/^field_variable_([H|T]) ->$/;"	f	module:glc_code
field_variable_	deps/goldrush/src/glc_code.erl	/^field_variable_([H|T]) when H >= $0, H =< $9 ->$/;"	f	module:glc_code
field_variable_	deps/goldrush/src/glc_code.erl	/^field_variable_([H|T]) when H >= $A, H =< $Z ->$/;"	f	module:glc_code
field_variable_	deps/goldrush/src/glc_code.erl	/^field_variable_([H|T]) when H >= $a, H =< $z ->$/;"	f	module:glc_code
field_variable_	deps/goldrush/src/glc_code.erl	/^field_variable_([]) ->$/;"	f	module:glc_code
field_width	deps/lager/src/lager_format.erl	/^field_width(F, Fmt, Args) when F < 0 ->$/;"	f	module:lager_format
field_width	deps/lager/src/lager_format.erl	/^field_width(F, Fmt, Args) when F >= 0 ->$/;"	f	module:lager_format
field_width	deps/lager/src/lager_format.erl	/^field_width(Fmt0, Args0) ->$/;"	f	module:lager_format
field_width	deps/lager/src/lager_format.erl	/^field_width([$-|Fmt0], Args0) ->$/;"	f	module:lager_format
filename	deps/ranch/test/sendfile_SUITE.erl	/^filename(Config) ->$/;"	f	module:sendfile_SUITE
filesystem_test_	deps/lager/src/lager_crash_log.erl	/^filesystem_test_() ->$/;"	f	module:lager_crash_log
filesystem_test_	deps/lager/src/lager_file_backend.erl	/^filesystem_test_() ->$/;"	f	module:lager_file_backend
filter	deps/goldrush/src/glc.erl	/^filter(Module) ->$/;"	f	module:glc
filter_options	deps/ranch/src/ranch.erl	/^filter_options(UserOptions, DisallowedKeys, DefaultOptions) ->$/;"	f	module:ranch
filter_options_warning	deps/ranch/src/ranch.erl	/^filter_options_warning(Opt) ->$/;"	f	module:ranch
filter_opts.erl	deps/ranch/erlang.mk	/^define filter_opts.erl$/;"	m
filter_user_options	deps/ranch/src/ranch.erl	/^filter_user_options([Opt = {Key, _}|Tail], DisallowedKeys) ->$/;"	f	module:ranch
filter_user_options	deps/ranch/src/ranch.erl	/^filter_user_options([Opt = {raw, _, _, _}|Tail], AllowedKeys) ->$/;"	f	module:ranch
filter_user_options	deps/ranch/src/ranch.erl	/^filter_user_options([Opt|Tail], DisallowedKeys) ->$/;"	f	module:ranch
filter_user_options	deps/ranch/src/ranch.erl	/^filter_user_options([], _) ->$/;"	f	module:ranch
filter_user_options	deps/ranch/src/ranch.erl	/^filter_user_options([inet6|Tail], AllowedKeys) ->$/;"	f	module:ranch
filter_user_options	deps/ranch/src/ranch.erl	/^filter_user_options([inet|Tail], AllowedKeys) ->$/;"	f	module:ranch
filtermap	deps/lager/src/lager.erl	/^filtermap(Fun, List1) ->$/;"	f	module:lager
find	deps/goldrush/src/gre.erl	/^find(Key, {list, List}) ->$/;"	f	module:gre
find_app_file	deps/lager/src/lager_transform.erl	/^find_app_file(Dir) ->$/;"	f	module:lager_transform
find_traces	deps/lager/src/lager.erl	/^find_traces(Sinks) ->$/;"	f	module:lager
flat_trunc	deps/lager/src/lager_format.erl	/^flat_trunc(L, 0, R) when is_list(L) ->$/;"	f	module:lager_format
flat_trunc	deps/lager/src/lager_format.erl	/^flat_trunc(List, N) when is_integer(N), N >= 0 ->$/;"	f	module:lager_format
flat_trunc	deps/lager/src/lager_format.erl	/^flat_trunc([H|T], N, R) ->$/;"	f	module:lager_format
flat_trunc	deps/lager/src/lager_format.erl	/^flat_trunc([], _, R) ->$/;"	f	module:lager_format
flatten	deps/goldrush/src/glc_lib.erl	/^flatten(Other) ->$/;"	f	module:glc_lib
flatten	deps/goldrush/src/glc_lib.erl	/^flatten([{with, _Cond, _Action}|_] = I) ->$/;"	f	module:glc_lib
flatten	deps/goldrush/src/glc_lib.erl	/^flatten({all, Conds}) ->$/;"	f	module:glc_lib
flatten	deps/goldrush/src/glc_lib.erl	/^flatten({all, [Cond]}) ->$/;"	f	module:glc_lib
flatten	deps/goldrush/src/glc_lib.erl	/^flatten({any, [Cond]}) ->$/;"	f	module:glc_lib
flatten	deps/goldrush/src/glc_lib.erl	/^flatten({any, [_|_]=Conds}) ->$/;"	f	module:glc_lib
flatten	deps/goldrush/src/glc_lib.erl	/^flatten({with, Cond, Action}) ->$/;"	f	module:glc_lib
flatten_all	deps/goldrush/src/glc_lib.erl	/^flatten_all(Conds) ->$/;"	f	module:glc_lib
flatten_any	deps/goldrush/src/glc_lib.erl	/^flatten_any(Conds) ->$/;"	f	module:glc_lib
flatten_tag	deps/goldrush/src/glc_lib.erl	/^flatten_tag(Tag, [H|T]) ->$/;"	f	module:glc_lib
flatten_tag	deps/goldrush/src/glc_lib.erl	/^flatten_tag(Tag, [{Tag, Conds}|T]) ->$/;"	f	module:glc_lib
flatten_tag	deps/goldrush/src/glc_lib.erl	/^flatten_tag(_Tag, []) ->$/;"	f	module:glc_lib
float_data	deps/lager/src/lager_format.erl	/^float_data(Fl) ->$/;"	f	module:lager_format
float_data	deps/lager/src/lager_format.erl	/^float_data([$e|E], Ds) ->$/;"	f	module:lager_format
float_data	deps/lager/src/lager_format.erl	/^float_data([D|Cs], Ds) when D >= $0, D =< $9 ->$/;"	f	module:lager_format
float_data	deps/lager/src/lager_format.erl	/^float_data([_|Cs], Ds) ->$/;"	f	module:lager_format
float_e	deps/lager/src/lager_format.erl	/^float_e(Fl, Fd, P) when Fl < 0.0 -> %Negative numbers$/;"	f	module:lager_format
float_e	deps/lager/src/lager_format.erl	/^float_e(_Fl, {Ds,E}, P) ->$/;"	f	module:lager_format
float_exp	deps/lager/src/lager_format.erl	/^float_exp(E) ->$/;"	f	module:lager_format
float_exp	deps/lager/src/lager_format.erl	/^float_exp(E) when E >= 0 ->$/;"	f	module:lager_format
float_f	deps/lager/src/lager_format.erl	/^float_f(Fl, Fd, P) when Fl < 0.0 ->$/;"	f	module:lager_format
float_f	deps/lager/src/lager_format.erl	/^float_f(Fl, {Ds,E}, P) when E =< 0 ->$/;"	f	module:lager_format
float_f	deps/lager/src/lager_format.erl	/^float_f(_Fl, {Ds,E}, P) ->$/;"	f	module:lager_format
float_inside_list_test	deps/lager/src/lager_trunc_io.erl	/^float_inside_list_test() ->$/;"	f	module:lager_trunc_io
float_man	deps/lager/src/lager_format.erl	/^float_man(Ds, 0, Dc) ->$/;"	f	module:lager_format
float_man	deps/lager/src/lager_format.erl	/^float_man([D|Ds], Dc) ->$/;"	f	module:lager_format
float_man	deps/lager/src/lager_format.erl	/^float_man([D|Ds], I, Dc) ->$/;"	f	module:lager_format
float_man	deps/lager/src/lager_format.erl	/^float_man([D|_], 0) when D >= $5 -> {[],true};$/;"	f	module:lager_format
float_man	deps/lager/src/lager_format.erl	/^float_man([], Dc) -> {string:chars($0, Dc),false}. %Pad with 0's$/;"	f	module:lager_format
float_man	deps/lager/src/lager_format.erl	/^float_man([], I, Dc) -> %Pad with 0's$/;"	f	module:lager_format
float_man	deps/lager/src/lager_format.erl	/^float_man([_|_], 0) -> {[],false};$/;"	f	module:lager_format
flush	deps/lager/test/lager_test_backend.erl	/^flush() ->$/;"	f	module:lager_test_backend
flush	deps/lager/test/lager_test_backend.erl	/^flush(Sink) ->$/;"	f	module:lager_test_backend
flush	deps/ranch/src/ranch_acceptor.erl	/^flush() ->$/;"	f	module:ranch_acceptor
foo	deps/lager/test/special_process.erl	/^foo(baz) ->$/;"	f	module:special_process
format	deps/lager/src/lager_default_formatter.erl	/^format(Message,Config,Colors) ->$/;"	f	module:lager_default_formatter
format	deps/lager/src/lager_default_formatter.erl	/^format(Msg, Config) ->$/;"	f	module:lager_default_formatter
format	deps/lager/src/lager_default_formatter.erl	/^format(Msg,[], Colors) ->$/;"	f	module:lager_default_formatter
format	deps/lager/src/lager_default_formatter.erl	/^format(Msg,[{eol, EOL}], Colors) ->$/;"	f	module:lager_default_formatter
format	deps/lager/src/lager_format.erl	/^format(FmtStr, Args, MaxLen) ->$/;"	f	module:lager_format
format	deps/lager/src/lager_format.erl	/^format(FmtStr, Args, MaxLen, Opts) when is_atom(FmtStr) ->$/;"	f	module:lager_format
format	deps/lager/src/lager_format.erl	/^format(FmtStr, Args, MaxLen, Opts) when is_binary(FmtStr) ->$/;"	f	module:lager_format
format	deps/lager/src/lager_format.erl	/^format(FmtStr, Args, MaxLen, Opts) when is_list(FmtStr) ->$/;"	f	module:lager_format
format	deps/lager/src/lager_format.erl	/^format([], [], _, _) ->$/;"	f	module:lager_format
format	deps/lager/src/lager_format.erl	/^format(_FmtStr, _Args, _MaxLen, _Opts) ->$/;"	f	module:lager_format
format	deps/lager/src/lager_trunc_io.erl	/^format(Fmt, Args, Max) ->$/;"	f	module:lager_trunc_io
format	deps/lager/src/lager_trunc_io.erl	/^format(Fmt, Args, Max, Options) ->$/;"	f	module:lager_trunc_io
format_args	deps/lager/src/error_logger_lager_h.erl	/^format_args([H|T], FmtAcc, ArgsAcc) ->$/;"	f	module:error_logger_lager_h
format_args	deps/lager/src/error_logger_lager_h.erl	/^format_args([], FmtAcc, ArgsAcc) ->$/;"	f	module:error_logger_lager_h
format_call	deps/lager/src/lager_stdlib.erl	/^format_call(ErrStr, Pre1, ForMForFun, As, PF) ->$/;"	f	module:lager_stdlib
format_crash_report	deps/lager/src/error_logger_lager_h.erl	/^format_crash_report(Report, Neighbours) ->$/;"	f	module:error_logger_lager_h
format_error	deps/ranch/src/ranch_acceptors_sup.erl	/^format_error(Reason) ->$/;"	f	module:ranch_acceptors_sup
format_error	deps/ranch/src/ranch_acceptors_sup.erl	/^format_error(no_cert) ->$/;"	f	module:ranch_acceptors_sup
format_errstr_call	deps/lager/src/lager_stdlib.erl	/^format_errstr_call(ErrStr, Class, ForMForFun, As, PF, Pre0) ->$/;"	f	module:lager_stdlib
format_exception	deps/lager/src/lager_stdlib.erl	/^format_exception(Class, Reason, StackTrace, FmtMaxBytes) ->$/;"	f	module:lager_stdlib
format_fun	deps/lager/src/lager_stdlib.erl	/^format_fun(Fun) when is_function(Fun) ->$/;"	f	module:lager_stdlib
format_mfa	deps/lager/src/error_logger_lager_h.erl	/^format_mfa(Other) ->$/;"	f	module:error_logger_lager_h
format_mfa	deps/lager/src/error_logger_lager_h.erl	/^format_mfa([{M, F, A, Props}, _]) when is_list(Props) ->$/;"	f	module:error_logger_lager_h
format_mfa	deps/lager/src/error_logger_lager_h.erl	/^format_mfa([{M, F, A}, _]) ->$/;"	f	module:error_logger_lager_h
format_mfa	deps/lager/src/error_logger_lager_h.erl	/^format_mfa({M, F, A, Props}) when is_list(Props) ->$/;"	f	module:error_logger_lager_h
format_mfa	deps/lager/src/error_logger_lager_h.erl	/^format_mfa({M, F, A}) when is_integer(A) ->$/;"	f	module:error_logger_lager_h
format_mfa	deps/lager/src/error_logger_lager_h.erl	/^format_mfa({M, F, A}) when is_list(A) ->$/;"	f	module:error_logger_lager_h
format_mfa	deps/lager/src/lager_stdlib.erl	/^format_mfa({M,F,Args}=StartF, FmtMaxBytes) ->$/;"	f	module:lager_stdlib
format_offender	deps/lager/src/error_logger_lager_h.erl	/^format_offender(Off) ->$/;"	f	module:error_logger_lager_h
format_op	deps/lager/src/lager_stdlib.erl	/^format_op(ErrStr, Pre, Op, [A1, A2], PF) ->$/;"	f	module:lager_stdlib
format_reason	deps/lager/src/error_logger_lager_h.erl	/^format_reason(Reason) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager/src/error_logger_lager_h.erl	/^format_reason({'function not exported', [{M, F, A, _Props},MFA|_]}) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager/src/error_logger_lager_h.erl	/^format_reason({'function not exported', [{M, F, A},MFA|_]}) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager/src/error_logger_lager_h.erl	/^format_reason({Reason, [{M, F, A, Props}|_]}) when is_atom(M), is_atom(F), is_integer(A), is_list(Props) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager/src/error_logger_lager_h.erl	/^format_reason({Reason, [{M, F, A}|_]}) when is_atom(M), is_atom(F), is_integer(A) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager/src/error_logger_lager_h.erl	/^format_reason({bad_return, {MFA, Val}}) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager/src/error_logger_lager_h.erl	/^format_reason({bad_return, {_MFA, {'EXIT', Reason}}}) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager/src/error_logger_lager_h.erl	/^format_reason({bad_return_value, Val}) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager/src/error_logger_lager_h.erl	/^format_reason({badarg, [MFA,MFA2|_]}) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager/src/error_logger_lager_h.erl	/^format_reason({badarith, [MFA|_]}) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager/src/error_logger_lager_h.erl	/^format_reason({emfile, _Trace}) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager/src/error_logger_lager_h.erl	/^format_reason({function_clause, [MFA|_]}) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager/src/error_logger_lager_h.erl	/^format_reason({if_clause, [MFA|_]}) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager/src/error_logger_lager_h.erl	/^format_reason({noproc, MFA}) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager/src/error_logger_lager_h.erl	/^format_reason({system_limit, [{M, F, _}|_] = Trace}) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager/src/error_logger_lager_h.erl	/^format_reason({undef, [MFA|_]}) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager/src/error_logger_lager_h.erl	/^format_reason({{bad_return_value, Val}, MFA}) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager/src/error_logger_lager_h.erl	/^format_reason({{badarg, Stack}, _}) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager/src/error_logger_lager_h.erl	/^format_reason({{badarity, {Fun, Args}}, [MFA|_]}) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager/src/error_logger_lager_h.erl	/^format_reason({{badfun, Term}, [MFA|_]}) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager/src/error_logger_lager_h.erl	/^format_reason({{badmatch, Val}, [MFA|_]}) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager/src/error_logger_lager_h.erl	/^format_reason({{badrecord, Record}, [MFA|_]}) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager/src/error_logger_lager_h.erl	/^format_reason({{case_clause, Val}, [MFA|_]}) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager/src/error_logger_lager_h.erl	/^format_reason({{try_clause, Val}, [MFA|_]}) ->$/;"	f	module:error_logger_lager_h
format_rep	deps/lager/src/lager_stdlib.erl	/^format_rep([{Tag,Data}|Rep], FmtMaxBytes) ->$/;"	f	module:lager_stdlib
format_rep	deps/lager/src/lager_stdlib.erl	/^format_rep([{error_info,{Class,Reason,StackTrace}}|Rep], FmtMaxBytes) ->$/;"	f	module:lager_stdlib
format_rep	deps/lager/src/lager_stdlib.erl	/^format_rep([{initial_call,InitialCall}|Rep], FmtMaxBytes) ->$/;"	f	module:lager_stdlib
format_rep	deps/lager/src/lager_stdlib.erl	/^format_rep(_, _S) ->$/;"	f	module:lager_stdlib
format_report	deps/lager/src/lager_stdlib.erl	/^format_report(Rep, FmtMaxBytes) ->$/;"	f	module:lager_stdlib
format_report	deps/lager/src/lager_stdlib.erl	/^format_report(Rep, FmtMaxBytes) when is_list(Rep) ->$/;"	f	module:lager_stdlib
format_stacktrace1	deps/lager/src/lager_stdlib.erl	/^format_stacktrace1(S0, Stack0, PF, SF) ->$/;"	f	module:lager_stdlib
format_stacktrace2	deps/lager/src/lager_stdlib.erl	/^format_stacktrace2(S, [{M,F,As}|Fs], N, PF) when is_list(As) ->$/;"	f	module:lager_stdlib
format_stacktrace2	deps/lager/src/lager_stdlib.erl	/^format_stacktrace2(S, [{M,F,A}|Fs], N, PF) when is_integer(A) ->$/;"	f	module:lager_stdlib
format_stacktrace2	deps/lager/src/lager_stdlib.erl	/^format_stacktrace2(_S, [], _N, _PF) ->$/;"	f	module:lager_stdlib
format_tag	deps/lager/src/lager_stdlib.erl	/^format_tag(Tag, Data, FmtMaxBytes) ->$/;"	f	module:lager_stdlib
format_test	deps/lager/src/lager_trunc_io.erl	/^format_test() ->$/;"	f	module:lager_trunc_io
format_time	deps/lager/src/lager_util.erl	/^format_time() ->$/;"	f	module:lager_util
format_time	deps/lager/src/lager_util.erl	/^format_time({utc, {{Y, M, D}, {H, Mi, S, Ms}}}) ->$/;"	f	module:lager_util
format_time	deps/lager/src/lager_util.erl	/^format_time({utc, {{Y, M, D}, {H, Mi, S}}}) ->$/;"	f	module:lager_util
format_time	deps/lager/src/lager_util.erl	/^format_time({{Y, M, D}, {H, Mi, S, Ms}}) ->$/;"	f	module:lager_util
format_time	deps/lager/src/lager_util.erl	/^format_time({{Y, M, D}, {H, Mi, S}}) ->$/;"	f	module:lager_util
format_time_test_	deps/lager/src/lager_util.erl	/^format_time_test_() ->$/;"	f	module:lager_util
format_value	deps/lager/src/lager_stdlib.erl	/^format_value(V, ErrStr, Class, PF, Str) ->$/;"	f	module:lager_stdlib
formatting_test_	deps/lager/src/lager_file_backend.erl	/^formatting_test_() ->$/;"	f	module:lager_file_backend
fprint	deps/lager/src/lager_trunc_io.erl	/^fprint(T, Max, Options) ->$/;"	f	module:lager_trunc_io
fprint	deps/lager/src/lager_trunc_io.erl	/^fprint(Term, Max) ->$/;"	f	module:lager_trunc_io
from_now	deps/lager/src/lager_handler_watcher.erl	/^from_now(Seconds) ->$/;"	f	module:lager_handler_watcher
function	deps/lager/test/crash.erl	/^function(X) when is_list(X) ->$/;"	f	module:crash
fwrite_e	deps/lager/src/lager_format.erl	/^fwrite_e(Fl, F, Adj, P, Pad) when P >= 2 ->$/;"	f	module:lager_format
fwrite_e	deps/lager/src/lager_format.erl	/^fwrite_e(Fl, F, Adj, none, Pad) ->$/;"	f	module:lager_format
fwrite_e	deps/lager/src/lager_format.erl	/^fwrite_e(Fl, none, Adj, none, Pad) -> %Default values$/;"	f	module:lager_format
fwrite_e	deps/lager/src/lager_format.erl	/^fwrite_e(Fl, none, _Adj, P, _Pad) when P >= 2 ->$/;"	f	module:lager_format
fwrite_f	deps/lager/src/lager_format.erl	/^fwrite_f(Fl, F, Adj, P, Pad) when P >= 1 ->$/;"	f	module:lager_format
fwrite_f	deps/lager/src/lager_format.erl	/^fwrite_f(Fl, F, Adj, none, Pad) ->$/;"	f	module:lager_format
fwrite_f	deps/lager/src/lager_format.erl	/^fwrite_f(Fl, none, Adj, none, Pad) -> %Default values$/;"	f	module:lager_format
fwrite_f	deps/lager/src/lager_format.erl	/^fwrite_f(Fl, none, _Adj, P, _Pad) when P >= 1 ->$/;"	f	module:lager_format
fwrite_g	deps/lager/src/lager_format.erl	/^fwrite_g(Fl, F, Adj, P, Pad) when P >= 1 ->$/;"	f	module:lager_format
fwrite_g	deps/lager/src/lager_format.erl	/^fwrite_g(Fl, F, Adj, none, Pad) ->$/;"	f	module:lager_format
gen_any	deps/lager/test/trunc_io_eqc.erl	/^gen_any(MaxDepth) ->$/;"	f	module:trunc_io_eqc
gen_atom	deps/lager/test/trunc_io_eqc.erl	/^gen_atom() ->$/;"	f	module:trunc_io_eqc
gen_bitstring	deps/lager/test/trunc_io_eqc.erl	/^gen_bitstring() ->$/;"	f	module:trunc_io_eqc
gen_char	deps/lager/test/trunc_io_eqc.erl	/^gen_char() ->$/;"	f	module:trunc_io_eqc
gen_fmt_args	deps/lager/test/trunc_io_eqc.erl	/^gen_fmt_args() ->$/;"	f	module:trunc_io_eqc
gen_fun	deps/lager/test/trunc_io_eqc.erl	/^gen_fun() ->$/;"	f	module:trunc_io_eqc
gen_iolist	deps/lager/test/trunc_io_eqc.erl	/^gen_iolist(0) ->$/;"	f	module:trunc_io_eqc
gen_iolist	deps/lager/test/trunc_io_eqc.erl	/^gen_iolist(Depth) ->$/;"	f	module:trunc_io_eqc
gen_max_len	deps/lager/test/trunc_io_eqc.erl	/^gen_max_len() -> %% Generate length from 3 to whatever.  Needs space for ... in output$/;"	f	module:trunc_io_eqc
gen_pid	deps/lager/test/trunc_io_eqc.erl	/^gen_pid() ->$/;"	f	module:trunc_io_eqc
gen_port	deps/lager/test/trunc_io_eqc.erl	/^gen_port() ->$/;"	f	module:trunc_io_eqc
gen_print_bin	deps/lager/test/trunc_io_eqc.erl	/^gen_print_bin() ->$/;"	f	module:trunc_io_eqc
gen_print_str	deps/lager/test/trunc_io_eqc.erl	/^gen_print_str() ->$/;"	f	module:trunc_io_eqc
gen_quoted_atom	deps/lager/test/trunc_io_eqc.erl	/^gen_quoted_atom() ->$/;"	f	module:trunc_io_eqc
gen_ref	deps/lager/test/trunc_io_eqc.erl	/^gen_ref() ->$/;"	f	module:trunc_io_eqc
gen_tuple	deps/lager/test/trunc_io_eqc.erl	/^gen_tuple(Gen) ->$/;"	f	module:trunc_io_eqc
gen_verbose	deps/ranch/erlang.mk	/^gen_verbose = $(gen_verbose_$(V))$/;"	m
gen_verbose_0	deps/ranch/erlang.mk	/^gen_verbose_0 = @echo " GEN   " $@;$/;"	m
gen_verbose_2	deps/ranch/erlang.mk	/^gen_verbose_2 = set -x;$/;"	m
get	deps/goldrush/src/glc.erl	/^get(Module, Key) ->$/;"	f	module:glc
get	deps/lager/src/lager_config.erl	/^get(Key) ->$/;"	f	module:lager_config
get	deps/lager/src/lager_config.erl	/^get(Key, Default) ->$/;"	f	module:lager_config
get	deps/lager/src/lager_config.erl	/^get({Sink, Key}, Default) ->$/;"	f	module:lager_config
get	deps/lager/src/lager_config.erl	/^get({_Sink, _Key}=FullKey) ->$/;"	f	module:lager_config
get_addr	deps/ranch/src/ranch.erl	/^get_addr(Ref) ->$/;"	f	module:ranch
get_addr	deps/ranch/src/ranch_server.erl	/^get_addr(Ref) ->$/;"	f	module:ranch_server
get_connections_sup	deps/ranch/src/ranch_server.erl	/^get_connections_sup(Ref) ->$/;"	f	module:ranch_server
get_default	deps/lager/src/lager_backend_throttle.erl	/^get_default([]) ->$/;"	f	module:lager_backend_throttle
get_default	deps/lager/src/lager_backend_throttle.erl	/^get_default([{_Key, Value}]) ->$/;"	f	module:lager_backend_throttle
get_default_client_pid	src/tcp_client.erl	/^get_default_client_pid() ->$/;"	f	module:tcp_client
get_env	deps/lager/src/lager_app.erl	/^get_env(Application, Key) ->$/;"	f	module:lager_app
get_env	deps/lager/src/lager_app.erl	/^get_env(Application, Key, Default) ->$/;"	f	module:lager_app
get_env_default	deps/lager/src/lager_app.erl	/^get_env_default(undefined, Default) ->$/;"	f	module:lager_app
get_env_default	deps/lager/src/lager_app.erl	/^get_env_default({ok, Value}, _Default) ->$/;"	f	module:lager_app
get_env_default_test	deps/lager/test/lager_app_tests.erl	/^get_env_default_test() ->$/;"	f	module:lager_app_tests
get_env_test	deps/lager/test/lager_app_tests.erl	/^get_env_test() ->$/;"	f	module:lager_app_tests
get_loglevel	deps/lager/src/lager.erl	/^get_loglevel(Handler) ->$/;"	f	module:lager
get_loglevel	deps/lager/src/lager.erl	/^get_loglevel(Sink, Handler) ->$/;"	f	module:lager
get_loglevel_test	deps/lager/src/lager_file_backend.erl	/^get_loglevel_test() ->$/;"	f	module:lager_file_backend
get_loglevels	deps/lager/src/lager.erl	/^get_loglevels(Sink) ->$/;"	f	module:lager
get_logs	deps/lager/src/lager_common_test_backend.erl	/^get_logs() ->$/;"	f	module:lager_common_test_backend
get_max_connections	deps/ranch/src/ranch.erl	/^get_max_connections(Ref) ->$/;"	f	module:ranch
get_max_connections	deps/ranch/src/ranch_server.erl	/^get_max_connections(Ref) ->$/;"	f	module:ranch_server
get_message	src/ecache_protocol.erl	/^get_message(Data) ->$/;"	f	module:ecache_protocol
get_metadata	deps/lager/src/lager_default_formatter.erl	/^get_metadata(Key, Metadata) ->$/;"	f	module:lager_default_formatter
get_metadata	deps/lager/src/lager_default_formatter.erl	/^get_metadata(Key, Metadata, Default) ->$/;"	f	module:lager_default_formatter
get_parse_json_error	src/ecache_protocol.erl	/^get_parse_json_error(_Data) ->$/;"	f	module:ecache_protocol
get_pid_by_client_id	src/tcp_client.erl	/^get_pid_by_client_id(ClientId) ->$/;"	f	module:tcp_client
get_pid_by_client_id	src/tcp_client.erl	/^get_pid_by_client_id(ClientId) when is_binary(ClientId) ->$/;"	f	module:tcp_client
get_port	deps/ranch/src/ranch.erl	/^get_port(Ref) ->$/;"	f	module:ranch
get_protocol_options	deps/ranch/src/ranch.erl	/^get_protocol_options(Ref) ->$/;"	f	module:ranch
get_protocol_options	deps/ranch/src/ranch_server.erl	/^get_protocol_options(Ref) ->$/;"	f	module:ranch_server
get_relx_release.erl	deps/ranch/erlang.mk	/^define get_relx_release.erl$/;"	m
get_value	deps/lager/src/error_logger_lager_h.erl	/^get_value(Key, List, Default) ->$/;"	f	module:error_logger_lager_h
get_value	deps/lager/src/error_logger_lager_h.erl	/^get_value(Key, Value) ->$/;"	f	module:error_logger_lager_h
gh280_crash_test	deps/lager/test/zzzz_gh280_crash.erl	/^gh280_crash_test() ->$/;"	f	module:zzzz_gh280_crash
gh280_impl	deps/lager/test/zzzz_gh280_crash.erl	/^gh280_impl() ->$/;"	f	module:zzzz_gh280_crash
glc	deps/goldrush/src/glc.erl	/^-module(glc).$/;"	m
glc_code	deps/goldrush/src/glc_code.erl	/^-module(glc_code).$/;"	m
glc_lib	deps/goldrush/src/glc_lib.erl	/^-module(glc_lib).$/;"	m
glc_ops	deps/goldrush/src/glc_ops.erl	/^-module(glc_ops).$/;"	m
glc_run	deps/goldrush/src/glc_run.erl	/^-module(glc_run).$/;"	m
global_get	deps/lager/src/lager_config.erl	/^global_get(Key) ->$/;"	f	module:lager_config
global_get	deps/lager/src/lager_config.erl	/^global_get(Key, Default) ->$/;"	f	module:lager_config
global_set	deps/lager/src/lager_config.erl	/^global_set(Key, Value) ->$/;"	f	module:lager_config
gr_app	deps/goldrush/src/gr_app.erl	/^-module(gr_app).$/;"	m
gr_context	deps/goldrush/src/gr_context.erl	/^-module(gr_context).$/;"	m
gr_counter	deps/goldrush/src/gr_counter.erl	/^-module(gr_counter).$/;"	m
gr_counter_sup	deps/goldrush/src/gr_counter_sup.erl	/^-module(gr_counter_sup).$/;"	m
gr_manager	deps/goldrush/src/gr_manager.erl	/^-module(gr_manager).$/;"	m
gr_manager_sup	deps/goldrush/src/gr_manager_sup.erl	/^-module(gr_manager_sup).$/;"	m
gr_param	deps/goldrush/src/gr_param.erl	/^-module(gr_param).$/;"	m
gr_param_sup	deps/goldrush/src/gr_param_sup.erl	/^-module(gr_param_sup).$/;"	m
gr_sup	deps/goldrush/src/gr_sup.erl	/^-module(gr_sup).$/;"	m
gre	deps/goldrush/src/gre.erl	/^-module(gre).$/;"	m
gre_test_	deps/goldrush/src/gre.erl	/^gre_test_() ->$/;"	f	module:gre
groups	deps/ranch/test/acceptor_SUITE.erl	/^groups() ->$/;"	f	module:acceptor_SUITE
groups	deps/ranch/test/sendfile_SUITE.erl	/^groups() ->$/;"	f	module:sendfile_SUITE
gt	deps/goldrush/src/glc.erl	/^gt(Key, Term) ->$/;"	f	module:glc
gt	deps/goldrush/src/glc_ops.erl	/^gt(Key, Term) ->$/;"	f	module:glc_ops
gt	deps/goldrush/src/glc_ops.erl	/^gt(Key, Term) when is_atom(Key) ->$/;"	f	module:glc_ops
gte	deps/goldrush/src/glc.erl	/^gte(Key, Term) ->$/;"	f	module:glc
gte	deps/goldrush/src/glc_ops.erl	/^gte(Key, Term) ->$/;"	f	module:glc_ops
gte	deps/goldrush/src/glc_ops.erl	/^gte(Key, Term) when is_atom(Key) ->$/;"	f	module:glc_ops
guess_application	deps/lager/src/lager_transform.erl	/^guess_application(Dirname, Attr) when Dirname \/= undefined ->$/;"	f	module:lager_transform
guess_application	deps/lager/src/lager_transform.erl	/^guess_application(_, _) ->$/;"	f	module:lager_transform
guess_application	deps/lager/src/lager_transform.erl	/^guess_application(undefined, {attribute, _, file, {Filename, _}}) ->$/;"	f	module:lager_transform
handle	deps/goldrush/src/glc.erl	/^handle(Module, Event) ->$/;"	f	module:glc
handle	deps/goldrush/src/glc.erl	/^handle(Module, Event) when is_list(Event) ->$/;"	f	module:glc
handle_call	deps/goldrush/src/gr_counter.erl	/^handle_call(_Request, _From, State) ->$/;"	f	module:gr_counter
handle_call	deps/goldrush/src/gr_counter.erl	/^handle_call(list=Call, From, State) ->$/;"	f	module:gr_counter
handle_call	deps/goldrush/src/gr_counter.erl	/^handle_call({insert_counter, Counter, Value}, From, State) ->$/;"	f	module:gr_counter
handle_call	deps/goldrush/src/gr_counter.erl	/^handle_call({lookup_element, Term}=Call, From, State) ->$/;"	f	module:gr_counter
handle_call	deps/goldrush/src/gr_counter.erl	/^handle_call({reset_counters, Counter}, From, State) ->$/;"	f	module:gr_counter
handle_call	deps/goldrush/src/gr_manager.erl	/^handle_call(_Request, _From, State) ->$/;"	f	module:gr_manager
handle_call	deps/goldrush/src/gr_param.erl	/^handle_call(Call, From, State) when is_atom(Call), Call =:= list; $/;"	f	module:gr_param
handle_call	deps/goldrush/src/gr_param.erl	/^handle_call(_Request, _From, State) ->$/;"	f	module:gr_param
handle_call	deps/goldrush/src/gr_param.erl	/^handle_call({Call, Term}, From, State) when is_atom(Call), Call =:= insert; $/;"	f	module:gr_param
handle_call	deps/lager/src/error_logger_lager_h.erl	/^handle_call(_Request, State) ->$/;"	f	module:error_logger_lager_h
handle_call	deps/lager/src/error_logger_lager_h.erl	/^handle_call({set_high_water, N}, #state{shaper=Shaper} = State) ->$/;"	f	module:error_logger_lager_h
handle_call	deps/lager/src/lager_backend_throttle.erl	/^handle_call(_Request, State) ->$/;"	f	module:lager_backend_throttle
handle_call	deps/lager/src/lager_backend_throttle.erl	/^handle_call(get_loglevel, State) ->$/;"	f	module:lager_backend_throttle
handle_call	deps/lager/src/lager_backend_throttle.erl	/^handle_call({set_loglevel, _Level}, State) ->$/;"	f	module:lager_backend_throttle
handle_call	deps/lager/src/lager_common_test_backend.erl	/^handle_call(_, State) ->$/;"	f	module:lager_common_test_backend
handle_call	deps/lager/src/lager_common_test_backend.erl	/^handle_call(get_loglevel, #state{level=Level} = State) ->$/;"	f	module:lager_common_test_backend
handle_call	deps/lager/src/lager_common_test_backend.erl	/^handle_call(get_logs, #state{log = Logs} = State) ->$/;"	f	module:lager_common_test_backend
handle_call	deps/lager/src/lager_common_test_backend.erl	/^handle_call({set_loglevel, Level}, State) ->$/;"	f	module:lager_common_test_backend
handle_call	deps/lager/src/lager_console_backend.erl	/^handle_call(_Request, State) ->$/;"	f	module:lager_console_backend
handle_call	deps/lager/src/lager_console_backend.erl	/^handle_call(get_loglevel, #state{level=Level} = State) ->$/;"	f	module:lager_console_backend
handle_call	deps/lager/src/lager_console_backend.erl	/^handle_call({set_loglevel, Level}, State) ->$/;"	f	module:lager_console_backend
handle_call	deps/lager/src/lager_crash_log.erl	/^handle_call(_Call, _From, State) ->$/;"	f	module:lager_crash_log
handle_call	deps/lager/src/lager_crash_log.erl	/^handle_call({log, _} = Log, _From, State) ->$/;"	f	module:lager_crash_log
handle_call	deps/lager/src/lager_file_backend.erl	/^handle_call(_Request, State) ->$/;"	f	module:lager_file_backend
handle_call	deps/lager/src/lager_file_backend.erl	/^handle_call(get_loglevel, #state{level=Level} = State) ->$/;"	f	module:lager_file_backend
handle_call	deps/lager/src/lager_file_backend.erl	/^handle_call(rotate, State = #state{name=File}) ->$/;"	f	module:lager_file_backend
handle_call	deps/lager/src/lager_file_backend.erl	/^handle_call({set_loghwm, Hwm}, #state{shaper=Shaper, name=Name} = State) ->$/;"	f	module:lager_file_backend
handle_call	deps/lager/src/lager_file_backend.erl	/^handle_call({set_loglevel, Level}, #state{name=Ident} = State) ->$/;"	f	module:lager_file_backend
handle_call	deps/lager/src/lager_handler_watcher.erl	/^handle_call(_Call, _From, State) ->$/;"	f	module:lager_handler_watcher
handle_call	deps/lager/src/lager_manager_killer.erl	/^handle_call(_Request, State) ->$/;"	f	module:lager_manager_killer
handle_call	deps/lager/src/lager_manager_killer.erl	/^handle_call(get_loglevel, State) ->$/;"	f	module:lager_manager_killer
handle_call	deps/lager/src/lager_manager_killer.erl	/^handle_call(get_settings, State = #state{killer_hwm=KillerHWM, killer_reinstall_after=KillerReinstallAfter}) ->$/;"	f	module:lager_manager_killer
handle_call	deps/lager/src/lager_manager_killer.erl	/^handle_call(kill_self, #state{killer_hwm=KillerHWM, killer_reinstall_after=KillerReinstallAfter}) ->$/;"	f	module:lager_manager_killer
handle_call	deps/lager/src/lager_manager_killer.erl	/^handle_call({set_loglevel, _Level}, State) ->$/;"	f	module:lager_manager_killer
handle_call	deps/lager/test/crash.erl	/^handle_call(_Call, _From, State) ->$/;"	f	module:crash
handle_call	deps/lager/test/crash.erl	/^handle_call(bad_return, _, _) ->$/;"	f	module:crash
handle_call	deps/lager/test/crash.erl	/^handle_call(bad_return_string, _, _) ->$/;"	f	module:crash
handle_call	deps/lager/test/crash.erl	/^handle_call(badarg1, _, State) ->$/;"	f	module:crash
handle_call	deps/lager/test/crash.erl	/^handle_call(badarg2, _, State) ->$/;"	f	module:crash
handle_call	deps/lager/test/crash.erl	/^handle_call(badarith, _, State) ->$/;"	f	module:crash
handle_call	deps/lager/test/crash.erl	/^handle_call(badarity, _, State) ->$/;"	f	module:crash
handle_call	deps/lager/test/crash.erl	/^handle_call(badfun, _, State) ->$/;"	f	module:crash
handle_call	deps/lager/test/crash.erl	/^handle_call(badmatch, _, State) ->$/;"	f	module:crash
handle_call	deps/lager/test/crash.erl	/^handle_call(badrecord, _, State) ->$/;"	f	module:crash
handle_call	deps/lager/test/crash.erl	/^handle_call(case_clause, _, State) ->$/;"	f	module:crash
handle_call	deps/lager/test/crash.erl	/^handle_call(case_clause_string, _, State) ->$/;"	f	module:crash
handle_call	deps/lager/test/crash.erl	/^handle_call(function_clause, _, State) ->$/;"	f	module:crash
handle_call	deps/lager/test/crash.erl	/^handle_call(if_clause, _, State) ->$/;"	f	module:crash
handle_call	deps/lager/test/crash.erl	/^handle_call(noproc, _, State) ->$/;"	f	module:crash
handle_call	deps/lager/test/crash.erl	/^handle_call(port_limit, _, State) ->$/;"	f	module:crash
handle_call	deps/lager/test/crash.erl	/^handle_call(process_limit, _, State) ->$/;"	f	module:crash
handle_call	deps/lager/test/crash.erl	/^handle_call(system_limit, _, State) ->$/;"	f	module:crash
handle_call	deps/lager/test/crash.erl	/^handle_call(throw, _, _State) ->$/;"	f	module:crash
handle_call	deps/lager/test/crash.erl	/^handle_call(try_clause, _, State) ->$/;"	f	module:crash
handle_call	deps/lager/test/crash.erl	/^handle_call(undef, _, State) ->$/;"	f	module:crash
handle_call	deps/lager/test/lager_crash_backend.erl	/^handle_call(_Request, State) ->$/;"	f	module:lager_crash_backend
handle_call	deps/lager/test/lager_slow_backend.erl	/^handle_call(_Request, State) ->$/;"	f	module:lager_slow_backend
handle_call	deps/lager/test/lager_slow_backend.erl	/^handle_call(get_loglevel, State) ->$/;"	f	module:lager_slow_backend
handle_call	deps/lager/test/lager_test_backend.erl	/^handle_call(_Request, State) ->$/;"	f	module:lager_test_backend
handle_call	deps/lager/test/lager_test_backend.erl	/^handle_call(count, #state{buffer=Buffer} = State) ->$/;"	f	module:lager_test_backend
handle_call	deps/lager/test/lager_test_backend.erl	/^handle_call(count_ignored, #state{ignored=Ignored} = State) ->$/;"	f	module:lager_test_backend
handle_call	deps/lager/test/lager_test_backend.erl	/^handle_call(flush, State) ->$/;"	f	module:lager_test_backend
handle_call	deps/lager/test/lager_test_backend.erl	/^handle_call(get_loglevel, #state{level=Level} = State) ->$/;"	f	module:lager_test_backend
handle_call	deps/lager/test/lager_test_backend.erl	/^handle_call(pop, #state{buffer=Buffer} = State) ->$/;"	f	module:lager_test_backend
handle_call	deps/lager/test/lager_test_backend.erl	/^handle_call(print_bad_state, State) ->$/;"	f	module:lager_test_backend
handle_call	deps/lager/test/lager_test_backend.erl	/^handle_call(print_state, State) ->$/;"	f	module:lager_test_backend
handle_call	deps/lager/test/lager_test_backend.erl	/^handle_call({set_loglevel, Level}, State) ->$/;"	f	module:lager_test_backend
handle_call	deps/ranch/examples/tcp_reverse/src/reverse_protocol.erl	/^handle_call(_Request, _From, State) ->$/;"	f	module:reverse_protocol
handle_call	deps/ranch/src/ranch_server.erl	/^handle_call(_Request, _From, State) ->$/;"	f	module:ranch_server
handle_call	deps/ranch/src/ranch_server.erl	/^handle_call({set_addr, Ref, Addr}, _, State) ->$/;"	f	module:ranch_server
handle_call	deps/ranch/src/ranch_server.erl	/^handle_call({set_connections_sup, Ref, Pid}, _,$/;"	f	module:ranch_server
handle_call	deps/ranch/src/ranch_server.erl	/^handle_call({set_max_conns, Ref, MaxConns}, _, State) ->$/;"	f	module:ranch_server
handle_call	deps/ranch/src/ranch_server.erl	/^handle_call({set_new_listener_opts, Ref, MaxConns, Opts}, _, State) ->$/;"	f	module:ranch_server
handle_call	deps/ranch/src/ranch_server.erl	/^handle_call({set_opts, Ref, Opts}, _, State) ->$/;"	f	module:ranch_server
handle_call	src/ecache_protocol.erl	/^handle_call(Msg, From, SockState) ->$/;"	f	module:ecache_protocol
handle_call	src/reloader.erl	/^handle_call(_Req, _From, State) ->$/;"	f	module:reloader
handle_call	src/reloader.erl	/^handle_call(stop, _From, State) ->$/;"	f	module:reloader
handle_cast	deps/goldrush/src/gr_counter.erl	/^handle_cast(_Msg, State) ->$/;"	f	module:gr_counter
handle_cast	deps/goldrush/src/gr_counter.erl	/^handle_cast({update, Counter, Value}=Call, State) ->$/;"	f	module:gr_counter
handle_cast	deps/goldrush/src/gr_manager.erl	/^handle_cast(_Msg, State) ->$/;"	f	module:gr_manager
handle_cast	deps/goldrush/src/gr_manager.erl	/^handle_cast({setup, Data}, State = #state{managee=Managee}) ->$/;"	f	module:gr_manager
handle_cast	deps/goldrush/src/gr_param.erl	/^handle_cast(_Msg, State) ->$/;"	f	module:gr_param
handle_cast	deps/lager/src/lager_crash_log.erl	/^handle_cast(_Request, State) ->$/;"	f	module:lager_crash_log
handle_cast	deps/lager/src/lager_crash_log.erl	/^handle_cast({log, _} = Log, State) ->$/;"	f	module:lager_crash_log
handle_cast	deps/lager/src/lager_handler_watcher.erl	/^handle_cast(_Request, State) ->$/;"	f	module:lager_handler_watcher
handle_cast	deps/lager/test/crash.erl	/^handle_cast(_Cast, State) ->$/;"	f	module:crash
handle_cast	deps/ranch/examples/tcp_reverse/src/reverse_protocol.erl	/^handle_cast(_Msg, State) ->$/;"	f	module:reverse_protocol
handle_cast	deps/ranch/src/ranch_server.erl	/^handle_cast(_Request, State) ->$/;"	f	module:ranch_server
handle_cast	src/ecache_protocol.erl	/^handle_cast(Msg, SockState) ->$/;"	f	module:ecache_protocol
handle_cast	src/reloader.erl	/^handle_cast(_Req, State) ->$/;"	f	module:reloader
handle_event	deps/lager/src/error_logger_lager_h.erl	/^handle_event(Event, #state{sink=Sink, shaper=Shaper} = State) ->$/;"	f	module:error_logger_lager_h
handle_event	deps/lager/src/lager_backend_throttle.erl	/^handle_event(_Event, State) ->$/;"	f	module:lager_backend_throttle
handle_event	deps/lager/src/lager_backend_throttle.erl	/^handle_event({log, _Message},State) ->$/;"	f	module:lager_backend_throttle
handle_event	deps/lager/src/lager_common_test_backend.erl	/^handle_event(Event, State) ->$/;"	f	module:lager_common_test_backend
handle_event	deps/lager/src/lager_common_test_backend.erl	/^handle_event({log, Message},$/;"	f	module:lager_common_test_backend
handle_event	deps/lager/src/lager_console_backend.erl	/^handle_event(_Event, State) ->$/;"	f	module:lager_console_backend
handle_event	deps/lager/src/lager_console_backend.erl	/^handle_event({log, Message},$/;"	f	module:lager_console_backend
handle_event	deps/lager/src/lager_file_backend.erl	/^handle_event(_Event, State) ->$/;"	f	module:lager_file_backend
handle_event	deps/lager/src/lager_file_backend.erl	/^handle_event({log, Message},$/;"	f	module:lager_file_backend
handle_event	deps/lager/src/lager_manager_killer.erl	/^handle_event(_Event, State) ->$/;"	f	module:lager_manager_killer
handle_event	deps/lager/src/lager_manager_killer.erl	/^handle_event({log, _Message}, State = #state{killer_hwm=KillerHWM, killer_reinstall_after=KillerReinstallAfter}) ->$/;"	f	module:lager_manager_killer
handle_event	deps/lager/test/lager_crash_backend.erl	/^handle_event(_Event, State) ->$/;"	f	module:lager_crash_backend
handle_event	deps/lager/test/lager_slow_backend.erl	/^handle_event(_Event, State) ->$/;"	f	module:lager_slow_backend
handle_event	deps/lager/test/lager_slow_backend.erl	/^handle_event({log, _Message}, State) ->$/;"	f	module:lager_slow_backend
handle_event	deps/lager/test/lager_test_backend.erl	/^handle_event(_Event, State) ->$/;"	f	module:lager_test_backend
handle_event	deps/lager/test/lager_test_backend.erl	/^handle_event({log, Msg},$/;"	f	module:lager_test_backend
handle_info	deps/goldrush/src/gr_counter.erl	/^handle_info(_Info, State) ->$/;"	f	module:gr_counter
handle_info	deps/goldrush/src/gr_counter.erl	/^handle_info({'ETS-TRANSFER', TableId, _Pid, _Data}, State) ->$/;"	f	module:gr_counter
handle_info	deps/goldrush/src/gr_manager.erl	/^handle_info({'ETS-TRANSFER', TableId, _Pid, Data}, State = #state{managee=Managee}) ->$/;"	f	module:gr_manager
handle_info	deps/goldrush/src/gr_manager.erl	/^handle_info({'EXIT', _Pid, _Reason}, State) ->$/;"	f	module:gr_manager
handle_info	deps/goldrush/src/gr_param.erl	/^handle_info(TableId) ->$/;"	f	module:gr_param
handle_info	deps/goldrush/src/gr_param.erl	/^handle_info(_Info, State) ->$/;"	f	module:gr_param
handle_info	deps/goldrush/src/gr_param.erl	/^handle_info({'ETS-TRANSFER', TableId, _Pid, _Data}, State) ->$/;"	f	module:gr_param
handle_info	deps/lager/src/error_logger_lager_h.erl	/^handle_info(_Info, State) ->$/;"	f	module:error_logger_lager_h
handle_info	deps/lager/src/lager_backend_throttle.erl	/^handle_info(_Info, State) ->$/;"	f	module:lager_backend_throttle
handle_info	deps/lager/src/lager_common_test_backend.erl	/^handle_info(_, State) ->$/;"	f	module:lager_common_test_backend
handle_info	deps/lager/src/lager_console_backend.erl	/^handle_info(_Info, State) ->$/;"	f	module:lager_console_backend
handle_info	deps/lager/src/lager_crash_log.erl	/^handle_info(_Info, State) ->$/;"	f	module:lager_crash_log
handle_info	deps/lager/src/lager_crash_log.erl	/^handle_info(rotate, #state{name=Name, count=Count, date=Date} = State) ->$/;"	f	module:lager_crash_log
handle_info	deps/lager/src/lager_file_backend.erl	/^handle_info(_Info, State) ->$/;"	f	module:lager_file_backend
handle_info	deps/lager/src/lager_file_backend.erl	/^handle_info({rotate, File}, #state{name=File,count=Count,date=Date} = State) ->$/;"	f	module:lager_file_backend
handle_info	deps/lager/src/lager_handler_watcher.erl	/^handle_info(_Info, State) ->$/;"	f	module:lager_handler_watcher
handle_info	deps/lager/src/lager_handler_watcher.erl	/^handle_info(reinstall_handler, #state{module=Module, config=Config, sink=Sink} = State) ->$/;"	f	module:lager_handler_watcher
handle_info	deps/lager/src/lager_handler_watcher.erl	/^handle_info(stop, State) ->$/;"	f	module:lager_handler_watcher
handle_info	deps/lager/src/lager_handler_watcher.erl	/^handle_info({gen_event_EXIT, Module, Reason}, #state{module=Module,$/;"	f	module:lager_handler_watcher
handle_info	deps/lager/src/lager_handler_watcher.erl	/^handle_info({gen_event_EXIT, Module, normal}, #state{module=Module} = State) ->$/;"	f	module:lager_handler_watcher
handle_info	deps/lager/src/lager_handler_watcher.erl	/^handle_info({gen_event_EXIT, Module, shutdown}, #state{module=Module} = State) ->$/;"	f	module:lager_handler_watcher
handle_info	deps/lager/src/lager_handler_watcher.erl	/^handle_info({gen_event_EXIT, Module, {'EXIT', {kill_me, [_KillerHWM, KillerReinstallAfter]}}},$/;"	f	module:lager_handler_watcher
handle_info	deps/lager/src/lager_handler_watcher.erl	/^handle_info({reboot, Sink}, State) ->$/;"	f	module:lager_handler_watcher
handle_info	deps/lager/src/lager_manager_killer.erl	/^handle_info(_Info, State) ->$/;"	f	module:lager_manager_killer
handle_info	deps/lager/test/crash.erl	/^handle_info(_Info, State) ->$/;"	f	module:crash
handle_info	deps/lager/test/lager_crash_backend.erl	/^handle_info(_Info, State) ->$/;"	f	module:lager_crash_backend
handle_info	deps/lager/test/lager_crash_backend.erl	/^handle_info(crash, _State) ->$/;"	f	module:lager_crash_backend
handle_info	deps/lager/test/lager_slow_backend.erl	/^handle_info(_Info, State) ->$/;"	f	module:lager_slow_backend
handle_info	deps/lager/test/lager_test_backend.erl	/^handle_info(_Info, State) ->$/;"	f	module:lager_test_backend
handle_info	deps/ranch/examples/tcp_reverse/src/reverse_protocol.erl	/^handle_info(_Info, State) ->$/;"	f	module:reverse_protocol
handle_info	deps/ranch/examples/tcp_reverse/src/reverse_protocol.erl	/^handle_info(timeout, State) ->$/;"	f	module:reverse_protocol
handle_info	deps/ranch/examples/tcp_reverse/src/reverse_protocol.erl	/^handle_info({tcp, Socket, Data}, State=#state{$/;"	f	module:reverse_protocol
handle_info	deps/ranch/examples/tcp_reverse/src/reverse_protocol.erl	/^handle_info({tcp_closed, _Socket}, State) ->$/;"	f	module:reverse_protocol
handle_info	deps/ranch/examples/tcp_reverse/src/reverse_protocol.erl	/^handle_info({tcp_error, _, Reason}, State) ->$/;"	f	module:reverse_protocol
handle_info	deps/ranch/src/ranch_server.erl	/^handle_info(_Info, State) ->$/;"	f	module:ranch_server
handle_info	deps/ranch/src/ranch_server.erl	/^handle_info({'DOWN', MonitorRef, process, Pid, _},$/;"	f	module:ranch_server
handle_info	src/ecache_protocol.erl	/^handle_info(Info, SockState) ->$/;"	f	module:ecache_protocol
handle_info	src/ecache_protocol.erl	/^handle_info(timeout, SockState) ->$/;"	f	module:ecache_protocol
handle_info	src/ecache_protocol.erl	/^handle_info({_TcpOrSSL, Socket, Data}, #sock_state{socket = Socket, $/;"	f	module:ecache_protocol
handle_info	src/ecache_protocol.erl	/^handle_info({ok, <<>>}, SockState) ->$/;"	f	module:ecache_protocol
handle_info	src/ecache_protocol.erl	/^handle_info({ok, MessageInfo}, #sock_state{socket = Socket, $/;"	f	module:ecache_protocol
handle_info	src/ecache_protocol.erl	/^handle_info({ok, []}, SockState) ->$/;"	f	module:ecache_protocol
handle_info	src/ecache_protocol.erl	/^handle_info({shutdown, Reason}, SockState) ->$/;"	f	module:ecache_protocol
handle_info	src/ecache_protocol.erl	/^handle_info({tcp_closed, Socket}, SockState) ->$/;"	f	module:ecache_protocol
handle_info	src/ecache_protocol.erl	/^handle_info({tcp_error, Socket, Reason}, SockState) ->$/;"	f	module:ecache_protocol
handle_info	src/reloader.erl	/^handle_info(_Info, State) ->$/;"	f	module:reloader
handle_info	src/reloader.erl	/^handle_info(doit, State) ->$/;"	f	module:reloader
handle_info_size	deps/goldrush/src/gr_param.erl	/^handle_info_size(TableId) ->$/;"	f	module:gr_param
handle_insert	deps/goldrush/src/gr_counter.erl	/^handle_insert(TableId, Term) ->$/;"	f	module:gr_counter
handle_insert	deps/goldrush/src/gr_param.erl	/^handle_insert(TableId, Term) ->$/;"	f	module:gr_param
handle_list	deps/goldrush/src/gr_counter.erl	/^handle_list(TableId) ->$/;"	f	module:gr_counter
handle_list	deps/goldrush/src/gr_param.erl	/^handle_list(TableId) ->$/;"	f	module:gr_param
handle_lookup	deps/goldrush/src/gr_param.erl	/^handle_lookup(TableId, Term) ->$/;"	f	module:gr_param
handle_lookup_element	deps/goldrush/src/gr_counter.erl	/^handle_lookup_element(TableId, Term) ->$/;"	f	module:gr_counter
handle_lookup_element	deps/goldrush/src/gr_param.erl	/^handle_lookup_element(TableId, Term) ->$/;"	f	module:gr_param
handle_transform	deps/goldrush/src/gr_param.erl	/^handle_transform(TableId) ->$/;"	f	module:gr_param
handle_update_counter	deps/goldrush/src/gr_counter.erl	/^handle_update_counter(TableId, Counter, Value) ->$/;"	f	module:gr_counter
has	deps/goldrush/src/gre.erl	/^has(Key, {list, List}) ->$/;"	f	module:gre
has_line_numbers	deps/lager/test/lager_test_backend.erl	/^has_line_numbers() ->$/;"	f	module:lager_test_backend
have_log	deps/lager/test/lager_rotate.erl	/^have_log(Data, Log) ->$/;"	f	module:lager_rotate
have_no_log	deps/lager/test/lager_rotate.erl	/^have_no_log(Data, Log) ->$/;"	f	module:lager_rotate
high_watermark_test_	deps/lager/test/lager_test_backend.erl	/^high_watermark_test_() ->$/;"	f	module:lager_test_backend
i2l	deps/lager/src/lager_util.erl	/^i2l(I)              -> integer_to_list(I).$/;"	f	module:lager_util
i2l	deps/lager/src/lager_util.erl	/^i2l(I) when I < 10  -> [$0, $0+I];$/;"	f	module:lager_util
i3l	deps/lager/src/lager_util.erl	/^i3l(I)              -> integer_to_list(I).$/;"	f	module:lager_util
i3l	deps/lager/src/lager_util.erl	/^i3l(I) when I < 100 -> [$0 | i2l(I)];$/;"	f	module:lager_util
improper_io_list_test	deps/lager/src/lager_trunc_io.erl	/^improper_io_list_test() ->$/;"	f	module:lager_trunc_io
infinity	deps/ranch/test/shutdown_SUITE.erl	/^infinity(_) ->$/;"	f	module:shutdown_SUITE
infinity_trap_exit	deps/ranch/test/shutdown_SUITE.erl	/^infinity_trap_exit(_) ->$/;"	f	module:shutdown_SUITE
info	deps/goldrush/src/glc.erl	/^info(Module) ->$/;"	f	module:glc
info	deps/goldrush/src/gr_param.erl	/^info(Server) ->$/;"	f	module:gr_param
info	deps/ranch/src/ranch.erl	/^info() ->$/;"	f	module:ranch
info_msg	deps/lager/test/sync_error_logger.erl	/^info_msg(Format) ->$/;"	f	module:sync_error_logger
info_msg	deps/lager/test/sync_error_logger.erl	/^info_msg(Format, Args) ->$/;"	f	module:sync_error_logger
info_report	deps/lager/test/sync_error_logger.erl	/^info_report(Report) ->$/;"	f	module:sync_error_logger
info_report	deps/lager/test/sync_error_logger.erl	/^info_report(Type, Report) ->$/;"	f	module:sync_error_logger
info_size	deps/goldrush/src/gr_param.erl	/^info_size(Server) ->$/;"	f	module:gr_param
init	deps/goldrush/src/gr_counter.erl	/^init([]) ->$/;"	f	module:gr_counter
init	deps/goldrush/src/gr_counter_sup.erl	/^init(_Args) ->$/;"	f	module:gr_counter_sup
init	deps/goldrush/src/gr_manager.erl	/^init([Managee, Data]) ->$/;"	f	module:gr_manager
init	deps/goldrush/src/gr_manager_sup.erl	/^init(_Args) ->$/;"	f	module:gr_manager_sup
init	deps/goldrush/src/gr_param.erl	/^init([]) ->$/;"	f	module:gr_param
init	deps/goldrush/src/gr_param_sup.erl	/^init(_Args) ->$/;"	f	module:gr_param_sup
init	deps/goldrush/src/gr_sup.erl	/^init([]) ->$/;"	f	module:gr_sup
init	deps/lager/src/error_logger_lager_h.erl	/^init([HighWaterMark, GlStrategy]) ->$/;"	f	module:error_logger_lager_h
init	deps/lager/src/lager_backend_throttle.erl	/^init([{sink, Sink}, Hwm, Window]) ->$/;"	f	module:lager_backend_throttle
init	deps/lager/src/lager_common_test_backend.erl	/^init(Level) ->$/;"	f	module:lager_common_test_backend
init	deps/lager/src/lager_common_test_backend.erl	/^init([Level, true]) -> % for backwards compatibility$/;"	f	module:lager_common_test_backend
init	deps/lager/src/lager_common_test_backend.erl	/^init([Level,false]) -> % for backwards compatibility$/;"	f	module:lager_common_test_backend
init	deps/lager/src/lager_common_test_backend.erl	/^init([Level,{Formatter,FormatterConfig}]) when is_atom(Formatter) ->$/;"	f	module:lager_common_test_backend
init	deps/lager/src/lager_console_backend.erl	/^init(Level) ->$/;"	f	module:lager_console_backend
init	deps/lager/src/lager_console_backend.erl	/^init([Level, true]) -> % for backwards compatibility$/;"	f	module:lager_console_backend
init	deps/lager/src/lager_console_backend.erl	/^init([Level,false]) -> % for backwards compatibility$/;"	f	module:lager_console_backend
init	deps/lager/src/lager_console_backend.erl	/^init([Level,{Formatter,FormatterConfig}]) when is_atom(Formatter) ->$/;"	f	module:lager_console_backend
init	deps/lager/src/lager_console_backend.erl	/^init([Level]) when is_atom(Level) ->$/;"	f	module:lager_console_backend
init	deps/lager/src/lager_crash_log.erl	/^init([RelFilename, MaxBytes, Size, Date, Count]) ->$/;"	f	module:lager_crash_log
init	deps/lager/src/lager_file_backend.erl	/^init(LogFileConfig) when is_list(LogFileConfig) ->$/;"	f	module:lager_file_backend
init	deps/lager/src/lager_file_backend.erl	/^init([LogFile,{Formatter}]) ->$/;"	f	module:lager_file_backend
init	deps/lager/src/lager_file_backend.erl	/^init([{FileName, LogLevel, Size, Date, Count}, {Formatter,FormatterConfig}]) when is_list(FileName), is_atom(LogLevel), is_atom(Formatter) ->$/;"	f	module:lager_file_backend
init	deps/lager/src/lager_file_backend.erl	/^init([{FileName, LogLevel}, {Formatter,FormatterConfig}]) when is_list(FileName), is_atom(LogLevel), is_atom(Formatter) ->$/;"	f	module:lager_file_backend
init	deps/lager/src/lager_file_backend.erl	/^init({FileName, LogLevel, Size, Date, Count}) when is_list(FileName), is_atom(LogLevel) ->$/;"	f	module:lager_file_backend
init	deps/lager/src/lager_file_backend.erl	/^init({FileName, LogLevel}) when is_list(FileName), is_atom(LogLevel) ->$/;"	f	module:lager_file_backend
init	deps/lager/src/lager_handler_watcher.erl	/^init([Sink, Module, Config]) ->$/;"	f	module:lager_handler_watcher
init	deps/lager/src/lager_handler_watcher_sup.erl	/^init([]) ->$/;"	f	module:lager_handler_watcher_sup
init	deps/lager/src/lager_manager_killer.erl	/^init([KillerHWM, KillerReinstallAfter]) ->$/;"	f	module:lager_manager_killer
init	deps/lager/src/lager_sup.erl	/^init([]) ->$/;"	f	module:lager_sup
init	deps/lager/test/crash.erl	/^init(_) ->$/;"	f	module:crash
init	deps/lager/test/lager_crash_backend.erl	/^init([CrashBefore, CrashAfter]) ->$/;"	f	module:lager_crash_backend
init	deps/lager/test/lager_slow_backend.erl	/^init([{delay, Delay}]) ->$/;"	f	module:lager_slow_backend
init	deps/lager/test/lager_test_backend.erl	/^init(Level) ->$/;"	f	module:lager_test_backend
init	deps/lager/test/special_process.erl	/^init(Parent) ->$/;"	f	module:special_process
init	deps/ranch/examples/tcp_echo/src/echo_protocol.erl	/^init(Ref, Socket, Transport, _Opts = []) ->$/;"	f	module:echo_protocol
init	deps/ranch/examples/tcp_echo/src/tcp_echo_sup.erl	/^init([]) ->$/;"	f	module:tcp_echo_sup
init	deps/ranch/examples/tcp_reverse/src/reverse_protocol.erl	/^init({Ref, Socket, Transport, _Opts = []}) ->$/;"	f	module:reverse_protocol
init	deps/ranch/examples/tcp_reverse/src/tcp_reverse_sup.erl	/^init([]) ->$/;"	f	module:tcp_reverse_sup
init	deps/ranch/src/ranch_acceptors_sup.erl	/^init([Ref, NumAcceptors, Transport, TransOpts]) ->$/;"	f	module:ranch_acceptors_sup
init	deps/ranch/src/ranch_conns_sup.erl	/^init(Parent, Ref, ConnType, Shutdown, Transport, AckTimeout, Protocol) ->$/;"	f	module:ranch_conns_sup
init	deps/ranch/src/ranch_listener_sup.erl	/^init({Ref, NumAcceptors, Transport, TransOpts, Protocol}) ->$/;"	f	module:ranch_listener_sup
init	deps/ranch/src/ranch_server.erl	/^init([]) ->$/;"	f	module:ranch_server
init	deps/ranch/src/ranch_sup.erl	/^init([]) ->$/;"	f	module:ranch_sup
init	deps/ranch/test/active_echo_protocol.erl	/^init(Ref, Socket, Transport, _Opts = []) ->$/;"	f	module:active_echo_protocol
init	deps/ranch/test/check_tcp_options.erl	/^init(Pid, TcpOptions, TcpOptions) ->$/;"	f	module:check_tcp_options
init	deps/ranch/test/echo_protocol.erl	/^init(Ref, Socket, Transport, _Opts = []) ->$/;"	f	module:echo_protocol
init	deps/ranch/test/notify_and_wait_protocol.erl	/^init(Msg, Pid) ->$/;"	f	module:notify_and_wait_protocol
init	deps/ranch/test/ranch_ct_hook.erl	/^init(_, _) ->$/;"	f	module:ranch_ct_hook
init	deps/ranch/test/remove_conn_and_wait_protocol.erl	/^init(Ref, MaybeRemove, Timeout) ->$/;"	f	module:remove_conn_and_wait_protocol
init	deps/ranch/test/supervisor_separate.erl	/^init([]) ->$/;"	f	module:supervisor_separate
init	deps/ranch/test/trap_exit_protocol.erl	/^init(Ref, Socket, Transport, _Opts = []) ->$/;"	f	module:trap_exit_protocol
init	src/ecache_protocol.erl	/^init(Ref, Socket, Transport, _Opts = []) ->$/;"	f	module:ecache_protocol
init	src/ecache_protocol.erl	/^init([]) -> {ok, undefined}.$/;"	f	module:ecache_protocol
init	src/ecache_sup.erl	/^init([]) ->$/;"	f	module:ecache_sup
init	src/reloader.erl	/^init([]) ->$/;"	f	module:reloader
init_per_group	deps/ranch/test/sendfile_SUITE.erl	/^init_per_group(ssl, Config) ->$/;"	f	module:sendfile_SUITE
init_per_group	deps/ranch/test/sendfile_SUITE.erl	/^init_per_group(tcp, Config) ->$/;"	f	module:sendfile_SUITE
init_per_suite	deps/ranch/test/sendfile_SUITE.erl	/^init_per_suite(Config) ->$/;"	f	module:sendfile_SUITE
input	deps/goldrush/src/glc.erl	/^input(Module) ->$/;"	f	module:glc
insert	deps/goldrush/src/gr_param.erl	/^insert(Server, Term) ->$/;"	f	module:gr_param
insert_counter	deps/goldrush/src/gr_counter.erl	/^insert_counter(Server, Counter, Value) when is_atom(Server) ->$/;"	f	module:gr_counter
insert_counter	deps/goldrush/src/gr_counter.erl	/^insert_counter(Server, Counter, Value) when is_pid(Server) ->$/;"	f	module:gr_counter
insert_record_attribute	deps/lager/src/lager_transform.erl	/^insert_record_attribute(AST) ->$/;"	f	module:lager_transform
install_handler	deps/lager/src/lager_handler_watcher.erl	/^install_handler(Sink, Module, Config) ->$/;"	f	module:lager_handler_watcher
install_handler	deps/lager/src/lager_handler_watcher.erl	/^install_handler(Sink, lager_backend_throttle, Config) ->$/;"	f	module:lager_handler_watcher
install_handler2	deps/lager/src/lager_handler_watcher.erl	/^install_handler2(Sink, Module, Config) ->$/;"	f	module:lager_handler_watcher
interpret_hwm	deps/lager/src/lager_app.erl	/^interpret_hwm(HWM) ->$/;"	f	module:lager_app
interpret_hwm	deps/lager/src/lager_app.erl	/^interpret_hwm(HWM) when not is_integer(HWM) orelse HWM < 0 ->$/;"	f	module:lager_app
interpret_hwm	deps/lager/src/lager_app.erl	/^interpret_hwm(undefined) ->$/;"	f	module:lager_app
iolist_printing_test	deps/lager/src/lager_trunc_io.erl	/^iolist_printing_test() ->$/;"	f	module:lager_trunc_io
iolist_to_chars	deps/lager/src/lager_format.erl	/^iolist_to_chars(B) when is_binary(B) ->$/;"	f	module:lager_format
iolist_to_chars	deps/lager/src/lager_format.erl	/^iolist_to_chars([C|Cs]) when is_integer(C), C >= $\\000, C =< $\\377 ->$/;"	f	module:lager_format
iolist_to_chars	deps/lager/src/lager_format.erl	/^iolist_to_chars([I|Cs]) ->$/;"	f	module:lager_format
iolist_to_chars	deps/lager/src/lager_format.erl	/^iolist_to_chars([]) ->$/;"	f	module:lager_format
is_changed	src/reloader.erl	/^is_changed(M) ->$/;"	f	module:reloader
is_loggable	deps/lager/src/lager_util.erl	/^is_loggable(Msg ,SeverityThreshold,MyName) ->$/;"	f	module:lager_util
is_loggable	deps/lager/src/lager_util.erl	/^is_loggable(Msg, {mask, Mask}, MyName) ->$/;"	f	module:lager_util
is_loggable_test_	deps/lager/src/lager_util.erl	/^is_loggable_test_() ->$/;"	f	module:lager_util
is_my_error_report	deps/lager/src/lager_stdlib.erl	/^is_my_error_report(_)                   -> false.$/;"	f	module:lager_stdlib
is_my_error_report	deps/lager/src/lager_stdlib.erl	/^is_my_error_report(crash_report)        -> true;$/;"	f	module:lager_stdlib
is_my_error_report	deps/lager/src/lager_stdlib.erl	/^is_my_error_report(supervisor_report)   -> true;$/;"	f	module:lager_stdlib
is_my_info_report	deps/lager/src/lager_stdlib.erl	/^is_my_info_report(_)         -> false.$/;"	f	module:lager_stdlib
is_my_info_report	deps/lager/src/lager_stdlib.erl	/^is_my_info_report(progress)  -> true;$/;"	f	module:lager_stdlib
is_new_style_console_available	deps/lager/src/lager_console_backend.erl	/^is_new_style_console_available() ->$/;"	f	module:lager_console_backend
is_op	deps/lager/src/lager_stdlib.erl	/^is_op(ForMForFun, A) ->$/;"	f	module:lager_stdlib
is_record_known	deps/lager/src/lager.erl	/^is_record_known(Record, Module) ->$/;"	f	module:lager
is_stacktrace	deps/lager/src/lager_stdlib.erl	/^is_stacktrace([]) ->$/;"	f	module:lager_stdlib
is_stacktrace	deps/lager/src/lager_stdlib.erl	/^is_stacktrace([{M,F,As}|Fs]) when is_atom(M), is_atom(F), length(As) >= 0 ->$/;"	f	module:lager_stdlib
is_stacktrace	deps/lager/src/lager_stdlib.erl	/^is_stacktrace([{M,F,A}|Fs]) when is_atom(M), is_atom(F), is_integer(A) ->$/;"	f	module:lager_stdlib
is_stacktrace	deps/lager/src/lager_stdlib.erl	/^is_stacktrace(_) ->$/;"	f	module:lager_stdlib
is_valid	deps/goldrush/src/glc_lib.erl	/^is_valid(_Other) ->$/;"	f	module:glc_lib
is_valid	deps/goldrush/src/glc_lib.erl	/^is_valid({Field, '!'}) when is_atom(Field) ->$/;"	f	module:glc_lib
is_valid	deps/goldrush/src/glc_lib.erl	/^is_valid({Field, '!=', _Term}) when is_atom(Field) ->$/;"	f	module:glc_lib
is_valid	deps/goldrush/src/glc_lib.erl	/^is_valid({Field, '*'}) when is_atom(Field) ->$/;"	f	module:glc_lib
is_valid	deps/goldrush/src/glc_lib.erl	/^is_valid({Field, '<', _Term}) when is_atom(Field) ->$/;"	f	module:glc_lib
is_valid	deps/goldrush/src/glc_lib.erl	/^is_valid({Field, '=', _Term}) when is_atom(Field) ->$/;"	f	module:glc_lib
is_valid	deps/goldrush/src/glc_lib.erl	/^is_valid({Field, '=<', _Term}) when is_atom(Field) ->$/;"	f	module:glc_lib
is_valid	deps/goldrush/src/glc_lib.erl	/^is_valid({Field, '>', _Term}) when is_atom(Field) ->$/;"	f	module:glc_lib
is_valid	deps/goldrush/src/glc_lib.erl	/^is_valid({Field, '>=', _Term}) when is_atom(Field) ->$/;"	f	module:glc_lib
is_valid	deps/goldrush/src/glc_lib.erl	/^is_valid({null, false}) ->$/;"	f	module:glc_lib
is_valid	deps/goldrush/src/glc_lib.erl	/^is_valid({null, true}) ->$/;"	f	module:glc_lib
job_error	deps/goldrush/src/glc.erl	/^job_error(Module) ->$/;"	f	module:glc
job_input	deps/goldrush/src/glc.erl	/^job_input(Module) ->$/;"	f	module:glc
job_run	deps/goldrush/src/glc.erl	/^job_run(Module) ->$/;"	f	module:glc
job_time	deps/goldrush/src/glc.erl	/^job_time(Module) ->$/;"	f	module:glc
keepalive	src/tcp_client.erl	/^keepalive(ClientId) ->$/;"	f	module:tcp_client
keys	deps/goldrush/src/gre.erl	/^keys({list, List}) ->$/;"	f	module:gre
kill_children	deps/ranch/src/ranch_conns_sup.erl	/^kill_children(Pids) ->$/;"	f	module:ranch_conns_sup
kill_me	deps/lager/src/lager_manager_killer.erl	/^kill_me() ->$/;"	f	module:lager_manager_killer
kv_keys_	deps/goldrush/src/gre.erl	/^kv_keys_([]) ->$/;"	f	module:gre
kv_keys_	deps/goldrush/src/gre.erl	/^kv_keys_([{Key, _}|T]) ->$/;"	f	module:gre
lager	deps/lager/src/lager.erl	/^-module(lager).$/;"	m
lager_app	deps/lager/src/lager_app.erl	/^-module(lager_app).$/;"	m
lager_app_tests	deps/lager/test/lager_app_tests.erl	/^-module(lager_app_tests).$/;"	m
lager_backend_throttle	deps/lager/src/lager_backend_throttle.erl	/^-module(lager_backend_throttle).$/;"	m
lager_common_test_backend	deps/lager/src/lager_common_test_backend.erl	/^-module(lager_common_test_backend).$/;"	m
lager_config	deps/lager/src/lager_config.erl	/^-module(lager_config).$/;"	m
lager_console_backend	deps/lager/src/lager_console_backend.erl	/^-module(lager_console_backend).$/;"	m
lager_crash_backend	deps/lager/test/lager_crash_backend.erl	/^-module(lager_crash_backend).$/;"	m
lager_crash_log	deps/lager/src/lager_crash_log.erl	/^-module(lager_crash_log).$/;"	m
lager_default_formatter	deps/lager/src/lager_default_formatter.erl	/^-module(lager_default_formatter).$/;"	m
lager_file_backend	deps/lager/src/lager_file_backend.erl	/^-module(lager_file_backend).$/;"	m
lager_format	deps/lager/src/lager_format.erl	/^-module(lager_format).$/;"	m
lager_handler_watcher	deps/lager/src/lager_handler_watcher.erl	/^-module(lager_handler_watcher).$/;"	m
lager_handler_watcher_sup	deps/lager/src/lager_handler_watcher_sup.erl	/^-module(lager_handler_watcher_sup).$/;"	m
lager_manager_killer	deps/lager/src/lager_manager_killer.erl	/^-module(lager_manager_killer).$/;"	m
lager_manager_killer_test	deps/lager/test/lager_manager_killer_test.erl	/^-module(lager_manager_killer_test).$/;"	m
lager_msg	deps/lager/src/lager_msg.erl	/^-module(lager_msg).$/;"	m
lager_msg	deps/lager/src/lager_msg.erl	/^-record(lager_msg,{$/;"	r
lager_rotate	deps/lager/test/lager_rotate.erl	/^-module(lager_rotate).$/;"	m
lager_shaper	deps/lager/include/lager.hrl	/^-record(lager_shaper, {$/;"	r
lager_slow_backend	deps/lager/test/lager_slow_backend.erl	/^-module(lager_slow_backend).$/;"	m
lager_stdlib	deps/lager/src/lager_stdlib.erl	/^-module(lager_stdlib).$/;"	m
lager_sup	deps/lager/src/lager_sup.erl	/^-module(lager_sup).$/;"	m
lager_test_	deps/lager/test/lager_test_backend.erl	/^lager_test_() ->$/;"	f	module:lager_test_backend
lager_test_backend	deps/lager/test/lager_test_backend.erl	/^-module(lager_test_backend).$/;"	m
lager_transform	deps/lager/src/lager_transform.erl	/^-module(lager_transform).$/;"	m
lager_trunc_io	deps/lager/src/lager_trunc_io.erl	/^-module(lager_trunc_io).$/;"	m
lager_util	deps/lager/src/lager_util.erl	/^-module(lager_util).$/;"	m
level_to_atom	deps/lager/src/lager_util.erl	/^level_to_atom(String) ->$/;"	f	module:lager_util
level_to_chr	deps/lager/src/lager_util.erl	/^level_to_chr(alert)      -> $A;$/;"	f	module:lager_util
level_to_chr	deps/lager/src/lager_util.erl	/^level_to_chr(critical)   -> $C;$/;"	f	module:lager_util
level_to_chr	deps/lager/src/lager_util.erl	/^level_to_chr(debug)      -> $D;$/;"	f	module:lager_util
level_to_chr	deps/lager/src/lager_util.erl	/^level_to_chr(emergency)  -> $M;$/;"	f	module:lager_util
level_to_chr	deps/lager/src/lager_util.erl	/^level_to_chr(error)      -> $E;$/;"	f	module:lager_util
level_to_chr	deps/lager/src/lager_util.erl	/^level_to_chr(info)       -> $I;$/;"	f	module:lager_util
level_to_chr	deps/lager/src/lager_util.erl	/^level_to_chr(none)       -> $ .$/;"	f	module:lager_util
level_to_chr	deps/lager/src/lager_util.erl	/^level_to_chr(notice)     -> $N;$/;"	f	module:lager_util
level_to_chr	deps/lager/src/lager_util.erl	/^level_to_chr(warning)    -> $W;$/;"	f	module:lager_util
level_to_num	deps/lager/src/lager_util.erl	/^level_to_num(alert)      -> ?ALERT;$/;"	f	module:lager_util
level_to_num	deps/lager/src/lager_util.erl	/^level_to_num(critical)   -> ?CRITICAL;$/;"	f	module:lager_util
level_to_num	deps/lager/src/lager_util.erl	/^level_to_num(debug)      -> ?DEBUG;$/;"	f	module:lager_util
level_to_num	deps/lager/src/lager_util.erl	/^level_to_num(emergency)  -> ?EMERGENCY;$/;"	f	module:lager_util
level_to_num	deps/lager/src/lager_util.erl	/^level_to_num(error)      -> ?ERROR;$/;"	f	module:lager_util
level_to_num	deps/lager/src/lager_util.erl	/^level_to_num(info)       -> ?INFO;$/;"	f	module:lager_util
level_to_num	deps/lager/src/lager_util.erl	/^level_to_num(none)       -> ?LOG_NONE.$/;"	f	module:lager_util
level_to_num	deps/lager/src/lager_util.erl	/^level_to_num(notice)     -> ?NOTICE;$/;"	f	module:lager_util
level_to_num	deps/lager/src/lager_util.erl	/^level_to_num(warning)    -> ?WARNING;$/;"	f	module:lager_util
levels	deps/lager/src/lager_util.erl	/^levels() ->$/;"	f	module:lager_util
lib_format_exception	deps/lager/src/lager_stdlib.erl	/^lib_format_exception(I, Class, Reason, StackTrace, StackFun, FormatFun) $/;"	f	module:lager_stdlib
limited_fmt	deps/lager/src/lager_crash_log.erl	/^limited_fmt(Fmt, Args, FmtMaxBytes) ->$/;"	f	module:lager_crash_log
limited_str	deps/lager/src/lager_crash_log.erl	/^limited_str(Term, FmtMaxBytes) ->$/;"	f	module:lager_crash_log
link_verbose	deps/ranch/erlang.mk	/^link_verbose = $(link_verbose_$(V))$/;"	m
link_verbose_0	deps/ranch/erlang.mk	/^link_verbose_0 = @echo " LD    " $(@F);$/;"	m
list	deps/goldrush/src/gr_counter.erl	/^list(Server) ->$/;"	f	module:gr_counter
list	deps/goldrush/src/gr_param.erl	/^list(Server) ->$/;"	f	module:gr_param
list_all_sinks	deps/lager/src/lager.erl	/^list_all_sinks() ->$/;"	f	module:lager
list_body	deps/lager/src/lager_trunc_io.erl	/^list_body(X, Max, Options, _Tuple) ->  %% improper list$/;"	f	module:lager_trunc_io
list_body	deps/lager/src/lager_trunc_io.erl	/^list_body([H], Max, Options=#print_options{depth=1}, _Tuple) ->$/;"	f	module:lager_trunc_io
list_body	deps/lager/src/lager_trunc_io.erl	/^list_body([H|T], Max, Options, Tuple) ->$/;"	f	module:lager_trunc_io
list_body	deps/lager/src/lager_trunc_io.erl	/^list_body([H|_], Max, Options=#print_options{depth=1}, Tuple) ->$/;"	f	module:lager_trunc_io
list_body	deps/lager/src/lager_trunc_io.erl	/^list_body([], _Max, _Options, _Tuple) -> {[], 0};$/;"	f	module:lager_trunc_io
list_body	deps/lager/src/lager_trunc_io.erl	/^list_body(_, Max, _Options, _Tuple) when Max < 4 -> {"...", 3};$/;"	f	module:lager_trunc_io
list_body	deps/lager/src/lager_trunc_io.erl	/^list_body(_, _Max, #print_options{depth=0}, _Tuple) -> {"...", 3};$/;"	f	module:lager_trunc_io
list_bodyc	deps/lager/src/lager_trunc_io.erl	/^list_bodyc(X, Max, Options, _Tuple) ->  %% improper list$/;"	f	module:lager_trunc_io
list_bodyc	deps/lager/src/lager_trunc_io.erl	/^list_bodyc([H|T], Max, #print_options{depth=Depth} = Options, Tuple) ->$/;"	f	module:lager_trunc_io
list_bodyc	deps/lager/src/lager_trunc_io.erl	/^list_bodyc([], _Max, _Options, _Tuple) -> {[], 0};$/;"	f	module:lager_trunc_io
list_bodyc	deps/lager/src/lager_trunc_io.erl	/^list_bodyc(_, Max, _Options, _Tuple) when Max < 5 -> {",...", 4};$/;"	f	module:lager_trunc_io
list_bodyc	deps/lager/src/lager_trunc_io.erl	/^list_bodyc(_, _Max, #print_options{depth=1}, false) -> {"|...", 4};$/;"	f	module:lager_trunc_io
list_bodyc	deps/lager/src/lager_trunc_io.erl	/^list_bodyc(_, _Max, #print_options{depth=1}, true) -> {",...", 4};$/;"	f	module:lager_trunc_io
list_printing_test	deps/lager/src/lager_trunc_io.erl	/^list_printing_test() ->$/;"	f	module:lager_trunc_io
listen	deps/ranch/src/ranch_ssl.erl	/^listen(Opts) ->$/;"	f	module:ranch_ssl
listen	deps/ranch/src/ranch_tcp.erl	/^listen(Opts) ->$/;"	f	module:ranch_tcp
listen_error	deps/ranch/src/ranch_acceptors_sup.erl	/^listen_error(Ref, Transport, TransOpts0, Reason) ->$/;"	f	module:ranch_acceptors_sup
listener_info	deps/ranch/src/ranch.erl	/^listener_info(Ref, Pid) ->$/;"	f	module:ranch
listener_start_args	deps/ranch/src/ranch.erl	/^listener_start_args(Ref) ->$/;"	f	module:ranch
load_binary	deps/goldrush/src/glc_code.erl	/^load_binary(Module, Binary) ->$/;"	f	module:glc_code
localtime_ms	deps/lager/src/lager_util.erl	/^localtime_ms() ->$/;"	f	module:lager_util
localtime_ms	deps/lager/src/lager_util.erl	/^localtime_ms(Now) ->$/;"	f	module:lager_util
log	deps/lager/src/lager.erl	/^log(Level, Metadata, Format, Args) when is_list(Metadata) ->$/;"	f	module:lager
log	deps/lager/src/lager.erl	/^log(Level, Metadata, Message) when is_list(Metadata) ->$/;"	f	module:lager
log	deps/lager/src/lager.erl	/^log(Level, Pid, Format, Args) when is_pid(Pid); is_atom(Pid) ->$/;"	f	module:lager
log	deps/lager/src/lager.erl	/^log(Level, Pid, Message) when is_pid(Pid); is_atom(Pid) ->$/;"	f	module:lager
log	deps/lager/src/lager.erl	/^log(Sink, Level, Metadata, Format, Args) when is_list(Metadata) ->$/;"	f	module:lager
log	deps/lager/src/lager.erl	/^log(Sink, Level, Pid, Format, Args) when is_pid(Pid); is_atom(Pid) ->$/;"	f	module:lager
log_event	deps/lager/src/error_logger_lager_h.erl	/^log_event(Event, #state{sink=Sink} = State) ->$/;"	f	module:error_logger_lager_h
log_unsafe	deps/lager/src/lager.erl	/^log_unsafe(Level, Metadata, Format, Args) when is_list(Metadata) ->$/;"	f	module:lager
lookup	deps/goldrush/src/gr_param.erl	/^lookup(Server, Term) ->$/;"	f	module:gr_param
lookup_element	deps/goldrush/src/gr_counter.erl	/^lookup_element(Server, Term) ->$/;"	f	module:gr_counter
lookup_element	deps/goldrush/src/gr_param.erl	/^lookup_element(Server, Term) ->$/;"	f	module:gr_param
loop	deps/lager/test/special_process.erl	/^loop() ->$/;"	f	module:special_process
loop	deps/ranch/examples/tcp_echo/src/echo_protocol.erl	/^loop(Socket, Transport) ->$/;"	f	module:echo_protocol
loop	deps/ranch/src/ranch_acceptor.erl	/^loop(LSocket, Transport, ConnsSup) ->$/;"	f	module:ranch_acceptor
loop	deps/ranch/src/ranch_conns_sup.erl	/^loop(State=#state{parent=Parent, ref=Ref, conn_type=ConnType,$/;"	f	module:ranch_conns_sup
loop	deps/ranch/test/active_echo_protocol.erl	/^loop(Socket, Transport) ->$/;"	f	module:active_echo_protocol
loop	deps/ranch/test/echo_protocol.erl	/^loop(Socket, Transport) ->$/;"	f	module:echo_protocol
loop	deps/ranch/test/trap_exit_protocol.erl	/^loop(Socket, Transport) ->$/;"	f	module:trap_exit_protocol
loop	src/tcp_client.erl	/^loop({Sock, ClientId}) ->$/;"	f	module:tcp_client
lowercase	deps/lager/src/lager_format.erl	/^lowercase([H|T]) ->$/;"	f	module:lager_format
lowercase	deps/lager/src/lager_format.erl	/^lowercase([H|T]) when is_integer(H), H >= $A, H =< $Z ->$/;"	f	module:lager_format
lowercase	deps/lager/src/lager_format.erl	/^lowercase([]) ->$/;"	f	module:lager_format
lt	deps/goldrush/src/glc.erl	/^lt(Key, Term) ->$/;"	f	module:glc
lt	deps/goldrush/src/glc_ops.erl	/^lt(Key, Term) ->$/;"	f	module:glc_ops
lt	deps/goldrush/src/glc_ops.erl	/^lt(Key, Term) when is_atom(Key) ->$/;"	f	module:glc_ops
lte	deps/goldrush/src/glc.erl	/^lte(Key, Term) ->$/;"	f	module:glc
lte	deps/goldrush/src/glc_ops.erl	/^lte(Key, Term) ->$/;"	f	module:glc_ops
lte	deps/goldrush/src/glc_ops.erl	/^lte(Key, Term) when is_atom(Key) ->$/;"	f	module:glc_ops
make	deps/goldrush/src/gr_context.erl	/^make(Options) ->$/;"	f	module:gr_context
make	deps/goldrush/src/gre.erl	/^make(Term, [Type]) ->$/;"	f	module:gre
make_	deps/goldrush/src/gr_context.erl	/^make_(Node, App, Pid, Time, []) ->$/;"	f	module:gr_context
make_	deps/goldrush/src/gr_context.erl	/^make_(Node, App, Pid, _Time, [{'$t', Time}|T]) ->$/;"	f	module:gr_context
make_	deps/goldrush/src/gr_context.erl	/^make_(Node, App, _Pid, Time, [{'$p', Pid}|T]) ->$/;"	f	module:gr_context
make_	deps/goldrush/src/gr_context.erl	/^make_(Node, _App, Pid, Time, [{'$a', App}|T]) ->$/;"	f	module:gr_context
make_	deps/goldrush/src/gr_context.erl	/^make_(_Node, App, Pid, Time, [{'$n', Node}|T]) ->$/;"	f	module:gr_context
make_defaults_test	deps/goldrush/src/gr_context.erl	/^make_defaults_test() ->$/;"	f	module:gr_context
make_internal_sink_name	deps/lager/src/lager_util.erl	/^make_internal_sink_name(Sink) ->$/;"	f	module:lager_util
make_internal_sink_name	deps/lager/src/lager_util.erl	/^make_internal_sink_name(lager) ->$/;"	f	module:lager_util
make_options	deps/lager/src/lager_format.erl	/^make_options([], Options) ->$/;"	f	module:lager_format
make_options	deps/lager/src/lager_format.erl	/^make_options([{chomp, Bool}|T], Options) when is_boolean(Bool) ->$/;"	f	module:lager_format
make_override_test	deps/goldrush/src/gr_context.erl	/^make_override_test() ->$/;"	f	module:gr_context
make_printable	deps/lager/src/lager_default_formatter.erl	/^make_printable(A) when is_atom(A) -> atom_to_list(A);$/;"	f	module:lager_default_formatter
make_printable	deps/lager/src/lager_default_formatter.erl	/^make_printable(A,W) when is_integer(W)-> string:left(make_printable(A),W);$/;"	f	module:lager_default_formatter
make_printable	deps/lager/src/lager_default_formatter.erl	/^make_printable(A,_W) -> make_printable(A).$/;"	f	module:lager_default_formatter
make_printable	deps/lager/src/lager_default_formatter.erl	/^make_printable(A,{Align,W}) when is_integer(W) ->$/;"	f	module:lager_default_formatter
make_printable	deps/lager/src/lager_default_formatter.erl	/^make_printable(L) when is_list(L) orelse is_binary(L) -> L; $/;"	f	module:lager_default_formatter
make_printable	deps/lager/src/lager_default_formatter.erl	/^make_printable(Other) -> io_lib:format("~p",[Other]).$/;"	f	module:lager_default_formatter
make_printable	deps/lager/src/lager_default_formatter.erl	/^make_printable(P) when is_pid(P) -> pid_to_list(P);$/;"	f	module:lager_default_formatter
make_throw	deps/lager/test/pr_stacktrace_test.erl	/^make_throw() ->$/;"	f	module:pr_stacktrace_test
make_varname	deps/lager/src/lager_transform.erl	/^make_varname(Prefix, Line) ->$/;"	f	module:lager_transform
makedep.erl	deps/ranch/erlang.mk	/^define makedep.erl$/;"	m
makedep_verbose	deps/ranch/erlang.mk	/^makedep_verbose = $(makedep_verbose_$(V))$/;"	m
makedep_verbose_0	deps/ranch/erlang.mk	/^makedep_verbose_0 = @echo " DEPEND" $(PROJECT).d;$/;"	m
makedep_verbose_2	deps/ranch/erlang.mk	/^makedep_verbose_2 = set -x;$/;"	m
manage_counts_name	deps/goldrush/src/glc.erl	/^manage_counts_name(Module) -> reg_name(Module, "_counters_mgr").$/;"	f	module:glc
manage_params_name	deps/goldrush/src/glc.erl	/^manage_params_name(Module) -> reg_name(Module, "_params_mgr").$/;"	f	module:glc
map_body	deps/lager/src/lager_trunc_io.erl	/^map_body(Map, Max, #print_options{depth=Depth}) when Max < 4; Depth =:= 0 ->$/;"	f	module:lager_trunc_io
map_body	deps/lager/src/lager_trunc_io.erl	/^map_body(Map, Max, Options) ->$/;"	f	module:lager_trunc_io
map_bodyc	deps/lager/src/lager_trunc_io.erl	/^map_bodyc([], _Max, _Options) ->$/;"	f	module:lager_trunc_io
map_bodyc	deps/lager/src/lager_trunc_io.erl	/^map_bodyc([{Key, Value} | Rest], Max, Options) ->$/;"	f	module:lager_trunc_io
map_bodyc	deps/lager/src/lager_trunc_io.erl	/^map_bodyc(_Rest, Max,#print_options{depth=Depth}) when Max < 5; Depth =:= 0 ->$/;"	f	module:lager_trunc_io
map_printing_test	deps/lager/src/lager_trunc_io.erl	/^map_printing_test() ->$/;"	f	module:lager_trunc_io
mask_to_levels	deps/lager/src/lager_util.erl	/^mask_to_levels(Mask) ->$/;"	f	module:lager_util
mask_to_levels	deps/lager/src/lager_util.erl	/^mask_to_levels(Mask, [Level|Levels], Acc) ->$/;"	f	module:lager_util
mask_to_levels	deps/lager/src/lager_util.erl	/^mask_to_levels(_Mask, [], Acc) ->$/;"	f	module:lager_util
mask_to_levels_test	deps/lager/src/lager_util.erl	/^mask_to_levels_test() ->$/;"	f	module:lager_util
matches	deps/goldrush/src/glc_lib.erl	/^matches({Key, '!'}, Event) ->$/;"	f	module:glc_lib
matches	deps/goldrush/src/glc_lib.erl	/^matches({Key, '!=', Term}, Event) ->$/;"	f	module:glc_lib
matches	deps/goldrush/src/glc_lib.erl	/^matches({Key, '*'}, Event) ->$/;"	f	module:glc_lib
matches	deps/goldrush/src/glc_lib.erl	/^matches({Key, '<', Term}, Event) ->$/;"	f	module:glc_lib
matches	deps/goldrush/src/glc_lib.erl	/^matches({Key, '=', Term}, Event) ->$/;"	f	module:glc_lib
matches	deps/goldrush/src/glc_lib.erl	/^matches({Key, '=<', Term}, Event) ->$/;"	f	module:glc_lib
matches	deps/goldrush/src/glc_lib.erl	/^matches({Key, '>', Term}, Event) ->$/;"	f	module:glc_lib
matches	deps/goldrush/src/glc_lib.erl	/^matches({Key, '>=', Term}, Event) ->$/;"	f	module:glc_lib
matches	deps/goldrush/src/glc_lib.erl	/^matches({all, Conds}, Event) ->$/;"	f	module:glc_lib
matches	deps/goldrush/src/glc_lib.erl	/^matches({any, Conds}, Event) ->$/;"	f	module:glc_lib
matches	deps/goldrush/src/glc_lib.erl	/^matches({null, Const}, _Event) ->$/;"	f	module:glc_lib
matches_returns_boolean_test	deps/goldrush/src/glc_lib.erl	/^matches_returns_boolean_test() ->$/;"	f	module:glc_lib
matches_test_	deps/goldrush/src/glc_lib.erl	/^matches_test_() ->$/;"	f	module:glc_lib
maybe_install_sink_killer	deps/lager/src/lager_app.erl	/^maybe_install_sink_killer(Sink, HWM, ReinstallTimer) when is_integer(HWM) andalso is_integer(ReinstallTimer)$/;"	f	module:lager_app
maybe_install_sink_killer	deps/lager/src/lager_app.erl	/^maybe_install_sink_killer(Sink, HWM, undefined) -> maybe_install_sink_killer(Sink, HWM, 5000);$/;"	f	module:lager_app
maybe_install_sink_killer	deps/lager/src/lager_app.erl	/^maybe_install_sink_killer(_Sink, HWM, ReinstallTimer) ->$/;"	f	module:lager_app
maybe_install_sink_killer	deps/lager/src/lager_app.erl	/^maybe_install_sink_killer(_Sink, undefined, _ReinstallTimer) -> ok;$/;"	f	module:lager_app
maybe_make_handler_id	deps/lager/src/lager_app.erl	/^maybe_make_handler_id(Mod, Config) ->$/;"	f	module:lager_app
maybe_started	deps/ranch/src/ranch.erl	/^maybe_started(Res) ->$/;"	f	module:ranch
maybe_started	deps/ranch/src/ranch.erl	/^maybe_started({error, {{shutdown,$/;"	f	module:ranch
maybe_utc	deps/lager/src/lager_stdlib.erl	/^maybe_utc(Time) ->$/;"	f	module:lager_stdlib
maybe_utc	deps/lager/src/lager_util.erl	/^maybe_utc({Date, {H, M, S, Ms}}) ->$/;"	f	module:lager_util
md	deps/lager/src/lager.erl	/^md() ->$/;"	f	module:lager
md	deps/lager/src/lager.erl	/^md(NewMD) when is_list(NewMD) ->$/;"	f	module:lager
md	deps/lager/src/lager.erl	/^md(_) ->$/;"	f	module:lager
merge	deps/goldrush/src/gre.erl	/^merge({list, AList}, {list, BList}) ->$/;"	f	module:gre
merge_options	deps/ranch/src/ranch.erl	/^merge_options(Option, OptionList) ->$/;"	f	module:ranch
merge_options	deps/ranch/src/ranch.erl	/^merge_options({Key, _} = Option, OptionList) ->$/;"	f	module:ranch
message	deps/lager/src/lager_msg.erl	/^message(Msg) ->$/;"	f	module:lager_msg
messages	deps/ranch/src/ranch_ssl.erl	/^messages() -> {ssl, ssl_closed, ssl_error}.$/;"	f	module:ranch_ssl
messages	deps/ranch/src/ranch_tcp.erl	/^messages() -> {tcp, tcp_closed, tcp_error}.$/;"	f	module:ranch_tcp
metadata	deps/lager/src/lager_msg.erl	/^metadata(Msg) ->$/;"	f	module:lager_msg
mf_to_string	deps/lager/src/lager_stdlib.erl	/^mf_to_string(F, _A) ->$/;"	f	module:lager_stdlib
mf_to_string	deps/lager/src/lager_stdlib.erl	/^mf_to_string(Fun, _A) when is_function(Fun) ->$/;"	f	module:lager_stdlib
mf_to_string	deps/lager/src/lager_stdlib.erl	/^mf_to_string({M, F}, A) ->$/;"	f	module:lager_stdlib
mfa_to_string	deps/lager/src/lager_stdlib.erl	/^mfa_to_string(M, F, A) ->$/;"	f	module:lager_stdlib
mib_verbose	deps/ranch/erlang.mk	/^mib_verbose = $(mib_verbose_$(V))$/;"	m
mib_verbose_0	deps/ranch/erlang.mk	/^mib_verbose_0 = @echo " MIB   " $(filter %.bin %.mib,$(?F));$/;"	m
mib_verbose_2	deps/ranch/erlang.mk	/^mib_verbose_2 = set -x;$/;"	m
minimum_loglevel	deps/lager/src/lager.erl	/^minimum_loglevel(Levels) ->$/;"	f	module:lager
misc_bad_transport	deps/ranch/test/acceptor_SUITE.erl	/^misc_bad_transport(_) ->$/;"	f	module:acceptor_SUITE
misc_bad_transport_options	deps/ranch/test/acceptor_SUITE.erl	/^misc_bad_transport_options(_) ->$/;"	f	module:acceptor_SUITE
misc_info	deps/ranch/test/acceptor_SUITE.erl	/^misc_info(_) ->$/;"	f	module:acceptor_SUITE
module	deps/goldrush/src/glc.erl	/^-record(module, {$/;"	r
module	deps/goldrush/src/glc_code.erl	/^-record(module, {$/;"	r
module_data	deps/goldrush/src/glc.erl	/^module_data(Module, Query, Store) ->$/;"	f	module:glc
module_tables	deps/goldrush/src/glc.erl	/^module_tables(Module) ->$/;"	f	module:glc
module_vsn	src/reloader.erl	/^module_vsn(L) when is_list(L) ->$/;"	f	module:reloader
module_vsn	src/reloader.erl	/^module_vsn({M, Beam, _Fn}) ->$/;"	f	module:reloader
month	deps/lager/src/lager_stdlib.erl	/^month(1) -> "Jan";$/;"	f	module:lager_stdlib
month	deps/lager/src/lager_stdlib.erl	/^month(10) -> "Oct";$/;"	f	module:lager_stdlib
month	deps/lager/src/lager_stdlib.erl	/^month(11) -> "Nov";$/;"	f	module:lager_stdlib
month	deps/lager/src/lager_stdlib.erl	/^month(12) -> "Dec".$/;"	f	module:lager_stdlib
month	deps/lager/src/lager_stdlib.erl	/^month(2) -> "Feb";$/;"	f	module:lager_stdlib
month	deps/lager/src/lager_stdlib.erl	/^month(3) -> "Mar";$/;"	f	module:lager_stdlib
month	deps/lager/src/lager_stdlib.erl	/^month(4) -> "Apr";$/;"	f	module:lager_stdlib
month	deps/lager/src/lager_stdlib.erl	/^month(5) -> "May";$/;"	f	module:lager_stdlib
month	deps/lager/src/lager_stdlib.erl	/^month(6) -> "Jun";$/;"	f	module:lager_stdlib
month	deps/lager/src/lager_stdlib.erl	/^month(7) -> "Jul";$/;"	f	module:lager_stdlib
month	deps/lager/src/lager_stdlib.erl	/^month(8) -> "Aug";$/;"	f	module:lager_stdlib
month	deps/lager/src/lager_stdlib.erl	/^month(9) -> "Sep";$/;"	f	module:lager_stdlib
n_args	deps/lager/src/lager_stdlib.erl	/^n_args(A) when is_integer(A) ->$/;"	f	module:lager_stdlib
n_args	deps/lager/src/lager_stdlib.erl	/^n_args(As) when is_list(As) ->$/;"	f	module:lager_stdlib
n_spaces	deps/lager/src/lager_stdlib.erl	/^n_spaces(N) ->$/;"	f	module:lager_stdlib
name	deps/ranch/src/ranch_ssl.erl	/^name() -> ssl.$/;"	f	module:ranch_ssl
name	deps/ranch/src/ranch_tcp.erl	/^name() -> tcp.$/;"	f	module:ranch_tcp
neq	deps/goldrush/src/glc.erl	/^neq(Key, Term) ->$/;"	f	module:glc
neq	deps/goldrush/src/glc_ops.erl	/^neq(Key, Term) ->$/;"	f	module:glc_ops
neq	deps/goldrush/src/glc_ops.erl	/^neq(Key, Term) when is_atom(Key) ->$/;"	f	module:glc_ops
nested_record_test	deps/lager/test/compress_pr_record_test.erl	/^nested_record_test() ->$/;"	f	module:compress_pr_record_test
nested_record_test	deps/lager/test/pr_nested_record_test.erl	/^nested_record_test() ->$/;"	f	module:pr_nested_record_test
new	deps/lager/src/lager_config.erl	/^new() ->$/;"	f	module:lager_config
new	deps/lager/src/lager_msg.erl	/^new(Msg, Severity, Metadata, Destinations) ->$/;"	f	module:lager_msg
new	deps/lager/src/lager_msg.erl	/^new(Msg, Timestamp, Severity, Metadata, Destinations) ->$/;"	f	module:lager_msg
new_sink	deps/lager/src/lager_config.erl	/^new_sink(Sink) ->$/;"	f	module:lager_config
newline	deps/lager/src/lager_format.erl	/^newline(F, right, _P, _Pad) -> chars($\\n, F).$/;"	f	module:lager_format
newline	deps/lager/src/lager_format.erl	/^newline(none, _Adj, _P, _Pad) -> "\\n";$/;"	f	module:lager_format
newline	deps/ranch/erlang.mk	/^define newline$/;"	m
nf	deps/goldrush/src/glc.erl	/^nf(Key) ->$/;"	f	module:glc
nf	deps/goldrush/src/glc_ops.erl	/^nf(Key) ->$/;"	f	module:glc_ops
nf	deps/goldrush/src/glc_ops.erl	/^nf(Key) when is_atom(Key) ->$/;"	f	module:glc_ops
no_auth	src/ecache_protocol.erl	/^no_auth() ->$/;"	f	module:ecache_protocol
not_running_test	deps/lager/test/lager_test_backend.erl	/^not_running_test() ->$/;"	f	module:lager_test_backend
notify_and_wait_protocol	deps/ranch/test/notify_and_wait_protocol.erl	/^-module(notify_and_wait_protocol).$/;"	m
null	deps/goldrush/src/glc.erl	/^null(Result) ->$/;"	f	module:glc
null	deps/goldrush/src/glc_ops.erl	/^null(Result) ->$/;"	f	module:glc_ops
null	deps/goldrush/src/glc_ops.erl	/^null(Result) when is_boolean(Result) ->$/;"	f	module:glc_ops
num_to_level	deps/lager/src/lager_util.erl	/^num_to_level(?ALERT)     -> alert;$/;"	f	module:lager_util
num_to_level	deps/lager/src/lager_util.erl	/^num_to_level(?CRITICAL)  -> critical;$/;"	f	module:lager_util
num_to_level	deps/lager/src/lager_util.erl	/^num_to_level(?DEBUG)     -> debug;$/;"	f	module:lager_util
num_to_level	deps/lager/src/lager_util.erl	/^num_to_level(?EMERGENCY) -> emergency;$/;"	f	module:lager_util
num_to_level	deps/lager/src/lager_util.erl	/^num_to_level(?ERROR)     -> error;$/;"	f	module:lager_util
num_to_level	deps/lager/src/lager_util.erl	/^num_to_level(?INFO)      -> info;$/;"	f	module:lager_util
num_to_level	deps/lager/src/lager_util.erl	/^num_to_level(?LOG_NONE)  -> none.$/;"	f	module:lager_util
num_to_level	deps/lager/src/lager_util.erl	/^num_to_level(?NOTICE)    -> notice;$/;"	f	module:lager_util
num_to_level	deps/lager/src/lager_util.erl	/^num_to_level(?WARNING)   -> warning;$/;"	f	module:lager_util
onoutput	deps/goldrush/src/glc_lib.erl	/^onoutput(Action, Query) ->$/;"	f	module:glc_lib
onoutput	deps/goldrush/src/glc_lib.erl	/^onoutput(Query) ->$/;"	f	module:glc_lib
onoutput	deps/goldrush/src/glc_lib.erl	/^onoutput({_, '!'}) ->$/;"	f	module:glc_lib
onoutput	deps/goldrush/src/glc_lib.erl	/^onoutput({_, '*'}) ->$/;"	f	module:glc_lib
onoutput	deps/goldrush/src/glc_lib.erl	/^onoutput({_, '<', _}) ->$/;"	f	module:glc_lib
onoutput	deps/goldrush/src/glc_lib.erl	/^onoutput({_, '=', _}) ->$/;"	f	module:glc_lib
onoutput	deps/goldrush/src/glc_lib.erl	/^onoutput({_, '=<', _}) ->$/;"	f	module:glc_lib
onoutput	deps/goldrush/src/glc_lib.erl	/^onoutput({_, '>', _}) ->$/;"	f	module:glc_lib
onoutput	deps/goldrush/src/glc_lib.erl	/^onoutput({_, '>=', _}) ->$/;"	f	module:glc_lib
open_logfile	deps/lager/src/lager_util.erl	/^open_logfile(Name, Buffer) ->$/;"	f	module:lager_util
options	deps/lager/src/lager_format.erl	/^-record(options, {$/;"	r
origin	deps/lager/src/lager_stdlib.erl	/^origin(1, M, F, A) ->$/;"	f	module:lager_stdlib
origin	deps/lager/src/lager_stdlib.erl	/^origin(_N, _M, _F, _A) ->$/;"	f	module:lager_stdlib
other_node_suffix	deps/lager/src/lager_crash_log.erl	/^other_node_suffix(Pid) when node(Pid) =\/= node() ->$/;"	f	module:lager_crash_log
other_node_suffix	deps/lager/src/lager_crash_log.erl	/^other_node_suffix(_) ->$/;"	f	module:lager_crash_log
otp_version	deps/lager/test/lager_test_backend.erl	/^otp_version() ->$/;"	f	module:lager_test_backend
otp_version	deps/lager/test/lager_test_backend.erl	/^otp_version(Rel) ->$/;"	f	module:lager_test_backend
otp_version	deps/lager/test/lager_test_backend.erl	/^otp_version([$R | Rel]) ->$/;"	f	module:lager_test_backend
output	deps/goldrush/src/glc.erl	/^output(Module) ->$/;"	f	module:glc
output	deps/lager/src/lager_default_formatter.erl	/^output(Other,_) -> make_printable(Other).$/;"	f	module:lager_default_formatter
output	deps/lager/src/lager_default_formatter.erl	/^output(Other,_, Width) -> make_printable(Other, Width).$/;"	f	module:lager_default_formatter
output	deps/lager/src/lager_default_formatter.erl	/^output(Prop, Msg, Width) when is_atom(Prop) ->$/;"	f	module:lager_default_formatter
output	deps/lager/src/lager_default_formatter.erl	/^output(Prop,Msg) when is_atom(Prop) ->$/;"	f	module:lager_default_formatter
output	deps/lager/src/lager_default_formatter.erl	/^output(blank,_Msg) ->$/;"	f	module:lager_default_formatter
output	deps/lager/src/lager_default_formatter.erl	/^output(blank,_Msg, _Width) ->$/;"	f	module:lager_default_formatter
output	deps/lager/src/lager_default_formatter.erl	/^output(date,Msg) ->$/;"	f	module:lager_default_formatter
output	deps/lager/src/lager_default_formatter.erl	/^output(date,Msg, _Width) ->$/;"	f	module:lager_default_formatter
output	deps/lager/src/lager_default_formatter.erl	/^output(message, Msg, _Width) -> lager_msg:message(Msg);$/;"	f	module:lager_default_formatter
output	deps/lager/src/lager_default_formatter.erl	/^output(message,Msg) -> lager_msg:message(Msg);$/;"	f	module:lager_default_formatter
output	deps/lager/src/lager_default_formatter.erl	/^output(metadata, Msg) ->$/;"	f	module:lager_default_formatter
output	deps/lager/src/lager_default_formatter.erl	/^output(metadata, Msg, _Width) ->$/;"	f	module:lager_default_formatter
output	deps/lager/src/lager_default_formatter.erl	/^output(sev,Msg) ->$/;"	f	module:lager_default_formatter
output	deps/lager/src/lager_default_formatter.erl	/^output(sev,Msg, _Width) ->$/;"	f	module:lager_default_formatter
output	deps/lager/src/lager_default_formatter.erl	/^output(severity, Msg, Width) ->$/;"	f	module:lager_default_formatter
output	deps/lager/src/lager_default_formatter.erl	/^output(severity,Msg) ->$/;"	f	module:lager_default_formatter
output	deps/lager/src/lager_default_formatter.erl	/^output(time, Msg, _Width) ->$/;"	f	module:lager_default_formatter
output	deps/lager/src/lager_default_formatter.erl	/^output(time,Msg) ->$/;"	f	module:lager_default_formatter
output	deps/lager/src/lager_default_formatter.erl	/^output({Prop, Present, Absent, Width}, Msg) when is_atom(Prop) ->$/;"	f	module:lager_default_formatter
output	deps/lager/src/lager_default_formatter.erl	/^output({Prop, Present, Absent}, Msg) when is_atom(Prop) ->$/;"	f	module:lager_default_formatter
output	deps/lager/src/lager_default_formatter.erl	/^output({Prop,Default},Msg) when is_atom(Prop) ->$/;"	f	module:lager_default_formatter
output	deps/lager/src/lager_default_formatter.erl	/^output({Prop,Default},Msg, Width) when is_atom(Prop) ->$/;"	f	module:lager_default_formatter
output	deps/lager/src/lager_default_formatter.erl	/^output({blank, Fill},_Msg, _Width) ->$/;"	f	module:lager_default_formatter
output	deps/lager/src/lager_default_formatter.erl	/^output({blank,Fill},_Msg) ->$/;"	f	module:lager_default_formatter
output	deps/lager/src/lager_default_formatter.erl	/^output({metadata, IntSep, FieldSep}, Msg) ->$/;"	f	module:lager_default_formatter
output	deps/lager/src/lager_default_formatter.erl	/^output({metadata, IntSep, FieldSep}, Msg, _Width) ->$/;"	f	module:lager_default_formatter
output_color	deps/lager/src/lager_default_formatter.erl	/^output_color(Msg,Colors) ->$/;"	f	module:lager_default_formatter
output_color	deps/lager/src/lager_default_formatter.erl	/^output_color(_Msg,[]) -> [];$/;"	f	module:lager_default_formatter
overload_alternate_sink_test_	deps/lager/test/lager_manager_killer_test.erl	/^overload_alternate_sink_test_() ->$/;"	f	module:lager_manager_killer_test
overload_test_	deps/lager/test/lager_manager_killer_test.erl	/^overload_test_() ->$/;"	f	module:lager_manager_killer_test
pad_char	deps/lager/src/lager_format.erl	/^pad_char(Fmt, Args) -> {$\\s,Fmt,Args}.$/;"	f	module:lager_format
pad_char	deps/lager/src/lager_format.erl	/^pad_char([$.,$*|Fmt], [Pad|Args]) -> {Pad,Fmt,Args};$/;"	f	module:lager_format
pad_char	deps/lager/src/lager_format.erl	/^pad_char([$.,Pad|Fmt], Args) -> {Pad,Fmt,Args};$/;"	f	module:lager_format
pairs	deps/goldrush/src/gre.erl	/^pairs({list, List}) ->$/;"	f	module:gre
param_variable	deps/goldrush/src/glc_code.erl	/^param_variable(Key) ->$/;"	f	module:glc_code
params_name	deps/goldrush/src/glc.erl	/^params_name(Module) -> reg_name(Module, "_params").$/;"	f	module:glc
parse_fail_test	deps/lager/src/lager_util.erl	/^parse_fail_test() ->$/;"	f	module:lager_util
parse_rotation_date_spec	deps/lager/src/lager_util.erl	/^parse_rotation_date_spec([$$, $M, L|T]) when L == $L; L == $l ->$/;"	f	module:lager_util
parse_rotation_date_spec	deps/lager/src/lager_util.erl	/^parse_rotation_date_spec([$$, $M, M1, M2]) ->$/;"	f	module:lager_util
parse_rotation_date_spec	deps/lager/src/lager_util.erl	/^parse_rotation_date_spec([$$, $M, M1, M2|[$D|_]=T]) ->$/;"	f	module:lager_util
parse_rotation_date_spec	deps/lager/src/lager_util.erl	/^parse_rotation_date_spec([$$, $M, M]) ->$/;"	f	module:lager_util
parse_rotation_date_spec	deps/lager/src/lager_util.erl	/^parse_rotation_date_spec([$$, $M, M|[$D|_]=T]) ->$/;"	f	module:lager_util
parse_rotation_date_spec	deps/lager/src/lager_util.erl	/^parse_rotation_date_spec([$$, $W, W|T]) when W >= $0, W =< $6 ->$/;"	f	module:lager_util
parse_rotation_date_spec	deps/lager/src/lager_util.erl	/^parse_rotation_date_spec([$$|X]) when X \/= [] ->$/;"	f	module:lager_util
parse_rotation_date_spec	deps/lager/src/lager_util.erl	/^parse_rotation_date_spec(_) ->$/;"	f	module:lager_util
parse_rotation_day_spec	deps/lager/src/lager_util.erl	/^parse_rotation_day_spec([$D, D1, D2], Res) ->$/;"	f	module:lager_util
parse_rotation_day_spec	deps/lager/src/lager_util.erl	/^parse_rotation_day_spec([$D, D], Res)  when D >= $0, D =< $9 ->$/;"	f	module:lager_util
parse_rotation_day_spec	deps/lager/src/lager_util.erl	/^parse_rotation_day_spec([], Res) ->$/;"	f	module:lager_util
parse_rotation_day_spec	deps/lager/src/lager_util.erl	/^parse_rotation_day_spec(_, _) ->$/;"	f	module:lager_util
parse_test	deps/lager/src/lager_util.erl	/^parse_test() ->$/;"	f	module:lager_util
parse_transform	deps/lager/src/lager_transform.erl	/^parse_transform(AST, Options) ->$/;"	f	module:lager_transform
peername	deps/ranch/src/ranch_ssl.erl	/^peername(Socket) ->$/;"	f	module:ranch_ssl
peername	deps/ranch/src/ranch_tcp.erl	/^peername(Socket) ->$/;"	f	module:ranch_tcp
perf	deps/lager/src/lager_trunc_io.erl	/^perf() ->$/;"	f	module:lager_trunc_io
perf	deps/lager/src/lager_trunc_io.erl	/^perf(M, F, Reps) when Reps > 0 ->$/;"	f	module:lager_trunc_io
perf	deps/lager/src/lager_trunc_io.erl	/^perf(_,_,_) ->$/;"	f	module:lager_trunc_io
perf1	deps/lager/src/lager_trunc_io.erl	/^perf1() ->$/;"	f	module:lager_trunc_io
perform_call	deps/goldrush/src/gr_counter.erl	/^perform_call(TableId, Call) ->$/;"	f	module:gr_counter
perform_call	deps/goldrush/src/gr_param.erl	/^perform_call(TableId, Call) ->$/;"	f	module:gr_param
perhaps_a_sasl_report	deps/lager/src/lager_crash_log.erl	/^perhaps_a_sasl_report(_, _, _) ->$/;"	f	module:lager_crash_log
perhaps_a_sasl_report	deps/lager/src/lager_crash_log.erl	/^perhaps_a_sasl_report(error_report, {Pid, Type, Report}, FmtMaxBytes) ->$/;"	f	module:lager_crash_log
pkg_aberth_commit	deps/ranch/erlang.mk	/^pkg_aberth_commit = master$/;"	m
pkg_aberth_description	deps/ranch/erlang.mk	/^pkg_aberth_description = Generic BERT-RPC server in Erlang$/;"	m
pkg_aberth_fetch	deps/ranch/erlang.mk	/^pkg_aberth_fetch = git$/;"	m
pkg_aberth_homepage	deps/ranch/erlang.mk	/^pkg_aberth_homepage = https:\/\/github.com\/a13x\/aberth$/;"	m
pkg_aberth_name	deps/ranch/erlang.mk	/^pkg_aberth_name = aberth$/;"	m
pkg_aberth_repo	deps/ranch/erlang.mk	/^pkg_aberth_repo = https:\/\/github.com\/a13x\/aberth$/;"	m
pkg_active_commit	deps/ranch/erlang.mk	/^pkg_active_commit = master$/;"	m
pkg_active_description	deps/ranch/erlang.mk	/^pkg_active_description = Active development for Erlang: rebuild and reload source\/binary files while the VM is running$/;"	m
pkg_active_fetch	deps/ranch/erlang.mk	/^pkg_active_fetch = git$/;"	m
pkg_active_homepage	deps/ranch/erlang.mk	/^pkg_active_homepage = https:\/\/github.com\/proger\/active$/;"	m
pkg_active_name	deps/ranch/erlang.mk	/^pkg_active_name = active$/;"	m
pkg_active_repo	deps/ranch/erlang.mk	/^pkg_active_repo = https:\/\/github.com\/proger\/active$/;"	m
pkg_actordb_core_commit	deps/ranch/erlang.mk	/^pkg_actordb_core_commit = master$/;"	m
pkg_actordb_core_description	deps/ranch/erlang.mk	/^pkg_actordb_core_description = ActorDB main source$/;"	m
pkg_actordb_core_fetch	deps/ranch/erlang.mk	/^pkg_actordb_core_fetch = git$/;"	m
pkg_actordb_core_homepage	deps/ranch/erlang.mk	/^pkg_actordb_core_homepage = http:\/\/www.actordb.com\/$/;"	m
pkg_actordb_core_name	deps/ranch/erlang.mk	/^pkg_actordb_core_name = actordb_core$/;"	m
pkg_actordb_core_repo	deps/ranch/erlang.mk	/^pkg_actordb_core_repo = https:\/\/github.com\/biokoda\/actordb_core$/;"	m
pkg_actordb_thrift_commit	deps/ranch/erlang.mk	/^pkg_actordb_thrift_commit = master$/;"	m
pkg_actordb_thrift_description	deps/ranch/erlang.mk	/^pkg_actordb_thrift_description = Thrift API for ActorDB$/;"	m
pkg_actordb_thrift_fetch	deps/ranch/erlang.mk	/^pkg_actordb_thrift_fetch = git$/;"	m
pkg_actordb_thrift_homepage	deps/ranch/erlang.mk	/^pkg_actordb_thrift_homepage = http:\/\/www.actordb.com\/$/;"	m
pkg_actordb_thrift_name	deps/ranch/erlang.mk	/^pkg_actordb_thrift_name = actordb_thrift$/;"	m
pkg_actordb_thrift_repo	deps/ranch/erlang.mk	/^pkg_actordb_thrift_repo = https:\/\/github.com\/biokoda\/actordb_thrift$/;"	m
pkg_aleppo_commit	deps/ranch/erlang.mk	/^pkg_aleppo_commit = master$/;"	m
pkg_aleppo_description	deps/ranch/erlang.mk	/^pkg_aleppo_description = Alternative Erlang Pre-Processor$/;"	m
pkg_aleppo_fetch	deps/ranch/erlang.mk	/^pkg_aleppo_fetch = git$/;"	m
pkg_aleppo_homepage	deps/ranch/erlang.mk	/^pkg_aleppo_homepage = https:\/\/github.com\/ErlyORM\/aleppo$/;"	m
pkg_aleppo_name	deps/ranch/erlang.mk	/^pkg_aleppo_name = aleppo$/;"	m
pkg_aleppo_repo	deps/ranch/erlang.mk	/^pkg_aleppo_repo = https:\/\/github.com\/ErlyORM\/aleppo$/;"	m
pkg_alog_commit	deps/ranch/erlang.mk	/^pkg_alog_commit = master$/;"	m
pkg_alog_description	deps/ranch/erlang.mk	/^pkg_alog_description = Simply the best logging framework for Erlang$/;"	m
pkg_alog_fetch	deps/ranch/erlang.mk	/^pkg_alog_fetch = git$/;"	m
pkg_alog_homepage	deps/ranch/erlang.mk	/^pkg_alog_homepage = https:\/\/github.com\/siberian-fast-food\/alogger$/;"	m
pkg_alog_name	deps/ranch/erlang.mk	/^pkg_alog_name = alog$/;"	m
pkg_alog_repo	deps/ranch/erlang.mk	/^pkg_alog_repo = https:\/\/github.com\/siberian-fast-food\/alogger$/;"	m
pkg_amqp_client_commit	deps/ranch/erlang.mk	/^pkg_amqp_client_commit = master$/;"	m
pkg_amqp_client_description	deps/ranch/erlang.mk	/^pkg_amqp_client_description = RabbitMQ Erlang AMQP client$/;"	m
pkg_amqp_client_fetch	deps/ranch/erlang.mk	/^pkg_amqp_client_fetch = git$/;"	m
pkg_amqp_client_homepage	deps/ranch/erlang.mk	/^pkg_amqp_client_homepage = https:\/\/www.rabbitmq.com\/erlang-client-user-guide.html$/;"	m
pkg_amqp_client_name	deps/ranch/erlang.mk	/^pkg_amqp_client_name = amqp_client$/;"	m
pkg_amqp_client_repo	deps/ranch/erlang.mk	/^pkg_amqp_client_repo = https:\/\/github.com\/rabbitmq\/rabbitmq-erlang-client.git$/;"	m
pkg_annotations_commit	deps/ranch/erlang.mk	/^pkg_annotations_commit = master$/;"	m
pkg_annotations_description	deps/ranch/erlang.mk	/^pkg_annotations_description = Simple code instrumentation utilities$/;"	m
pkg_annotations_fetch	deps/ranch/erlang.mk	/^pkg_annotations_fetch = git$/;"	m
pkg_annotations_homepage	deps/ranch/erlang.mk	/^pkg_annotations_homepage = https:\/\/github.com\/hyperthunk\/annotations$/;"	m
pkg_annotations_name	deps/ranch/erlang.mk	/^pkg_annotations_name = annotations$/;"	m
pkg_annotations_repo	deps/ranch/erlang.mk	/^pkg_annotations_repo = https:\/\/github.com\/hyperthunk\/annotations$/;"	m
pkg_antidote_commit	deps/ranch/erlang.mk	/^pkg_antidote_commit = master$/;"	m
pkg_antidote_description	deps/ranch/erlang.mk	/^pkg_antidote_description = Large-scale computation without synchronisation$/;"	m
pkg_antidote_fetch	deps/ranch/erlang.mk	/^pkg_antidote_fetch = git$/;"	m
pkg_antidote_homepage	deps/ranch/erlang.mk	/^pkg_antidote_homepage = https:\/\/syncfree.lip6.fr\/$/;"	m
pkg_antidote_name	deps/ranch/erlang.mk	/^pkg_antidote_name = antidote$/;"	m
pkg_antidote_repo	deps/ranch/erlang.mk	/^pkg_antidote_repo = https:\/\/github.com\/SyncFree\/antidote$/;"	m
pkg_apns_commit	deps/ranch/erlang.mk	/^pkg_apns_commit = master$/;"	m
pkg_apns_description	deps/ranch/erlang.mk	/^pkg_apns_description = Apple Push Notification Server for Erlang$/;"	m
pkg_apns_fetch	deps/ranch/erlang.mk	/^pkg_apns_fetch = git$/;"	m
pkg_apns_homepage	deps/ranch/erlang.mk	/^pkg_apns_homepage = http:\/\/inaka.github.com\/apns4erl$/;"	m
pkg_apns_name	deps/ranch/erlang.mk	/^pkg_apns_name = apns$/;"	m
pkg_apns_repo	deps/ranch/erlang.mk	/^pkg_apns_repo = https:\/\/github.com\/inaka\/apns4erl$/;"	m
pkg_asciideck_commit	deps/ranch/erlang.mk	/^pkg_asciideck_commit = master$/;"	m
pkg_asciideck_description	deps/ranch/erlang.mk	/^pkg_asciideck_description = Asciidoc for Erlang.$/;"	m
pkg_asciideck_fetch	deps/ranch/erlang.mk	/^pkg_asciideck_fetch = git$/;"	m
pkg_asciideck_homepage	deps/ranch/erlang.mk	/^pkg_asciideck_homepage = https:\/\/ninenines.eu$/;"	m
pkg_asciideck_name	deps/ranch/erlang.mk	/^pkg_asciideck_name = asciideck$/;"	m
pkg_asciideck_repo	deps/ranch/erlang.mk	/^pkg_asciideck_repo = https:\/\/github.com\/ninenines\/asciideck$/;"	m
pkg_azdht_commit	deps/ranch/erlang.mk	/^pkg_azdht_commit = master$/;"	m
pkg_azdht_description	deps/ranch/erlang.mk	/^pkg_azdht_description = Azureus Distributed Hash Table (DHT) in Erlang$/;"	m
pkg_azdht_fetch	deps/ranch/erlang.mk	/^pkg_azdht_fetch = git$/;"	m
pkg_azdht_homepage	deps/ranch/erlang.mk	/^pkg_azdht_homepage = https:\/\/github.com\/arcusfelis\/azdht$/;"	m
pkg_azdht_name	deps/ranch/erlang.mk	/^pkg_azdht_name = azdht$/;"	m
pkg_azdht_repo	deps/ranch/erlang.mk	/^pkg_azdht_repo = https:\/\/github.com\/arcusfelis\/azdht$/;"	m
pkg_backoff_commit	deps/ranch/erlang.mk	/^pkg_backoff_commit = master$/;"	m
pkg_backoff_description	deps/ranch/erlang.mk	/^pkg_backoff_description = Simple exponential backoffs in Erlang$/;"	m
pkg_backoff_fetch	deps/ranch/erlang.mk	/^pkg_backoff_fetch = git$/;"	m
pkg_backoff_homepage	deps/ranch/erlang.mk	/^pkg_backoff_homepage = https:\/\/github.com\/ferd\/backoff$/;"	m
pkg_backoff_name	deps/ranch/erlang.mk	/^pkg_backoff_name = backoff$/;"	m
pkg_backoff_repo	deps/ranch/erlang.mk	/^pkg_backoff_repo = https:\/\/github.com\/ferd\/backoff$/;"	m
pkg_barrel_tcp_commit	deps/ranch/erlang.mk	/^pkg_barrel_tcp_commit = master$/;"	m
pkg_barrel_tcp_description	deps/ranch/erlang.mk	/^pkg_barrel_tcp_description = barrel is a generic TCP acceptor pool with low latency in Erlang.$/;"	m
pkg_barrel_tcp_fetch	deps/ranch/erlang.mk	/^pkg_barrel_tcp_fetch = git$/;"	m
pkg_barrel_tcp_homepage	deps/ranch/erlang.mk	/^pkg_barrel_tcp_homepage = https:\/\/github.com\/benoitc-attic\/barrel_tcp$/;"	m
pkg_barrel_tcp_name	deps/ranch/erlang.mk	/^pkg_barrel_tcp_name = barrel_tcp$/;"	m
pkg_barrel_tcp_repo	deps/ranch/erlang.mk	/^pkg_barrel_tcp_repo = https:\/\/github.com\/benoitc-attic\/barrel_tcp$/;"	m
pkg_basho_bench_commit	deps/ranch/erlang.mk	/^pkg_basho_bench_commit = master$/;"	m
pkg_basho_bench_description	deps/ranch/erlang.mk	/^pkg_basho_bench_description = A load-generation and testing tool for basically whatever you can write a returning Erlang function for.$/;"	m
pkg_basho_bench_fetch	deps/ranch/erlang.mk	/^pkg_basho_bench_fetch = git$/;"	m
pkg_basho_bench_homepage	deps/ranch/erlang.mk	/^pkg_basho_bench_homepage = https:\/\/github.com\/basho\/basho_bench$/;"	m
pkg_basho_bench_name	deps/ranch/erlang.mk	/^pkg_basho_bench_name = basho_bench$/;"	m
pkg_basho_bench_repo	deps/ranch/erlang.mk	/^pkg_basho_bench_repo = https:\/\/github.com\/basho\/basho_bench$/;"	m
pkg_bcrypt_commit	deps/ranch/erlang.mk	/^pkg_bcrypt_commit = master$/;"	m
pkg_bcrypt_description	deps/ranch/erlang.mk	/^pkg_bcrypt_description = Bcrypt Erlang \/ C library$/;"	m
pkg_bcrypt_fetch	deps/ranch/erlang.mk	/^pkg_bcrypt_fetch = git$/;"	m
pkg_bcrypt_homepage	deps/ranch/erlang.mk	/^pkg_bcrypt_homepage = https:\/\/github.com\/riverrun\/branglecrypt$/;"	m
pkg_bcrypt_name	deps/ranch/erlang.mk	/^pkg_bcrypt_name = bcrypt$/;"	m
pkg_bcrypt_repo	deps/ranch/erlang.mk	/^pkg_bcrypt_repo = https:\/\/github.com\/riverrun\/branglecrypt$/;"	m
pkg_beam_commit	deps/ranch/erlang.mk	/^pkg_beam_commit = master$/;"	m
pkg_beam_description	deps/ranch/erlang.mk	/^pkg_beam_description = BEAM emulator written in Erlang$/;"	m
pkg_beam_fetch	deps/ranch/erlang.mk	/^pkg_beam_fetch = git$/;"	m
pkg_beam_homepage	deps/ranch/erlang.mk	/^pkg_beam_homepage = https:\/\/github.com\/tonyrog\/beam$/;"	m
pkg_beam_name	deps/ranch/erlang.mk	/^pkg_beam_name = beam$/;"	m
pkg_beam_repo	deps/ranch/erlang.mk	/^pkg_beam_repo = https:\/\/github.com\/tonyrog\/beam$/;"	m
pkg_beanstalk_commit	deps/ranch/erlang.mk	/^pkg_beanstalk_commit = master$/;"	m
pkg_beanstalk_description	deps/ranch/erlang.mk	/^pkg_beanstalk_description = An Erlang client for beanstalkd$/;"	m
pkg_beanstalk_fetch	deps/ranch/erlang.mk	/^pkg_beanstalk_fetch = git$/;"	m
pkg_beanstalk_homepage	deps/ranch/erlang.mk	/^pkg_beanstalk_homepage = https:\/\/github.com\/tim\/erlang-beanstalk$/;"	m
pkg_beanstalk_name	deps/ranch/erlang.mk	/^pkg_beanstalk_name = beanstalk$/;"	m
pkg_beanstalk_repo	deps/ranch/erlang.mk	/^pkg_beanstalk_repo = https:\/\/github.com\/tim\/erlang-beanstalk$/;"	m
pkg_bear_commit	deps/ranch/erlang.mk	/^pkg_bear_commit = master$/;"	m
pkg_bear_description	deps/ranch/erlang.mk	/^pkg_bear_description = a set of statistics functions for erlang$/;"	m
pkg_bear_fetch	deps/ranch/erlang.mk	/^pkg_bear_fetch = git$/;"	m
pkg_bear_homepage	deps/ranch/erlang.mk	/^pkg_bear_homepage = https:\/\/github.com\/boundary\/bear$/;"	m
pkg_bear_name	deps/ranch/erlang.mk	/^pkg_bear_name = bear$/;"	m
pkg_bear_repo	deps/ranch/erlang.mk	/^pkg_bear_repo = https:\/\/github.com\/boundary\/bear$/;"	m
pkg_bertconf_commit	deps/ranch/erlang.mk	/^pkg_bertconf_commit = master$/;"	m
pkg_bertconf_description	deps/ranch/erlang.mk	/^pkg_bertconf_description = Make ETS tables out of statc BERT files that are auto-reloaded$/;"	m
pkg_bertconf_fetch	deps/ranch/erlang.mk	/^pkg_bertconf_fetch = git$/;"	m
pkg_bertconf_homepage	deps/ranch/erlang.mk	/^pkg_bertconf_homepage = https:\/\/github.com\/ferd\/bertconf$/;"	m
pkg_bertconf_name	deps/ranch/erlang.mk	/^pkg_bertconf_name = bertconf$/;"	m
pkg_bertconf_repo	deps/ranch/erlang.mk	/^pkg_bertconf_repo = https:\/\/github.com\/ferd\/bertconf$/;"	m
pkg_bifrost_commit	deps/ranch/erlang.mk	/^pkg_bifrost_commit = master$/;"	m
pkg_bifrost_description	deps/ranch/erlang.mk	/^pkg_bifrost_description = Erlang FTP Server Framework$/;"	m
pkg_bifrost_fetch	deps/ranch/erlang.mk	/^pkg_bifrost_fetch = git$/;"	m
pkg_bifrost_homepage	deps/ranch/erlang.mk	/^pkg_bifrost_homepage = https:\/\/github.com\/thorstadt\/bifrost$/;"	m
pkg_bifrost_name	deps/ranch/erlang.mk	/^pkg_bifrost_name = bifrost$/;"	m
pkg_bifrost_repo	deps/ranch/erlang.mk	/^pkg_bifrost_repo = https:\/\/github.com\/thorstadt\/bifrost$/;"	m
pkg_binpp_commit	deps/ranch/erlang.mk	/^pkg_binpp_commit = master$/;"	m
pkg_binpp_description	deps/ranch/erlang.mk	/^pkg_binpp_description = Erlang Binary Pretty Printer$/;"	m
pkg_binpp_fetch	deps/ranch/erlang.mk	/^pkg_binpp_fetch = git$/;"	m
pkg_binpp_homepage	deps/ranch/erlang.mk	/^pkg_binpp_homepage = https:\/\/github.com\/jtendo\/binpp$/;"	m
pkg_binpp_name	deps/ranch/erlang.mk	/^pkg_binpp_name = binpp$/;"	m
pkg_binpp_repo	deps/ranch/erlang.mk	/^pkg_binpp_repo = https:\/\/github.com\/jtendo\/binpp$/;"	m
pkg_bisect_commit	deps/ranch/erlang.mk	/^pkg_bisect_commit = master$/;"	m
pkg_bisect_description	deps/ranch/erlang.mk	/^pkg_bisect_description = Ordered fixed-size binary dictionary in Erlang$/;"	m
pkg_bisect_fetch	deps/ranch/erlang.mk	/^pkg_bisect_fetch = git$/;"	m
pkg_bisect_homepage	deps/ranch/erlang.mk	/^pkg_bisect_homepage = https:\/\/github.com\/knutin\/bisect$/;"	m
pkg_bisect_name	deps/ranch/erlang.mk	/^pkg_bisect_name = bisect$/;"	m
pkg_bisect_repo	deps/ranch/erlang.mk	/^pkg_bisect_repo = https:\/\/github.com\/knutin\/bisect$/;"	m
pkg_bitcask_commit	deps/ranch/erlang.mk	/^pkg_bitcask_commit = develop$/;"	m
pkg_bitcask_description	deps/ranch/erlang.mk	/^pkg_bitcask_description = because you need another a key\/value storage engine$/;"	m
pkg_bitcask_fetch	deps/ranch/erlang.mk	/^pkg_bitcask_fetch = git$/;"	m
pkg_bitcask_homepage	deps/ranch/erlang.mk	/^pkg_bitcask_homepage = https:\/\/github.com\/basho\/bitcask$/;"	m
pkg_bitcask_name	deps/ranch/erlang.mk	/^pkg_bitcask_name = bitcask$/;"	m
pkg_bitcask_repo	deps/ranch/erlang.mk	/^pkg_bitcask_repo = https:\/\/github.com\/basho\/bitcask$/;"	m
pkg_bitstore_commit	deps/ranch/erlang.mk	/^pkg_bitstore_commit = master$/;"	m
pkg_bitstore_description	deps/ranch/erlang.mk	/^pkg_bitstore_description = A document based ontology development environment$/;"	m
pkg_bitstore_fetch	deps/ranch/erlang.mk	/^pkg_bitstore_fetch = git$/;"	m
pkg_bitstore_homepage	deps/ranch/erlang.mk	/^pkg_bitstore_homepage = https:\/\/github.com\/bdionne\/bitstore$/;"	m
pkg_bitstore_name	deps/ranch/erlang.mk	/^pkg_bitstore_name = bitstore$/;"	m
pkg_bitstore_repo	deps/ranch/erlang.mk	/^pkg_bitstore_repo = https:\/\/github.com\/bdionne\/bitstore$/;"	m
pkg_bootstrap_commit	deps/ranch/erlang.mk	/^pkg_bootstrap_commit = master$/;"	m
pkg_bootstrap_description	deps/ranch/erlang.mk	/^pkg_bootstrap_description = A simple, yet powerful Erlang cluster bootstrapping application.$/;"	m
pkg_bootstrap_fetch	deps/ranch/erlang.mk	/^pkg_bootstrap_fetch = git$/;"	m
pkg_bootstrap_homepage	deps/ranch/erlang.mk	/^pkg_bootstrap_homepage = https:\/\/github.com\/schlagert\/bootstrap$/;"	m
pkg_bootstrap_name	deps/ranch/erlang.mk	/^pkg_bootstrap_name = bootstrap$/;"	m
pkg_bootstrap_repo	deps/ranch/erlang.mk	/^pkg_bootstrap_repo = https:\/\/github.com\/schlagert\/bootstrap$/;"	m
pkg_boss_commit	deps/ranch/erlang.mk	/^pkg_boss_commit = master$/;"	m
pkg_boss_db_commit	deps/ranch/erlang.mk	/^pkg_boss_db_commit = master$/;"	m
pkg_boss_db_description	deps/ranch/erlang.mk	/^pkg_boss_db_description = BossDB: a sharded, caching, pooling, evented ORM for Erlang$/;"	m
pkg_boss_db_fetch	deps/ranch/erlang.mk	/^pkg_boss_db_fetch = git$/;"	m
pkg_boss_db_homepage	deps/ranch/erlang.mk	/^pkg_boss_db_homepage = https:\/\/github.com\/ErlyORM\/boss_db$/;"	m
pkg_boss_db_name	deps/ranch/erlang.mk	/^pkg_boss_db_name = boss_db$/;"	m
pkg_boss_db_repo	deps/ranch/erlang.mk	/^pkg_boss_db_repo = https:\/\/github.com\/ErlyORM\/boss_db$/;"	m
pkg_boss_description	deps/ranch/erlang.mk	/^pkg_boss_description = Erlang web MVC, now featuring Comet$/;"	m
pkg_boss_fetch	deps/ranch/erlang.mk	/^pkg_boss_fetch = git$/;"	m
pkg_boss_homepage	deps/ranch/erlang.mk	/^pkg_boss_homepage = https:\/\/github.com\/ChicagoBoss\/ChicagoBoss$/;"	m
pkg_boss_name	deps/ranch/erlang.mk	/^pkg_boss_name = boss$/;"	m
pkg_boss_repo	deps/ranch/erlang.mk	/^pkg_boss_repo = https:\/\/github.com\/ChicagoBoss\/ChicagoBoss$/;"	m
pkg_brod_commit	deps/ranch/erlang.mk	/^pkg_brod_commit = master$/;"	m
pkg_brod_description	deps/ranch/erlang.mk	/^pkg_brod_description = Kafka client in Erlang$/;"	m
pkg_brod_fetch	deps/ranch/erlang.mk	/^pkg_brod_fetch = git$/;"	m
pkg_brod_homepage	deps/ranch/erlang.mk	/^pkg_brod_homepage = https:\/\/github.com\/klarna\/brod$/;"	m
pkg_brod_name	deps/ranch/erlang.mk	/^pkg_brod_name = brod$/;"	m
pkg_brod_repo	deps/ranch/erlang.mk	/^pkg_brod_repo = https:\/\/github.com\/klarna\/brod.git$/;"	m
pkg_bson_commit	deps/ranch/erlang.mk	/^pkg_bson_commit = master$/;"	m
pkg_bson_description	deps/ranch/erlang.mk	/^pkg_bson_description = BSON documents in Erlang, see bsonspec.org$/;"	m
pkg_bson_fetch	deps/ranch/erlang.mk	/^pkg_bson_fetch = git$/;"	m
pkg_bson_homepage	deps/ranch/erlang.mk	/^pkg_bson_homepage = https:\/\/github.com\/comtihon\/bson-erlang$/;"	m
pkg_bson_name	deps/ranch/erlang.mk	/^pkg_bson_name = bson$/;"	m
pkg_bson_repo	deps/ranch/erlang.mk	/^pkg_bson_repo = https:\/\/github.com\/comtihon\/bson-erlang$/;"	m
pkg_bullet_commit	deps/ranch/erlang.mk	/^pkg_bullet_commit = master$/;"	m
pkg_bullet_description	deps/ranch/erlang.mk	/^pkg_bullet_description = Simple, reliable, efficient streaming for Cowboy.$/;"	m
pkg_bullet_fetch	deps/ranch/erlang.mk	/^pkg_bullet_fetch = git$/;"	m
pkg_bullet_homepage	deps/ranch/erlang.mk	/^pkg_bullet_homepage = http:\/\/ninenines.eu$/;"	m
pkg_bullet_name	deps/ranch/erlang.mk	/^pkg_bullet_name = bullet$/;"	m
pkg_bullet_repo	deps/ranch/erlang.mk	/^pkg_bullet_repo = https:\/\/github.com\/ninenines\/bullet$/;"	m
pkg_cache_commit	deps/ranch/erlang.mk	/^pkg_cache_commit = master$/;"	m
pkg_cache_description	deps/ranch/erlang.mk	/^pkg_cache_description = Erlang in-memory cache$/;"	m
pkg_cache_fetch	deps/ranch/erlang.mk	/^pkg_cache_fetch = git$/;"	m
pkg_cache_homepage	deps/ranch/erlang.mk	/^pkg_cache_homepage = https:\/\/github.com\/fogfish\/cache$/;"	m
pkg_cache_name	deps/ranch/erlang.mk	/^pkg_cache_name = cache$/;"	m
pkg_cache_repo	deps/ranch/erlang.mk	/^pkg_cache_repo = https:\/\/github.com\/fogfish\/cache$/;"	m
pkg_cake_commit	deps/ranch/erlang.mk	/^pkg_cake_commit = master$/;"	m
pkg_cake_description	deps/ranch/erlang.mk	/^pkg_cake_description = Really simple terminal colorization$/;"	m
pkg_cake_fetch	deps/ranch/erlang.mk	/^pkg_cake_fetch = git$/;"	m
pkg_cake_homepage	deps/ranch/erlang.mk	/^pkg_cake_homepage = https:\/\/github.com\/darach\/cake-erl$/;"	m
pkg_cake_name	deps/ranch/erlang.mk	/^pkg_cake_name = cake$/;"	m
pkg_cake_repo	deps/ranch/erlang.mk	/^pkg_cake_repo = https:\/\/github.com\/darach\/cake-erl$/;"	m
pkg_carotene_commit	deps/ranch/erlang.mk	/^pkg_carotene_commit = master$/;"	m
pkg_carotene_description	deps/ranch/erlang.mk	/^pkg_carotene_description = Real-time server$/;"	m
pkg_carotene_fetch	deps/ranch/erlang.mk	/^pkg_carotene_fetch = git$/;"	m
pkg_carotene_homepage	deps/ranch/erlang.mk	/^pkg_carotene_homepage = https:\/\/github.com\/carotene\/carotene$/;"	m
pkg_carotene_name	deps/ranch/erlang.mk	/^pkg_carotene_name = carotene$/;"	m
pkg_carotene_repo	deps/ranch/erlang.mk	/^pkg_carotene_repo = https:\/\/github.com\/carotene\/carotene$/;"	m
pkg_cberl_commit	deps/ranch/erlang.mk	/^pkg_cberl_commit = master$/;"	m
pkg_cberl_description	deps/ranch/erlang.mk	/^pkg_cberl_description = NIF based Erlang bindings for Couchbase$/;"	m
pkg_cberl_fetch	deps/ranch/erlang.mk	/^pkg_cberl_fetch = git$/;"	m
pkg_cberl_homepage	deps/ranch/erlang.mk	/^pkg_cberl_homepage = https:\/\/github.com\/chitika\/cberl$/;"	m
pkg_cberl_name	deps/ranch/erlang.mk	/^pkg_cberl_name = cberl$/;"	m
pkg_cberl_repo	deps/ranch/erlang.mk	/^pkg_cberl_repo = https:\/\/github.com\/chitika\/cberl$/;"	m
pkg_cecho_commit	deps/ranch/erlang.mk	/^pkg_cecho_commit = master$/;"	m
pkg_cecho_description	deps/ranch/erlang.mk	/^pkg_cecho_description = An ncurses library for Erlang$/;"	m
pkg_cecho_fetch	deps/ranch/erlang.mk	/^pkg_cecho_fetch = git$/;"	m
pkg_cecho_homepage	deps/ranch/erlang.mk	/^pkg_cecho_homepage = https:\/\/github.com\/mazenharake\/cecho$/;"	m
pkg_cecho_name	deps/ranch/erlang.mk	/^pkg_cecho_name = cecho$/;"	m
pkg_cecho_repo	deps/ranch/erlang.mk	/^pkg_cecho_repo = https:\/\/github.com\/mazenharake\/cecho$/;"	m
pkg_cferl_commit	deps/ranch/erlang.mk	/^pkg_cferl_commit = master$/;"	m
pkg_cferl_description	deps/ranch/erlang.mk	/^pkg_cferl_description = Rackspace \/ Open Stack Cloud Files Erlang Client$/;"	m
pkg_cferl_fetch	deps/ranch/erlang.mk	/^pkg_cferl_fetch = git$/;"	m
pkg_cferl_homepage	deps/ranch/erlang.mk	/^pkg_cferl_homepage = https:\/\/github.com\/ddossot\/cferl$/;"	m
pkg_cferl_name	deps/ranch/erlang.mk	/^pkg_cferl_name = cferl$/;"	m
pkg_cferl_repo	deps/ranch/erlang.mk	/^pkg_cferl_repo = https:\/\/github.com\/ddossot\/cferl$/;"	m
pkg_chaos_monkey_commit	deps/ranch/erlang.mk	/^pkg_chaos_monkey_commit = master$/;"	m
pkg_chaos_monkey_description	deps/ranch/erlang.mk	/^pkg_chaos_monkey_description = This is The CHAOS MONKEY.  It will kill your processes.$/;"	m
pkg_chaos_monkey_fetch	deps/ranch/erlang.mk	/^pkg_chaos_monkey_fetch = git$/;"	m
pkg_chaos_monkey_homepage	deps/ranch/erlang.mk	/^pkg_chaos_monkey_homepage = https:\/\/github.com\/dLuna\/chaos_monkey$/;"	m
pkg_chaos_monkey_name	deps/ranch/erlang.mk	/^pkg_chaos_monkey_name = chaos_monkey$/;"	m
pkg_chaos_monkey_repo	deps/ranch/erlang.mk	/^pkg_chaos_monkey_repo = https:\/\/github.com\/dLuna\/chaos_monkey$/;"	m
pkg_check_node_commit	deps/ranch/erlang.mk	/^pkg_check_node_commit = master$/;"	m
pkg_check_node_description	deps/ranch/erlang.mk	/^pkg_check_node_description = Nagios Scripts for monitoring Riak$/;"	m
pkg_check_node_fetch	deps/ranch/erlang.mk	/^pkg_check_node_fetch = git$/;"	m
pkg_check_node_homepage	deps/ranch/erlang.mk	/^pkg_check_node_homepage = https:\/\/github.com\/basho-labs\/riak_nagios$/;"	m
pkg_check_node_name	deps/ranch/erlang.mk	/^pkg_check_node_name = check_node$/;"	m
pkg_check_node_repo	deps/ranch/erlang.mk	/^pkg_check_node_repo = https:\/\/github.com\/basho-labs\/riak_nagios$/;"	m
pkg_chronos_commit	deps/ranch/erlang.mk	/^pkg_chronos_commit = master$/;"	m
pkg_chronos_description	deps/ranch/erlang.mk	/^pkg_chronos_description = Timer module for Erlang that makes it easy to abstact time out of the tests.$/;"	m
pkg_chronos_fetch	deps/ranch/erlang.mk	/^pkg_chronos_fetch = git$/;"	m
pkg_chronos_homepage	deps/ranch/erlang.mk	/^pkg_chronos_homepage = https:\/\/github.com\/lehoff\/chronos$/;"	m
pkg_chronos_name	deps/ranch/erlang.mk	/^pkg_chronos_name = chronos$/;"	m
pkg_chronos_repo	deps/ranch/erlang.mk	/^pkg_chronos_repo = https:\/\/github.com\/lehoff\/chronos$/;"	m
pkg_chumak_commit	deps/ranch/erlang.mk	/^pkg_chumak_commit = master$/;"	m
pkg_chumak_description	deps/ranch/erlang.mk	/^pkg_chumak_description = Pure Erlang implementation of ZeroMQ Message Transport Protocol.$/;"	m
pkg_chumak_fetch	deps/ranch/erlang.mk	/^pkg_chumak_fetch = git$/;"	m
pkg_chumak_homepage	deps/ranch/erlang.mk	/^pkg_chumak_homepage = http:\/\/choven.ca$/;"	m
pkg_chumak_name	deps/ranch/erlang.mk	/^pkg_chumak_name = chumak$/;"	m
pkg_chumak_repo	deps/ranch/erlang.mk	/^pkg_chumak_repo = https:\/\/github.com\/chovencorp\/chumak$/;"	m
pkg_cl_commit	deps/ranch/erlang.mk	/^pkg_cl_commit = master$/;"	m
pkg_cl_description	deps/ranch/erlang.mk	/^pkg_cl_description = OpenCL binding for Erlang$/;"	m
pkg_cl_fetch	deps/ranch/erlang.mk	/^pkg_cl_fetch = git$/;"	m
pkg_cl_homepage	deps/ranch/erlang.mk	/^pkg_cl_homepage = https:\/\/github.com\/tonyrog\/cl$/;"	m
pkg_cl_name	deps/ranch/erlang.mk	/^pkg_cl_name = cl$/;"	m
pkg_cl_repo	deps/ranch/erlang.mk	/^pkg_cl_repo = https:\/\/github.com\/tonyrog\/cl$/;"	m
pkg_classifier_commit	deps/ranch/erlang.mk	/^pkg_classifier_commit = master$/;"	m
pkg_classifier_description	deps/ranch/erlang.mk	/^pkg_classifier_description = An Erlang Bayesian Filter and Text Classifier$/;"	m
pkg_classifier_fetch	deps/ranch/erlang.mk	/^pkg_classifier_fetch = git$/;"	m
pkg_classifier_homepage	deps/ranch/erlang.mk	/^pkg_classifier_homepage = https:\/\/github.com\/inaka\/classifier$/;"	m
pkg_classifier_name	deps/ranch/erlang.mk	/^pkg_classifier_name = classifier$/;"	m
pkg_classifier_repo	deps/ranch/erlang.mk	/^pkg_classifier_repo = https:\/\/github.com\/inaka\/classifier$/;"	m
pkg_clique_commit	deps/ranch/erlang.mk	/^pkg_clique_commit = develop$/;"	m
pkg_clique_description	deps/ranch/erlang.mk	/^pkg_clique_description = CLI Framework for Erlang$/;"	m
pkg_clique_fetch	deps/ranch/erlang.mk	/^pkg_clique_fetch = git$/;"	m
pkg_clique_homepage	deps/ranch/erlang.mk	/^pkg_clique_homepage = https:\/\/github.com\/basho\/clique$/;"	m
pkg_clique_name	deps/ranch/erlang.mk	/^pkg_clique_name = clique$/;"	m
pkg_clique_repo	deps/ranch/erlang.mk	/^pkg_clique_repo = https:\/\/github.com\/basho\/clique$/;"	m
pkg_cloudi_core_commit	deps/ranch/erlang.mk	/^pkg_cloudi_core_commit = master$/;"	m
pkg_cloudi_core_description	deps/ranch/erlang.mk	/^pkg_cloudi_core_description = CloudI internal service runtime$/;"	m
pkg_cloudi_core_fetch	deps/ranch/erlang.mk	/^pkg_cloudi_core_fetch = git$/;"	m
pkg_cloudi_core_homepage	deps/ranch/erlang.mk	/^pkg_cloudi_core_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_core_name	deps/ranch/erlang.mk	/^pkg_cloudi_core_name = cloudi_core$/;"	m
pkg_cloudi_core_repo	deps/ranch/erlang.mk	/^pkg_cloudi_core_repo = https:\/\/github.com\/CloudI\/cloudi_core$/;"	m
pkg_cloudi_service_api_requests_commit	deps/ranch/erlang.mk	/^pkg_cloudi_service_api_requests_commit = master$/;"	m
pkg_cloudi_service_api_requests_description	deps/ranch/erlang.mk	/^pkg_cloudi_service_api_requests_description = CloudI Service API requests (JSON-RPC\/Erlang-term support)$/;"	m
pkg_cloudi_service_api_requests_fetch	deps/ranch/erlang.mk	/^pkg_cloudi_service_api_requests_fetch = git$/;"	m
pkg_cloudi_service_api_requests_homepage	deps/ranch/erlang.mk	/^pkg_cloudi_service_api_requests_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_api_requests_name	deps/ranch/erlang.mk	/^pkg_cloudi_service_api_requests_name = cloudi_service_api_requests$/;"	m
pkg_cloudi_service_api_requests_repo	deps/ranch/erlang.mk	/^pkg_cloudi_service_api_requests_repo = https:\/\/github.com\/CloudI\/cloudi_service_api_requests$/;"	m
pkg_cloudi_service_db_cassandra_commit	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_cassandra_commit = master$/;"	m
pkg_cloudi_service_db_cassandra_cql_commit	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_cassandra_cql_commit = master$/;"	m
pkg_cloudi_service_db_cassandra_cql_description	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_cassandra_cql_description = Cassandra CQL CloudI Service$/;"	m
pkg_cloudi_service_db_cassandra_cql_fetch	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_cassandra_cql_fetch = git$/;"	m
pkg_cloudi_service_db_cassandra_cql_homepage	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_cassandra_cql_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_db_cassandra_cql_name	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_cassandra_cql_name = cloudi_service_db_cassandra_cql$/;"	m
pkg_cloudi_service_db_cassandra_cql_repo	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_cassandra_cql_repo = https:\/\/github.com\/CloudI\/cloudi_service_db_cassandra_cql$/;"	m
pkg_cloudi_service_db_cassandra_description	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_cassandra_description = Cassandra CloudI Service$/;"	m
pkg_cloudi_service_db_cassandra_fetch	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_cassandra_fetch = git$/;"	m
pkg_cloudi_service_db_cassandra_homepage	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_cassandra_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_db_cassandra_name	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_cassandra_name = cloudi_service_db_cassandra$/;"	m
pkg_cloudi_service_db_cassandra_repo	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_cassandra_repo = https:\/\/github.com\/CloudI\/cloudi_service_db_cassandra$/;"	m
pkg_cloudi_service_db_commit	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_commit = master$/;"	m
pkg_cloudi_service_db_couchdb_commit	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_couchdb_commit = master$/;"	m
pkg_cloudi_service_db_couchdb_description	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_couchdb_description = CouchDB CloudI Service$/;"	m
pkg_cloudi_service_db_couchdb_fetch	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_couchdb_fetch = git$/;"	m
pkg_cloudi_service_db_couchdb_homepage	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_couchdb_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_db_couchdb_name	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_couchdb_name = cloudi_service_db_couchdb$/;"	m
pkg_cloudi_service_db_couchdb_repo	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_couchdb_repo = https:\/\/github.com\/CloudI\/cloudi_service_db_couchdb$/;"	m
pkg_cloudi_service_db_description	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_description = CloudI Database (in-memory\/testing\/generic)$/;"	m
pkg_cloudi_service_db_elasticsearch_commit	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_elasticsearch_commit = master$/;"	m
pkg_cloudi_service_db_elasticsearch_description	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_elasticsearch_description = elasticsearch CloudI Service$/;"	m
pkg_cloudi_service_db_elasticsearch_fetch	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_elasticsearch_fetch = git$/;"	m
pkg_cloudi_service_db_elasticsearch_homepage	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_elasticsearch_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_db_elasticsearch_name	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_elasticsearch_name = cloudi_service_db_elasticsearch$/;"	m
pkg_cloudi_service_db_elasticsearch_repo	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_elasticsearch_repo = https:\/\/github.com\/CloudI\/cloudi_service_db_elasticsearch$/;"	m
pkg_cloudi_service_db_fetch	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_fetch = git$/;"	m
pkg_cloudi_service_db_homepage	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_db_memcached_commit	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_memcached_commit = master$/;"	m
pkg_cloudi_service_db_memcached_description	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_memcached_description = memcached CloudI Service$/;"	m
pkg_cloudi_service_db_memcached_fetch	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_memcached_fetch = git$/;"	m
pkg_cloudi_service_db_memcached_homepage	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_memcached_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_db_memcached_name	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_memcached_name = cloudi_service_db_memcached$/;"	m
pkg_cloudi_service_db_memcached_repo	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_memcached_repo = https:\/\/github.com\/CloudI\/cloudi_service_db_memcached$/;"	m
pkg_cloudi_service_db_mysql_commit	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_mysql_commit = master$/;"	m
pkg_cloudi_service_db_mysql_description	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_mysql_description = MySQL CloudI Service$/;"	m
pkg_cloudi_service_db_mysql_fetch	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_mysql_fetch = git$/;"	m
pkg_cloudi_service_db_mysql_homepage	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_mysql_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_db_mysql_name	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_mysql_name = cloudi_service_db_mysql$/;"	m
pkg_cloudi_service_db_mysql_repo	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_mysql_repo = https:\/\/github.com\/CloudI\/cloudi_service_db_mysql$/;"	m
pkg_cloudi_service_db_name	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_name = cloudi_service_db$/;"	m
pkg_cloudi_service_db_pgsql_commit	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_pgsql_commit = master$/;"	m
pkg_cloudi_service_db_pgsql_description	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_pgsql_description = PostgreSQL CloudI Service$/;"	m
pkg_cloudi_service_db_pgsql_fetch	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_pgsql_fetch = git$/;"	m
pkg_cloudi_service_db_pgsql_homepage	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_pgsql_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_db_pgsql_name	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_pgsql_name = cloudi_service_db_pgsql$/;"	m
pkg_cloudi_service_db_pgsql_repo	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_pgsql_repo = https:\/\/github.com\/CloudI\/cloudi_service_db_pgsql$/;"	m
pkg_cloudi_service_db_repo	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_repo = https:\/\/github.com\/CloudI\/cloudi_service_db$/;"	m
pkg_cloudi_service_db_riak_commit	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_riak_commit = master$/;"	m
pkg_cloudi_service_db_riak_description	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_riak_description = Riak CloudI Service$/;"	m
pkg_cloudi_service_db_riak_fetch	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_riak_fetch = git$/;"	m
pkg_cloudi_service_db_riak_homepage	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_riak_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_db_riak_name	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_riak_name = cloudi_service_db_riak$/;"	m
pkg_cloudi_service_db_riak_repo	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_riak_repo = https:\/\/github.com\/CloudI\/cloudi_service_db_riak$/;"	m
pkg_cloudi_service_db_tokyotyrant_commit	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_tokyotyrant_commit = master$/;"	m
pkg_cloudi_service_db_tokyotyrant_description	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_tokyotyrant_description = Tokyo Tyrant CloudI Service$/;"	m
pkg_cloudi_service_db_tokyotyrant_fetch	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_tokyotyrant_fetch = git$/;"	m
pkg_cloudi_service_db_tokyotyrant_homepage	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_tokyotyrant_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_db_tokyotyrant_name	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_tokyotyrant_name = cloudi_service_db_tokyotyrant$/;"	m
pkg_cloudi_service_db_tokyotyrant_repo	deps/ranch/erlang.mk	/^pkg_cloudi_service_db_tokyotyrant_repo = https:\/\/github.com\/CloudI\/cloudi_service_db_tokyotyrant$/;"	m
pkg_cloudi_service_filesystem_commit	deps/ranch/erlang.mk	/^pkg_cloudi_service_filesystem_commit = master$/;"	m
pkg_cloudi_service_filesystem_description	deps/ranch/erlang.mk	/^pkg_cloudi_service_filesystem_description = Filesystem CloudI Service$/;"	m
pkg_cloudi_service_filesystem_fetch	deps/ranch/erlang.mk	/^pkg_cloudi_service_filesystem_fetch = git$/;"	m
pkg_cloudi_service_filesystem_homepage	deps/ranch/erlang.mk	/^pkg_cloudi_service_filesystem_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_filesystem_name	deps/ranch/erlang.mk	/^pkg_cloudi_service_filesystem_name = cloudi_service_filesystem$/;"	m
pkg_cloudi_service_filesystem_repo	deps/ranch/erlang.mk	/^pkg_cloudi_service_filesystem_repo = https:\/\/github.com\/CloudI\/cloudi_service_filesystem$/;"	m
pkg_cloudi_service_http_client_commit	deps/ranch/erlang.mk	/^pkg_cloudi_service_http_client_commit = master$/;"	m
pkg_cloudi_service_http_client_description	deps/ranch/erlang.mk	/^pkg_cloudi_service_http_client_description = HTTP client CloudI Service$/;"	m
pkg_cloudi_service_http_client_fetch	deps/ranch/erlang.mk	/^pkg_cloudi_service_http_client_fetch = git$/;"	m
pkg_cloudi_service_http_client_homepage	deps/ranch/erlang.mk	/^pkg_cloudi_service_http_client_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_http_client_name	deps/ranch/erlang.mk	/^pkg_cloudi_service_http_client_name = cloudi_service_http_client$/;"	m
pkg_cloudi_service_http_client_repo	deps/ranch/erlang.mk	/^pkg_cloudi_service_http_client_repo = https:\/\/github.com\/CloudI\/cloudi_service_http_client$/;"	m
pkg_cloudi_service_http_cowboy_commit	deps/ranch/erlang.mk	/^pkg_cloudi_service_http_cowboy_commit = master$/;"	m
pkg_cloudi_service_http_cowboy_description	deps/ranch/erlang.mk	/^pkg_cloudi_service_http_cowboy_description = cowboy HTTP\/HTTPS CloudI Service$/;"	m
pkg_cloudi_service_http_cowboy_fetch	deps/ranch/erlang.mk	/^pkg_cloudi_service_http_cowboy_fetch = git$/;"	m
pkg_cloudi_service_http_cowboy_homepage	deps/ranch/erlang.mk	/^pkg_cloudi_service_http_cowboy_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_http_cowboy_name	deps/ranch/erlang.mk	/^pkg_cloudi_service_http_cowboy_name = cloudi_service_http_cowboy$/;"	m
pkg_cloudi_service_http_cowboy_repo	deps/ranch/erlang.mk	/^pkg_cloudi_service_http_cowboy_repo = https:\/\/github.com\/CloudI\/cloudi_service_http_cowboy$/;"	m
pkg_cloudi_service_http_elli_commit	deps/ranch/erlang.mk	/^pkg_cloudi_service_http_elli_commit = master$/;"	m
pkg_cloudi_service_http_elli_description	deps/ranch/erlang.mk	/^pkg_cloudi_service_http_elli_description = elli HTTP CloudI Service$/;"	m
pkg_cloudi_service_http_elli_fetch	deps/ranch/erlang.mk	/^pkg_cloudi_service_http_elli_fetch = git$/;"	m
pkg_cloudi_service_http_elli_homepage	deps/ranch/erlang.mk	/^pkg_cloudi_service_http_elli_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_http_elli_name	deps/ranch/erlang.mk	/^pkg_cloudi_service_http_elli_name = cloudi_service_http_elli$/;"	m
pkg_cloudi_service_http_elli_repo	deps/ranch/erlang.mk	/^pkg_cloudi_service_http_elli_repo = https:\/\/github.com\/CloudI\/cloudi_service_http_elli$/;"	m
pkg_cloudi_service_map_reduce_commit	deps/ranch/erlang.mk	/^pkg_cloudi_service_map_reduce_commit = master$/;"	m
pkg_cloudi_service_map_reduce_description	deps/ranch/erlang.mk	/^pkg_cloudi_service_map_reduce_description = Map\/Reduce CloudI Service$/;"	m
pkg_cloudi_service_map_reduce_fetch	deps/ranch/erlang.mk	/^pkg_cloudi_service_map_reduce_fetch = git$/;"	m
pkg_cloudi_service_map_reduce_homepage	deps/ranch/erlang.mk	/^pkg_cloudi_service_map_reduce_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_map_reduce_name	deps/ranch/erlang.mk	/^pkg_cloudi_service_map_reduce_name = cloudi_service_map_reduce$/;"	m
pkg_cloudi_service_map_reduce_repo	deps/ranch/erlang.mk	/^pkg_cloudi_service_map_reduce_repo = https:\/\/github.com\/CloudI\/cloudi_service_map_reduce$/;"	m
pkg_cloudi_service_oauth1_commit	deps/ranch/erlang.mk	/^pkg_cloudi_service_oauth1_commit = master$/;"	m
pkg_cloudi_service_oauth1_description	deps/ranch/erlang.mk	/^pkg_cloudi_service_oauth1_description = OAuth v1.0 CloudI Service$/;"	m
pkg_cloudi_service_oauth1_fetch	deps/ranch/erlang.mk	/^pkg_cloudi_service_oauth1_fetch = git$/;"	m
pkg_cloudi_service_oauth1_homepage	deps/ranch/erlang.mk	/^pkg_cloudi_service_oauth1_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_oauth1_name	deps/ranch/erlang.mk	/^pkg_cloudi_service_oauth1_name = cloudi_service_oauth1$/;"	m
pkg_cloudi_service_oauth1_repo	deps/ranch/erlang.mk	/^pkg_cloudi_service_oauth1_repo = https:\/\/github.com\/CloudI\/cloudi_service_oauth1$/;"	m
pkg_cloudi_service_queue_commit	deps/ranch/erlang.mk	/^pkg_cloudi_service_queue_commit = master$/;"	m
pkg_cloudi_service_queue_description	deps/ranch/erlang.mk	/^pkg_cloudi_service_queue_description = Persistent Queue Service$/;"	m
pkg_cloudi_service_queue_fetch	deps/ranch/erlang.mk	/^pkg_cloudi_service_queue_fetch = git$/;"	m
pkg_cloudi_service_queue_homepage	deps/ranch/erlang.mk	/^pkg_cloudi_service_queue_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_queue_name	deps/ranch/erlang.mk	/^pkg_cloudi_service_queue_name = cloudi_service_queue$/;"	m
pkg_cloudi_service_queue_repo	deps/ranch/erlang.mk	/^pkg_cloudi_service_queue_repo = https:\/\/github.com\/CloudI\/cloudi_service_queue$/;"	m
pkg_cloudi_service_quorum_commit	deps/ranch/erlang.mk	/^pkg_cloudi_service_quorum_commit = master$/;"	m
pkg_cloudi_service_quorum_description	deps/ranch/erlang.mk	/^pkg_cloudi_service_quorum_description = CloudI Quorum Service$/;"	m
pkg_cloudi_service_quorum_fetch	deps/ranch/erlang.mk	/^pkg_cloudi_service_quorum_fetch = git$/;"	m
pkg_cloudi_service_quorum_homepage	deps/ranch/erlang.mk	/^pkg_cloudi_service_quorum_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_quorum_name	deps/ranch/erlang.mk	/^pkg_cloudi_service_quorum_name = cloudi_service_quorum$/;"	m
pkg_cloudi_service_quorum_repo	deps/ranch/erlang.mk	/^pkg_cloudi_service_quorum_repo = https:\/\/github.com\/CloudI\/cloudi_service_quorum$/;"	m
pkg_cloudi_service_router_commit	deps/ranch/erlang.mk	/^pkg_cloudi_service_router_commit = master$/;"	m
pkg_cloudi_service_router_description	deps/ranch/erlang.mk	/^pkg_cloudi_service_router_description = CloudI Router Service$/;"	m
pkg_cloudi_service_router_fetch	deps/ranch/erlang.mk	/^pkg_cloudi_service_router_fetch = git$/;"	m
pkg_cloudi_service_router_homepage	deps/ranch/erlang.mk	/^pkg_cloudi_service_router_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_router_name	deps/ranch/erlang.mk	/^pkg_cloudi_service_router_name = cloudi_service_router$/;"	m
pkg_cloudi_service_router_repo	deps/ranch/erlang.mk	/^pkg_cloudi_service_router_repo = https:\/\/github.com\/CloudI\/cloudi_service_router$/;"	m
pkg_cloudi_service_tcp_commit	deps/ranch/erlang.mk	/^pkg_cloudi_service_tcp_commit = master$/;"	m
pkg_cloudi_service_tcp_description	deps/ranch/erlang.mk	/^pkg_cloudi_service_tcp_description = TCP CloudI Service$/;"	m
pkg_cloudi_service_tcp_fetch	deps/ranch/erlang.mk	/^pkg_cloudi_service_tcp_fetch = git$/;"	m
pkg_cloudi_service_tcp_homepage	deps/ranch/erlang.mk	/^pkg_cloudi_service_tcp_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_tcp_name	deps/ranch/erlang.mk	/^pkg_cloudi_service_tcp_name = cloudi_service_tcp$/;"	m
pkg_cloudi_service_tcp_repo	deps/ranch/erlang.mk	/^pkg_cloudi_service_tcp_repo = https:\/\/github.com\/CloudI\/cloudi_service_tcp$/;"	m
pkg_cloudi_service_timers_commit	deps/ranch/erlang.mk	/^pkg_cloudi_service_timers_commit = master$/;"	m
pkg_cloudi_service_timers_description	deps/ranch/erlang.mk	/^pkg_cloudi_service_timers_description = Timers CloudI Service$/;"	m
pkg_cloudi_service_timers_fetch	deps/ranch/erlang.mk	/^pkg_cloudi_service_timers_fetch = git$/;"	m
pkg_cloudi_service_timers_homepage	deps/ranch/erlang.mk	/^pkg_cloudi_service_timers_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_timers_name	deps/ranch/erlang.mk	/^pkg_cloudi_service_timers_name = cloudi_service_timers$/;"	m
pkg_cloudi_service_timers_repo	deps/ranch/erlang.mk	/^pkg_cloudi_service_timers_repo = https:\/\/github.com\/CloudI\/cloudi_service_timers$/;"	m
pkg_cloudi_service_udp_commit	deps/ranch/erlang.mk	/^pkg_cloudi_service_udp_commit = master$/;"	m
pkg_cloudi_service_udp_description	deps/ranch/erlang.mk	/^pkg_cloudi_service_udp_description = UDP CloudI Service$/;"	m
pkg_cloudi_service_udp_fetch	deps/ranch/erlang.mk	/^pkg_cloudi_service_udp_fetch = git$/;"	m
pkg_cloudi_service_udp_homepage	deps/ranch/erlang.mk	/^pkg_cloudi_service_udp_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_udp_name	deps/ranch/erlang.mk	/^pkg_cloudi_service_udp_name = cloudi_service_udp$/;"	m
pkg_cloudi_service_udp_repo	deps/ranch/erlang.mk	/^pkg_cloudi_service_udp_repo = https:\/\/github.com\/CloudI\/cloudi_service_udp$/;"	m
pkg_cloudi_service_validate_commit	deps/ranch/erlang.mk	/^pkg_cloudi_service_validate_commit = master$/;"	m
pkg_cloudi_service_validate_description	deps/ranch/erlang.mk	/^pkg_cloudi_service_validate_description = CloudI Validate Service$/;"	m
pkg_cloudi_service_validate_fetch	deps/ranch/erlang.mk	/^pkg_cloudi_service_validate_fetch = git$/;"	m
pkg_cloudi_service_validate_homepage	deps/ranch/erlang.mk	/^pkg_cloudi_service_validate_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_validate_name	deps/ranch/erlang.mk	/^pkg_cloudi_service_validate_name = cloudi_service_validate$/;"	m
pkg_cloudi_service_validate_repo	deps/ranch/erlang.mk	/^pkg_cloudi_service_validate_repo = https:\/\/github.com\/CloudI\/cloudi_service_validate$/;"	m
pkg_cloudi_service_zeromq_commit	deps/ranch/erlang.mk	/^pkg_cloudi_service_zeromq_commit = master$/;"	m
pkg_cloudi_service_zeromq_description	deps/ranch/erlang.mk	/^pkg_cloudi_service_zeromq_description = ZeroMQ CloudI Service$/;"	m
pkg_cloudi_service_zeromq_fetch	deps/ranch/erlang.mk	/^pkg_cloudi_service_zeromq_fetch = git$/;"	m
pkg_cloudi_service_zeromq_homepage	deps/ranch/erlang.mk	/^pkg_cloudi_service_zeromq_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_zeromq_name	deps/ranch/erlang.mk	/^pkg_cloudi_service_zeromq_name = cloudi_service_zeromq$/;"	m
pkg_cloudi_service_zeromq_repo	deps/ranch/erlang.mk	/^pkg_cloudi_service_zeromq_repo = https:\/\/github.com\/CloudI\/cloudi_service_zeromq$/;"	m
pkg_cluster_info_commit	deps/ranch/erlang.mk	/^pkg_cluster_info_commit = master$/;"	m
pkg_cluster_info_description	deps/ranch/erlang.mk	/^pkg_cluster_info_description = Fork of Hibari's nifty cluster_info OTP app$/;"	m
pkg_cluster_info_fetch	deps/ranch/erlang.mk	/^pkg_cluster_info_fetch = git$/;"	m
pkg_cluster_info_homepage	deps/ranch/erlang.mk	/^pkg_cluster_info_homepage = https:\/\/github.com\/basho\/cluster_info$/;"	m
pkg_cluster_info_name	deps/ranch/erlang.mk	/^pkg_cluster_info_name = cluster_info$/;"	m
pkg_cluster_info_repo	deps/ranch/erlang.mk	/^pkg_cluster_info_repo = https:\/\/github.com\/basho\/cluster_info$/;"	m
pkg_color_commit	deps/ranch/erlang.mk	/^pkg_color_commit = master$/;"	m
pkg_color_description	deps/ranch/erlang.mk	/^pkg_color_description = ANSI colors for your Erlang$/;"	m
pkg_color_fetch	deps/ranch/erlang.mk	/^pkg_color_fetch = git$/;"	m
pkg_color_homepage	deps/ranch/erlang.mk	/^pkg_color_homepage = https:\/\/github.com\/julianduque\/erlang-color$/;"	m
pkg_color_name	deps/ranch/erlang.mk	/^pkg_color_name = color$/;"	m
pkg_color_repo	deps/ranch/erlang.mk	/^pkg_color_repo = https:\/\/github.com\/julianduque\/erlang-color$/;"	m
pkg_confetti_commit	deps/ranch/erlang.mk	/^pkg_confetti_commit = master$/;"	m
pkg_confetti_description	deps/ranch/erlang.mk	/^pkg_confetti_description = Erlang configuration provider \/ application:get_env\/2 on steroids$/;"	m
pkg_confetti_fetch	deps/ranch/erlang.mk	/^pkg_confetti_fetch = git$/;"	m
pkg_confetti_homepage	deps/ranch/erlang.mk	/^pkg_confetti_homepage = https:\/\/github.com\/jtendo\/confetti$/;"	m
pkg_confetti_name	deps/ranch/erlang.mk	/^pkg_confetti_name = confetti$/;"	m
pkg_confetti_repo	deps/ranch/erlang.mk	/^pkg_confetti_repo = https:\/\/github.com\/jtendo\/confetti$/;"	m
pkg_couchbeam_commit	deps/ranch/erlang.mk	/^pkg_couchbeam_commit = master$/;"	m
pkg_couchbeam_description	deps/ranch/erlang.mk	/^pkg_couchbeam_description = Apache CouchDB client in Erlang$/;"	m
pkg_couchbeam_fetch	deps/ranch/erlang.mk	/^pkg_couchbeam_fetch = git$/;"	m
pkg_couchbeam_homepage	deps/ranch/erlang.mk	/^pkg_couchbeam_homepage = https:\/\/github.com\/benoitc\/couchbeam$/;"	m
pkg_couchbeam_name	deps/ranch/erlang.mk	/^pkg_couchbeam_name = couchbeam$/;"	m
pkg_couchbeam_repo	deps/ranch/erlang.mk	/^pkg_couchbeam_repo = https:\/\/github.com\/benoitc\/couchbeam$/;"	m
pkg_covertool_commit	deps/ranch/erlang.mk	/^pkg_covertool_commit = master$/;"	m
pkg_covertool_description	deps/ranch/erlang.mk	/^pkg_covertool_description = Tool to convert Erlang cover data files into Cobertura XML reports$/;"	m
pkg_covertool_fetch	deps/ranch/erlang.mk	/^pkg_covertool_fetch = git$/;"	m
pkg_covertool_homepage	deps/ranch/erlang.mk	/^pkg_covertool_homepage = https:\/\/github.com\/idubrov\/covertool$/;"	m
pkg_covertool_name	deps/ranch/erlang.mk	/^pkg_covertool_name = covertool$/;"	m
pkg_covertool_repo	deps/ranch/erlang.mk	/^pkg_covertool_repo = https:\/\/github.com\/idubrov\/covertool$/;"	m
pkg_cowboy_commit	deps/ranch/erlang.mk	/^pkg_cowboy_commit = 1.0.4$/;"	m
pkg_cowboy_description	deps/ranch/erlang.mk	/^pkg_cowboy_description = Small, fast and modular HTTP server.$/;"	m
pkg_cowboy_fetch	deps/ranch/erlang.mk	/^pkg_cowboy_fetch = git$/;"	m
pkg_cowboy_homepage	deps/ranch/erlang.mk	/^pkg_cowboy_homepage = http:\/\/ninenines.eu$/;"	m
pkg_cowboy_name	deps/ranch/erlang.mk	/^pkg_cowboy_name = cowboy$/;"	m
pkg_cowboy_repo	deps/ranch/erlang.mk	/^pkg_cowboy_repo = https:\/\/github.com\/ninenines\/cowboy$/;"	m
pkg_cowdb_commit	deps/ranch/erlang.mk	/^pkg_cowdb_commit = master$/;"	m
pkg_cowdb_description	deps/ranch/erlang.mk	/^pkg_cowdb_description = Pure Key\/Value database library for Erlang Applications$/;"	m
pkg_cowdb_fetch	deps/ranch/erlang.mk	/^pkg_cowdb_fetch = git$/;"	m
pkg_cowdb_homepage	deps/ranch/erlang.mk	/^pkg_cowdb_homepage = https:\/\/github.com\/refuge\/cowdb$/;"	m
pkg_cowdb_name	deps/ranch/erlang.mk	/^pkg_cowdb_name = cowdb$/;"	m
pkg_cowdb_repo	deps/ranch/erlang.mk	/^pkg_cowdb_repo = https:\/\/github.com\/refuge\/cowdb$/;"	m
pkg_cowlib_commit	deps/ranch/erlang.mk	/^pkg_cowlib_commit = 1.0.2$/;"	m
pkg_cowlib_description	deps/ranch/erlang.mk	/^pkg_cowlib_description = Support library for manipulating Web protocols.$/;"	m
pkg_cowlib_fetch	deps/ranch/erlang.mk	/^pkg_cowlib_fetch = git$/;"	m
pkg_cowlib_homepage	deps/ranch/erlang.mk	/^pkg_cowlib_homepage = http:\/\/ninenines.eu$/;"	m
pkg_cowlib_name	deps/ranch/erlang.mk	/^pkg_cowlib_name = cowlib$/;"	m
pkg_cowlib_repo	deps/ranch/erlang.mk	/^pkg_cowlib_repo = https:\/\/github.com\/ninenines\/cowlib$/;"	m
pkg_cpg_commit	deps/ranch/erlang.mk	/^pkg_cpg_commit = master$/;"	m
pkg_cpg_description	deps/ranch/erlang.mk	/^pkg_cpg_description = CloudI Process Groups$/;"	m
pkg_cpg_fetch	deps/ranch/erlang.mk	/^pkg_cpg_fetch = git$/;"	m
pkg_cpg_homepage	deps/ranch/erlang.mk	/^pkg_cpg_homepage = https:\/\/github.com\/okeuday\/cpg$/;"	m
pkg_cpg_name	deps/ranch/erlang.mk	/^pkg_cpg_name = cpg$/;"	m
pkg_cpg_repo	deps/ranch/erlang.mk	/^pkg_cpg_repo = https:\/\/github.com\/okeuday\/cpg$/;"	m
pkg_cqerl_commit	deps/ranch/erlang.mk	/^pkg_cqerl_commit = master$/;"	m
pkg_cqerl_description	deps/ranch/erlang.mk	/^pkg_cqerl_description = Native Erlang CQL client for Cassandra$/;"	m
pkg_cqerl_fetch	deps/ranch/erlang.mk	/^pkg_cqerl_fetch = git$/;"	m
pkg_cqerl_homepage	deps/ranch/erlang.mk	/^pkg_cqerl_homepage = https:\/\/matehat.github.io\/cqerl\/$/;"	m
pkg_cqerl_name	deps/ranch/erlang.mk	/^pkg_cqerl_name = cqerl$/;"	m
pkg_cqerl_repo	deps/ranch/erlang.mk	/^pkg_cqerl_repo = https:\/\/github.com\/matehat\/cqerl$/;"	m
pkg_cr_commit	deps/ranch/erlang.mk	/^pkg_cr_commit = master$/;"	m
pkg_cr_description	deps/ranch/erlang.mk	/^pkg_cr_description = Chain Replication$/;"	m
pkg_cr_fetch	deps/ranch/erlang.mk	/^pkg_cr_fetch = git$/;"	m
pkg_cr_homepage	deps/ranch/erlang.mk	/^pkg_cr_homepage = https:\/\/synrc.com\/apps\/cr\/doc\/cr.htm$/;"	m
pkg_cr_name	deps/ranch/erlang.mk	/^pkg_cr_name = cr$/;"	m
pkg_cr_repo	deps/ranch/erlang.mk	/^pkg_cr_repo = https:\/\/github.com\/spawnproc\/cr$/;"	m
pkg_cuttlefish_commit	deps/ranch/erlang.mk	/^pkg_cuttlefish_commit = master$/;"	m
pkg_cuttlefish_description	deps/ranch/erlang.mk	/^pkg_cuttlefish_description = never lose your childlike sense of wonder baby cuttlefish, promise me?$/;"	m
pkg_cuttlefish_fetch	deps/ranch/erlang.mk	/^pkg_cuttlefish_fetch = git$/;"	m
pkg_cuttlefish_homepage	deps/ranch/erlang.mk	/^pkg_cuttlefish_homepage = https:\/\/github.com\/basho\/cuttlefish$/;"	m
pkg_cuttlefish_name	deps/ranch/erlang.mk	/^pkg_cuttlefish_name = cuttlefish$/;"	m
pkg_cuttlefish_repo	deps/ranch/erlang.mk	/^pkg_cuttlefish_repo = https:\/\/github.com\/basho\/cuttlefish$/;"	m
pkg_damocles_commit	deps/ranch/erlang.mk	/^pkg_damocles_commit = master$/;"	m
pkg_damocles_description	deps/ranch/erlang.mk	/^pkg_damocles_description = Erlang library for generating adversarial network conditions for QAing distributed applications\/systems on a single Linux box.$/;"	m
pkg_damocles_fetch	deps/ranch/erlang.mk	/^pkg_damocles_fetch = git$/;"	m
pkg_damocles_homepage	deps/ranch/erlang.mk	/^pkg_damocles_homepage = https:\/\/github.com\/lostcolony\/damocles$/;"	m
pkg_damocles_name	deps/ranch/erlang.mk	/^pkg_damocles_name = damocles$/;"	m
pkg_damocles_repo	deps/ranch/erlang.mk	/^pkg_damocles_repo = https:\/\/github.com\/lostcolony\/damocles$/;"	m
pkg_debbie_commit	deps/ranch/erlang.mk	/^pkg_debbie_commit = master$/;"	m
pkg_debbie_description	deps/ranch/erlang.mk	/^pkg_debbie_description = .DEB Built In Erlang$/;"	m
pkg_debbie_fetch	deps/ranch/erlang.mk	/^pkg_debbie_fetch = git$/;"	m
pkg_debbie_homepage	deps/ranch/erlang.mk	/^pkg_debbie_homepage = https:\/\/github.com\/crownedgrouse\/debbie$/;"	m
pkg_debbie_name	deps/ranch/erlang.mk	/^pkg_debbie_name = debbie$/;"	m
pkg_debbie_repo	deps/ranch/erlang.mk	/^pkg_debbie_repo = https:\/\/github.com\/crownedgrouse\/debbie$/;"	m
pkg_decimal_commit	deps/ranch/erlang.mk	/^pkg_decimal_commit = master$/;"	m
pkg_decimal_description	deps/ranch/erlang.mk	/^pkg_decimal_description = An Erlang decimal arithmetic library$/;"	m
pkg_decimal_fetch	deps/ranch/erlang.mk	/^pkg_decimal_fetch = git$/;"	m
pkg_decimal_homepage	deps/ranch/erlang.mk	/^pkg_decimal_homepage = https:\/\/github.com\/tim\/erlang-decimal$/;"	m
pkg_decimal_name	deps/ranch/erlang.mk	/^pkg_decimal_name = decimal$/;"	m
pkg_decimal_repo	deps/ranch/erlang.mk	/^pkg_decimal_repo = https:\/\/github.com\/tim\/erlang-decimal$/;"	m
pkg_detergent_commit	deps/ranch/erlang.mk	/^pkg_detergent_commit = master$/;"	m
pkg_detergent_description	deps/ranch/erlang.mk	/^pkg_detergent_description = An emulsifying Erlang SOAP library$/;"	m
pkg_detergent_fetch	deps/ranch/erlang.mk	/^pkg_detergent_fetch = git$/;"	m
pkg_detergent_homepage	deps/ranch/erlang.mk	/^pkg_detergent_homepage = https:\/\/github.com\/devinus\/detergent$/;"	m
pkg_detergent_name	deps/ranch/erlang.mk	/^pkg_detergent_name = detergent$/;"	m
pkg_detergent_repo	deps/ranch/erlang.mk	/^pkg_detergent_repo = https:\/\/github.com\/devinus\/detergent$/;"	m
pkg_detest_commit	deps/ranch/erlang.mk	/^pkg_detest_commit = master$/;"	m
pkg_detest_description	deps/ranch/erlang.mk	/^pkg_detest_description = Tool for running tests on a cluster of erlang nodes$/;"	m
pkg_detest_fetch	deps/ranch/erlang.mk	/^pkg_detest_fetch = git$/;"	m
pkg_detest_homepage	deps/ranch/erlang.mk	/^pkg_detest_homepage = https:\/\/github.com\/biokoda\/detest$/;"	m
pkg_detest_name	deps/ranch/erlang.mk	/^pkg_detest_name = detest$/;"	m
pkg_detest_repo	deps/ranch/erlang.mk	/^pkg_detest_repo = https:\/\/github.com\/biokoda\/detest$/;"	m
pkg_dh_date_commit	deps/ranch/erlang.mk	/^pkg_dh_date_commit = master$/;"	m
pkg_dh_date_description	deps/ranch/erlang.mk	/^pkg_dh_date_description = Date formatting \/ parsing library for erlang$/;"	m
pkg_dh_date_fetch	deps/ranch/erlang.mk	/^pkg_dh_date_fetch = git$/;"	m
pkg_dh_date_homepage	deps/ranch/erlang.mk	/^pkg_dh_date_homepage = https:\/\/github.com\/daleharvey\/dh_date$/;"	m
pkg_dh_date_name	deps/ranch/erlang.mk	/^pkg_dh_date_name = dh_date$/;"	m
pkg_dh_date_repo	deps/ranch/erlang.mk	/^pkg_dh_date_repo = https:\/\/github.com\/daleharvey\/dh_date$/;"	m
pkg_dirbusterl_commit	deps/ranch/erlang.mk	/^pkg_dirbusterl_commit = master$/;"	m
pkg_dirbusterl_description	deps/ranch/erlang.mk	/^pkg_dirbusterl_description = DirBuster successor in Erlang$/;"	m
pkg_dirbusterl_fetch	deps/ranch/erlang.mk	/^pkg_dirbusterl_fetch = git$/;"	m
pkg_dirbusterl_homepage	deps/ranch/erlang.mk	/^pkg_dirbusterl_homepage = https:\/\/github.com\/silentsignal\/DirBustErl$/;"	m
pkg_dirbusterl_name	deps/ranch/erlang.mk	/^pkg_dirbusterl_name = dirbusterl$/;"	m
pkg_dirbusterl_repo	deps/ranch/erlang.mk	/^pkg_dirbusterl_repo = https:\/\/github.com\/silentsignal\/DirBustErl$/;"	m
pkg_dispcount_commit	deps/ranch/erlang.mk	/^pkg_dispcount_commit = master$/;"	m
pkg_dispcount_description	deps/ranch/erlang.mk	/^pkg_dispcount_description = Erlang task dispatcher based on ETS counters.$/;"	m
pkg_dispcount_fetch	deps/ranch/erlang.mk	/^pkg_dispcount_fetch = git$/;"	m
pkg_dispcount_homepage	deps/ranch/erlang.mk	/^pkg_dispcount_homepage = https:\/\/github.com\/ferd\/dispcount$/;"	m
pkg_dispcount_name	deps/ranch/erlang.mk	/^pkg_dispcount_name = dispcount$/;"	m
pkg_dispcount_repo	deps/ranch/erlang.mk	/^pkg_dispcount_repo = https:\/\/github.com\/ferd\/dispcount$/;"	m
pkg_dlhttpc_commit	deps/ranch/erlang.mk	/^pkg_dlhttpc_commit = master$/;"	m
pkg_dlhttpc_description	deps/ranch/erlang.mk	/^pkg_dlhttpc_description = dispcount-based lhttpc fork for massive amounts of requests to limited endpoints$/;"	m
pkg_dlhttpc_fetch	deps/ranch/erlang.mk	/^pkg_dlhttpc_fetch = git$/;"	m
pkg_dlhttpc_homepage	deps/ranch/erlang.mk	/^pkg_dlhttpc_homepage = https:\/\/github.com\/ferd\/dlhttpc$/;"	m
pkg_dlhttpc_name	deps/ranch/erlang.mk	/^pkg_dlhttpc_name = dlhttpc$/;"	m
pkg_dlhttpc_repo	deps/ranch/erlang.mk	/^pkg_dlhttpc_repo = https:\/\/github.com\/ferd\/dlhttpc$/;"	m
pkg_dns_commit	deps/ranch/erlang.mk	/^pkg_dns_commit = master$/;"	m
pkg_dns_description	deps/ranch/erlang.mk	/^pkg_dns_description = Erlang DNS library$/;"	m
pkg_dns_fetch	deps/ranch/erlang.mk	/^pkg_dns_fetch = git$/;"	m
pkg_dns_homepage	deps/ranch/erlang.mk	/^pkg_dns_homepage = https:\/\/github.com\/aetrion\/dns_erlang$/;"	m
pkg_dns_name	deps/ranch/erlang.mk	/^pkg_dns_name = dns$/;"	m
pkg_dns_repo	deps/ranch/erlang.mk	/^pkg_dns_repo = https:\/\/github.com\/aetrion\/dns_erlang$/;"	m
pkg_dnssd_commit	deps/ranch/erlang.mk	/^pkg_dnssd_commit = master$/;"	m
pkg_dnssd_description	deps/ranch/erlang.mk	/^pkg_dnssd_description = Erlang interface to Apple's Bonjour D    NS Service Discovery implementation$/;"	m
pkg_dnssd_fetch	deps/ranch/erlang.mk	/^pkg_dnssd_fetch = git$/;"	m
pkg_dnssd_homepage	deps/ranch/erlang.mk	/^pkg_dnssd_homepage = https:\/\/github.com\/benoitc\/dnssd_erlang$/;"	m
pkg_dnssd_name	deps/ranch/erlang.mk	/^pkg_dnssd_name = dnssd$/;"	m
pkg_dnssd_repo	deps/ranch/erlang.mk	/^pkg_dnssd_repo = https:\/\/github.com\/benoitc\/dnssd_erlang$/;"	m
pkg_dtl_commit	deps/ranch/erlang.mk	/^pkg_dtl_commit = master$/;"	m
pkg_dtl_description	deps/ranch/erlang.mk	/^pkg_dtl_description = Django Template Language: A full-featured port of the Django template engine to Erlang.$/;"	m
pkg_dtl_fetch	deps/ranch/erlang.mk	/^pkg_dtl_fetch = git$/;"	m
pkg_dtl_homepage	deps/ranch/erlang.mk	/^pkg_dtl_homepage = https:\/\/github.com\/oinksoft\/dtl$/;"	m
pkg_dtl_name	deps/ranch/erlang.mk	/^pkg_dtl_name = dtl$/;"	m
pkg_dtl_repo	deps/ranch/erlang.mk	/^pkg_dtl_repo = https:\/\/github.com\/oinksoft\/dtl$/;"	m
pkg_dynamic_compile_commit	deps/ranch/erlang.mk	/^pkg_dynamic_compile_commit = master$/;"	m
pkg_dynamic_compile_description	deps/ranch/erlang.mk	/^pkg_dynamic_compile_description = compile and load erlang modules from string input$/;"	m
pkg_dynamic_compile_fetch	deps/ranch/erlang.mk	/^pkg_dynamic_compile_fetch = git$/;"	m
pkg_dynamic_compile_homepage	deps/ranch/erlang.mk	/^pkg_dynamic_compile_homepage = https:\/\/github.com\/jkvor\/dynamic_compile$/;"	m
pkg_dynamic_compile_name	deps/ranch/erlang.mk	/^pkg_dynamic_compile_name = dynamic_compile$/;"	m
pkg_dynamic_compile_repo	deps/ranch/erlang.mk	/^pkg_dynamic_compile_repo = https:\/\/github.com\/jkvor\/dynamic_compile$/;"	m
pkg_e2_commit	deps/ranch/erlang.mk	/^pkg_e2_commit = master$/;"	m
pkg_e2_description	deps/ranch/erlang.mk	/^pkg_e2_description = Library to simply writing correct OTP applications.$/;"	m
pkg_e2_fetch	deps/ranch/erlang.mk	/^pkg_e2_fetch = git$/;"	m
pkg_e2_homepage	deps/ranch/erlang.mk	/^pkg_e2_homepage = http:\/\/e2project.org$/;"	m
pkg_e2_name	deps/ranch/erlang.mk	/^pkg_e2_name = e2$/;"	m
pkg_e2_repo	deps/ranch/erlang.mk	/^pkg_e2_repo = https:\/\/github.com\/gar1t\/e2$/;"	m
pkg_eamf_commit	deps/ranch/erlang.mk	/^pkg_eamf_commit = master$/;"	m
pkg_eamf_description	deps/ranch/erlang.mk	/^pkg_eamf_description = eAMF provides Action Message Format (AMF) support for Erlang$/;"	m
pkg_eamf_fetch	deps/ranch/erlang.mk	/^pkg_eamf_fetch = git$/;"	m
pkg_eamf_homepage	deps/ranch/erlang.mk	/^pkg_eamf_homepage = https:\/\/github.com\/mrinalwadhwa\/eamf$/;"	m
pkg_eamf_name	deps/ranch/erlang.mk	/^pkg_eamf_name = eamf$/;"	m
pkg_eamf_repo	deps/ranch/erlang.mk	/^pkg_eamf_repo = https:\/\/github.com\/mrinalwadhwa\/eamf$/;"	m
pkg_eavro_commit	deps/ranch/erlang.mk	/^pkg_eavro_commit = master$/;"	m
pkg_eavro_description	deps/ranch/erlang.mk	/^pkg_eavro_description = Apache Avro encoder\/decoder$/;"	m
pkg_eavro_fetch	deps/ranch/erlang.mk	/^pkg_eavro_fetch = git$/;"	m
pkg_eavro_homepage	deps/ranch/erlang.mk	/^pkg_eavro_homepage = https:\/\/github.com\/SIfoxDevTeam\/eavro$/;"	m
pkg_eavro_name	deps/ranch/erlang.mk	/^pkg_eavro_name = eavro$/;"	m
pkg_eavro_repo	deps/ranch/erlang.mk	/^pkg_eavro_repo = https:\/\/github.com\/SIfoxDevTeam\/eavro$/;"	m
pkg_ecapnp_commit	deps/ranch/erlang.mk	/^pkg_ecapnp_commit = master$/;"	m
pkg_ecapnp_description	deps/ranch/erlang.mk	/^pkg_ecapnp_description = Cap'n Proto library for Erlang$/;"	m
pkg_ecapnp_fetch	deps/ranch/erlang.mk	/^pkg_ecapnp_fetch = git$/;"	m
pkg_ecapnp_homepage	deps/ranch/erlang.mk	/^pkg_ecapnp_homepage = https:\/\/github.com\/kaos\/ecapnp$/;"	m
pkg_ecapnp_name	deps/ranch/erlang.mk	/^pkg_ecapnp_name = ecapnp$/;"	m
pkg_ecapnp_repo	deps/ranch/erlang.mk	/^pkg_ecapnp_repo = https:\/\/github.com\/kaos\/ecapnp$/;"	m
pkg_econfig_commit	deps/ranch/erlang.mk	/^pkg_econfig_commit = master$/;"	m
pkg_econfig_description	deps/ranch/erlang.mk	/^pkg_econfig_description = simple Erlang config handler using INI files$/;"	m
pkg_econfig_fetch	deps/ranch/erlang.mk	/^pkg_econfig_fetch = git$/;"	m
pkg_econfig_homepage	deps/ranch/erlang.mk	/^pkg_econfig_homepage = https:\/\/github.com\/benoitc\/econfig$/;"	m
pkg_econfig_name	deps/ranch/erlang.mk	/^pkg_econfig_name = econfig$/;"	m
pkg_econfig_repo	deps/ranch/erlang.mk	/^pkg_econfig_repo = https:\/\/github.com\/benoitc\/econfig$/;"	m
pkg_edate_commit	deps/ranch/erlang.mk	/^pkg_edate_commit = master$/;"	m
pkg_edate_description	deps/ranch/erlang.mk	/^pkg_edate_description = date manipulation library for erlang$/;"	m
pkg_edate_fetch	deps/ranch/erlang.mk	/^pkg_edate_fetch = git$/;"	m
pkg_edate_homepage	deps/ranch/erlang.mk	/^pkg_edate_homepage = https:\/\/github.com\/dweldon\/edate$/;"	m
pkg_edate_name	deps/ranch/erlang.mk	/^pkg_edate_name = edate$/;"	m
pkg_edate_repo	deps/ranch/erlang.mk	/^pkg_edate_repo = https:\/\/github.com\/dweldon\/edate$/;"	m
pkg_edgar_commit	deps/ranch/erlang.mk	/^pkg_edgar_commit = master$/;"	m
pkg_edgar_description	deps/ranch/erlang.mk	/^pkg_edgar_description = Erlang Does GNU AR$/;"	m
pkg_edgar_fetch	deps/ranch/erlang.mk	/^pkg_edgar_fetch = git$/;"	m
pkg_edgar_homepage	deps/ranch/erlang.mk	/^pkg_edgar_homepage = https:\/\/github.com\/crownedgrouse\/edgar$/;"	m
pkg_edgar_name	deps/ranch/erlang.mk	/^pkg_edgar_name = edgar$/;"	m
pkg_edgar_repo	deps/ranch/erlang.mk	/^pkg_edgar_repo = https:\/\/github.com\/crownedgrouse\/edgar$/;"	m
pkg_edis_commit	deps/ranch/erlang.mk	/^pkg_edis_commit = master$/;"	m
pkg_edis_description	deps/ranch/erlang.mk	/^pkg_edis_description = An Erlang implementation of Redis KV Store$/;"	m
pkg_edis_fetch	deps/ranch/erlang.mk	/^pkg_edis_fetch = git$/;"	m
pkg_edis_homepage	deps/ranch/erlang.mk	/^pkg_edis_homepage = http:\/\/inaka.github.com\/edis\/$/;"	m
pkg_edis_name	deps/ranch/erlang.mk	/^pkg_edis_name = edis$/;"	m
pkg_edis_repo	deps/ranch/erlang.mk	/^pkg_edis_repo = https:\/\/github.com\/inaka\/edis$/;"	m
pkg_edns_commit	deps/ranch/erlang.mk	/^pkg_edns_commit = master$/;"	m
pkg_edns_description	deps/ranch/erlang.mk	/^pkg_edns_description = Erlang\/OTP DNS server$/;"	m
pkg_edns_fetch	deps/ranch/erlang.mk	/^pkg_edns_fetch = git$/;"	m
pkg_edns_homepage	deps/ranch/erlang.mk	/^pkg_edns_homepage = https:\/\/github.com\/hcvst\/erlang-dns$/;"	m
pkg_edns_name	deps/ranch/erlang.mk	/^pkg_edns_name = edns$/;"	m
pkg_edns_repo	deps/ranch/erlang.mk	/^pkg_edns_repo = https:\/\/github.com\/hcvst\/erlang-dns$/;"	m
pkg_edown_commit	deps/ranch/erlang.mk	/^pkg_edown_commit = master$/;"	m
pkg_edown_description	deps/ranch/erlang.mk	/^pkg_edown_description = EDoc extension for generating Github-flavored Markdown$/;"	m
pkg_edown_fetch	deps/ranch/erlang.mk	/^pkg_edown_fetch = git$/;"	m
pkg_edown_homepage	deps/ranch/erlang.mk	/^pkg_edown_homepage = https:\/\/github.com\/uwiger\/edown$/;"	m
pkg_edown_name	deps/ranch/erlang.mk	/^pkg_edown_name = edown$/;"	m
pkg_edown_repo	deps/ranch/erlang.mk	/^pkg_edown_repo = https:\/\/github.com\/uwiger\/edown$/;"	m
pkg_eep_app_commit	deps/ranch/erlang.mk	/^pkg_eep_app_commit = master$/;"	m
pkg_eep_app_description	deps/ranch/erlang.mk	/^pkg_eep_app_description = Embedded Event Processing$/;"	m
pkg_eep_app_fetch	deps/ranch/erlang.mk	/^pkg_eep_app_fetch = git$/;"	m
pkg_eep_app_homepage	deps/ranch/erlang.mk	/^pkg_eep_app_homepage = https:\/\/github.com\/darach\/eep-erl$/;"	m
pkg_eep_app_name	deps/ranch/erlang.mk	/^pkg_eep_app_name = eep_app$/;"	m
pkg_eep_app_repo	deps/ranch/erlang.mk	/^pkg_eep_app_repo = https:\/\/github.com\/darach\/eep-erl$/;"	m
pkg_eep_commit	deps/ranch/erlang.mk	/^pkg_eep_commit = master$/;"	m
pkg_eep_description	deps/ranch/erlang.mk	/^pkg_eep_description = Erlang Easy Profiling (eep) application provides a way to analyze application performance and call hierarchy$/;"	m
pkg_eep_fetch	deps/ranch/erlang.mk	/^pkg_eep_fetch = git$/;"	m
pkg_eep_homepage	deps/ranch/erlang.mk	/^pkg_eep_homepage = https:\/\/github.com\/virtan\/eep$/;"	m
pkg_eep_name	deps/ranch/erlang.mk	/^pkg_eep_name = eep$/;"	m
pkg_eep_repo	deps/ranch/erlang.mk	/^pkg_eep_repo = https:\/\/github.com\/virtan\/eep$/;"	m
pkg_efene_commit	deps/ranch/erlang.mk	/^pkg_efene_commit = master$/;"	m
pkg_efene_description	deps/ranch/erlang.mk	/^pkg_efene_description = Alternative syntax for the Erlang Programming Language focusing on simplicity, ease of use and programmer UX$/;"	m
pkg_efene_fetch	deps/ranch/erlang.mk	/^pkg_efene_fetch = git$/;"	m
pkg_efene_homepage	deps/ranch/erlang.mk	/^pkg_efene_homepage = https:\/\/github.com\/efene\/efene$/;"	m
pkg_efene_name	deps/ranch/erlang.mk	/^pkg_efene_name = efene$/;"	m
pkg_efene_repo	deps/ranch/erlang.mk	/^pkg_efene_repo = https:\/\/github.com\/efene\/efene$/;"	m
pkg_egeoip_commit	deps/ranch/erlang.mk	/^pkg_egeoip_commit = master$/;"	m
pkg_egeoip_description	deps/ranch/erlang.mk	/^pkg_egeoip_description = Erlang IP Geolocation module, currently supporting the MaxMind GeoLite City Database.$/;"	m
pkg_egeoip_fetch	deps/ranch/erlang.mk	/^pkg_egeoip_fetch = git$/;"	m
pkg_egeoip_homepage	deps/ranch/erlang.mk	/^pkg_egeoip_homepage = https:\/\/github.com\/mochi\/egeoip$/;"	m
pkg_egeoip_name	deps/ranch/erlang.mk	/^pkg_egeoip_name = egeoip$/;"	m
pkg_egeoip_repo	deps/ranch/erlang.mk	/^pkg_egeoip_repo = https:\/\/github.com\/mochi\/egeoip$/;"	m
pkg_ehsa_commit	deps/ranch/erlang.mk	/^pkg_ehsa_commit = default$/;"	m
pkg_ehsa_description	deps/ranch/erlang.mk	/^pkg_ehsa_description = Erlang HTTP server basic and digest authentication modules$/;"	m
pkg_ehsa_fetch	deps/ranch/erlang.mk	/^pkg_ehsa_fetch = hg$/;"	m
pkg_ehsa_homepage	deps/ranch/erlang.mk	/^pkg_ehsa_homepage = https:\/\/bitbucket.org\/a12n\/ehsa$/;"	m
pkg_ehsa_name	deps/ranch/erlang.mk	/^pkg_ehsa_name = ehsa$/;"	m
pkg_ehsa_repo	deps/ranch/erlang.mk	/^pkg_ehsa_repo = https:\/\/bitbucket.org\/a12n\/ehsa$/;"	m
pkg_ej_commit	deps/ranch/erlang.mk	/^pkg_ej_commit = master$/;"	m
pkg_ej_description	deps/ranch/erlang.mk	/^pkg_ej_description = Helper module for working with Erlang terms representing JSON$/;"	m
pkg_ej_fetch	deps/ranch/erlang.mk	/^pkg_ej_fetch = git$/;"	m
pkg_ej_homepage	deps/ranch/erlang.mk	/^pkg_ej_homepage = https:\/\/github.com\/seth\/ej$/;"	m
pkg_ej_name	deps/ranch/erlang.mk	/^pkg_ej_name = ej$/;"	m
pkg_ej_repo	deps/ranch/erlang.mk	/^pkg_ej_repo = https:\/\/github.com\/seth\/ej$/;"	m
pkg_ejabberd_commit	deps/ranch/erlang.mk	/^pkg_ejabberd_commit = master$/;"	m
pkg_ejabberd_description	deps/ranch/erlang.mk	/^pkg_ejabberd_description = Robust, ubiquitous and massively scalable Jabber \/ XMPP Instant Messaging platform$/;"	m
pkg_ejabberd_fetch	deps/ranch/erlang.mk	/^pkg_ejabberd_fetch = git$/;"	m
pkg_ejabberd_homepage	deps/ranch/erlang.mk	/^pkg_ejabberd_homepage = https:\/\/github.com\/processone\/ejabberd$/;"	m
pkg_ejabberd_name	deps/ranch/erlang.mk	/^pkg_ejabberd_name = ejabberd$/;"	m
pkg_ejabberd_repo	deps/ranch/erlang.mk	/^pkg_ejabberd_repo = https:\/\/github.com\/processone\/ejabberd$/;"	m
pkg_ejwt_commit	deps/ranch/erlang.mk	/^pkg_ejwt_commit = master$/;"	m
pkg_ejwt_description	deps/ranch/erlang.mk	/^pkg_ejwt_description = erlang library for JSON Web Token$/;"	m
pkg_ejwt_fetch	deps/ranch/erlang.mk	/^pkg_ejwt_fetch = git$/;"	m
pkg_ejwt_homepage	deps/ranch/erlang.mk	/^pkg_ejwt_homepage = https:\/\/github.com\/artefactop\/ejwt$/;"	m
pkg_ejwt_name	deps/ranch/erlang.mk	/^pkg_ejwt_name = ejwt$/;"	m
pkg_ejwt_repo	deps/ranch/erlang.mk	/^pkg_ejwt_repo = https:\/\/github.com\/artefactop\/ejwt$/;"	m
pkg_ekaf_commit	deps/ranch/erlang.mk	/^pkg_ekaf_commit = master$/;"	m
pkg_ekaf_description	deps/ranch/erlang.mk	/^pkg_ekaf_description = A minimal, high-performance Kafka client in Erlang.$/;"	m
pkg_ekaf_fetch	deps/ranch/erlang.mk	/^pkg_ekaf_fetch = git$/;"	m
pkg_ekaf_homepage	deps/ranch/erlang.mk	/^pkg_ekaf_homepage = https:\/\/github.com\/helpshift\/ekaf$/;"	m
pkg_ekaf_name	deps/ranch/erlang.mk	/^pkg_ekaf_name = ekaf$/;"	m
pkg_ekaf_repo	deps/ranch/erlang.mk	/^pkg_ekaf_repo = https:\/\/github.com\/helpshift\/ekaf$/;"	m
pkg_elarm_commit	deps/ranch/erlang.mk	/^pkg_elarm_commit = master$/;"	m
pkg_elarm_description	deps/ranch/erlang.mk	/^pkg_elarm_description = Alarm Manager for Erlang.$/;"	m
pkg_elarm_fetch	deps/ranch/erlang.mk	/^pkg_elarm_fetch = git$/;"	m
pkg_elarm_homepage	deps/ranch/erlang.mk	/^pkg_elarm_homepage = https:\/\/github.com\/esl\/elarm$/;"	m
pkg_elarm_name	deps/ranch/erlang.mk	/^pkg_elarm_name = elarm$/;"	m
pkg_elarm_repo	deps/ranch/erlang.mk	/^pkg_elarm_repo = https:\/\/github.com\/esl\/elarm$/;"	m
pkg_eleveldb_commit	deps/ranch/erlang.mk	/^pkg_eleveldb_commit = master$/;"	m
pkg_eleveldb_description	deps/ranch/erlang.mk	/^pkg_eleveldb_description = Erlang LevelDB API$/;"	m
pkg_eleveldb_fetch	deps/ranch/erlang.mk	/^pkg_eleveldb_fetch = git$/;"	m
pkg_eleveldb_homepage	deps/ranch/erlang.mk	/^pkg_eleveldb_homepage = https:\/\/github.com\/basho\/eleveldb$/;"	m
pkg_eleveldb_name	deps/ranch/erlang.mk	/^pkg_eleveldb_name = eleveldb$/;"	m
pkg_eleveldb_repo	deps/ranch/erlang.mk	/^pkg_eleveldb_repo = https:\/\/github.com\/basho\/eleveldb$/;"	m
pkg_elli_commit	deps/ranch/erlang.mk	/^pkg_elli_commit = master$/;"	m
pkg_elli_description	deps/ranch/erlang.mk	/^pkg_elli_description = Simple, robust and performant Erlang web server$/;"	m
pkg_elli_fetch	deps/ranch/erlang.mk	/^pkg_elli_fetch = git$/;"	m
pkg_elli_homepage	deps/ranch/erlang.mk	/^pkg_elli_homepage = https:\/\/github.com\/knutin\/elli$/;"	m
pkg_elli_name	deps/ranch/erlang.mk	/^pkg_elli_name = elli$/;"	m
pkg_elli_repo	deps/ranch/erlang.mk	/^pkg_elli_repo = https:\/\/github.com\/knutin\/elli$/;"	m
pkg_elvis_commit	deps/ranch/erlang.mk	/^pkg_elvis_commit = master$/;"	m
pkg_elvis_description	deps/ranch/erlang.mk	/^pkg_elvis_description = Erlang Style Reviewer$/;"	m
pkg_elvis_fetch	deps/ranch/erlang.mk	/^pkg_elvis_fetch = git$/;"	m
pkg_elvis_homepage	deps/ranch/erlang.mk	/^pkg_elvis_homepage = https:\/\/github.com\/inaka\/elvis$/;"	m
pkg_elvis_name	deps/ranch/erlang.mk	/^pkg_elvis_name = elvis$/;"	m
pkg_elvis_repo	deps/ranch/erlang.mk	/^pkg_elvis_repo = https:\/\/github.com\/inaka\/elvis$/;"	m
pkg_emagick_commit	deps/ranch/erlang.mk	/^pkg_emagick_commit = master$/;"	m
pkg_emagick_description	deps/ranch/erlang.mk	/^pkg_emagick_description = Wrapper for Graphics\/ImageMagick command line tool.$/;"	m
pkg_emagick_fetch	deps/ranch/erlang.mk	/^pkg_emagick_fetch = git$/;"	m
pkg_emagick_homepage	deps/ranch/erlang.mk	/^pkg_emagick_homepage = https:\/\/github.com\/kivra\/emagick$/;"	m
pkg_emagick_name	deps/ranch/erlang.mk	/^pkg_emagick_name = emagick$/;"	m
pkg_emagick_repo	deps/ranch/erlang.mk	/^pkg_emagick_repo = https:\/\/github.com\/kivra\/emagick$/;"	m
pkg_emysql_commit	deps/ranch/erlang.mk	/^pkg_emysql_commit = master$/;"	m
pkg_emysql_description	deps/ranch/erlang.mk	/^pkg_emysql_description = Stable, pure Erlang MySQL driver.$/;"	m
pkg_emysql_fetch	deps/ranch/erlang.mk	/^pkg_emysql_fetch = git$/;"	m
pkg_emysql_homepage	deps/ranch/erlang.mk	/^pkg_emysql_homepage = https:\/\/github.com\/Eonblast\/Emysql$/;"	m
pkg_emysql_name	deps/ranch/erlang.mk	/^pkg_emysql_name = emysql$/;"	m
pkg_emysql_repo	deps/ranch/erlang.mk	/^pkg_emysql_repo = https:\/\/github.com\/Eonblast\/Emysql$/;"	m
pkg_enm_commit	deps/ranch/erlang.mk	/^pkg_enm_commit = master$/;"	m
pkg_enm_description	deps/ranch/erlang.mk	/^pkg_enm_description = Erlang driver for nanomsg$/;"	m
pkg_enm_fetch	deps/ranch/erlang.mk	/^pkg_enm_fetch = git$/;"	m
pkg_enm_homepage	deps/ranch/erlang.mk	/^pkg_enm_homepage = https:\/\/github.com\/basho\/enm$/;"	m
pkg_enm_name	deps/ranch/erlang.mk	/^pkg_enm_name = enm$/;"	m
pkg_enm_repo	deps/ranch/erlang.mk	/^pkg_enm_repo = https:\/\/github.com\/basho\/enm$/;"	m
pkg_entop_commit	deps/ranch/erlang.mk	/^pkg_entop_commit = master$/;"	m
pkg_entop_description	deps/ranch/erlang.mk	/^pkg_entop_description = A top-like tool for monitoring an Erlang node$/;"	m
pkg_entop_fetch	deps/ranch/erlang.mk	/^pkg_entop_fetch = git$/;"	m
pkg_entop_homepage	deps/ranch/erlang.mk	/^pkg_entop_homepage = https:\/\/github.com\/mazenharake\/entop$/;"	m
pkg_entop_name	deps/ranch/erlang.mk	/^pkg_entop_name = entop$/;"	m
pkg_entop_repo	deps/ranch/erlang.mk	/^pkg_entop_repo = https:\/\/github.com\/mazenharake\/entop$/;"	m
pkg_epcap_commit	deps/ranch/erlang.mk	/^pkg_epcap_commit = master$/;"	m
pkg_epcap_description	deps/ranch/erlang.mk	/^pkg_epcap_description = Erlang packet capture interface using pcap$/;"	m
pkg_epcap_fetch	deps/ranch/erlang.mk	/^pkg_epcap_fetch = git$/;"	m
pkg_epcap_homepage	deps/ranch/erlang.mk	/^pkg_epcap_homepage = https:\/\/github.com\/msantos\/epcap$/;"	m
pkg_epcap_name	deps/ranch/erlang.mk	/^pkg_epcap_name = epcap$/;"	m
pkg_epcap_repo	deps/ranch/erlang.mk	/^pkg_epcap_repo = https:\/\/github.com\/msantos\/epcap$/;"	m
pkg_eper_commit	deps/ranch/erlang.mk	/^pkg_eper_commit = master$/;"	m
pkg_eper_description	deps/ranch/erlang.mk	/^pkg_eper_description = Erlang performance and debugging tools.$/;"	m
pkg_eper_fetch	deps/ranch/erlang.mk	/^pkg_eper_fetch = git$/;"	m
pkg_eper_homepage	deps/ranch/erlang.mk	/^pkg_eper_homepage = https:\/\/github.com\/massemanet\/eper$/;"	m
pkg_eper_name	deps/ranch/erlang.mk	/^pkg_eper_name = eper$/;"	m
pkg_eper_repo	deps/ranch/erlang.mk	/^pkg_eper_repo = https:\/\/github.com\/massemanet\/eper$/;"	m
pkg_epgsql_commit	deps/ranch/erlang.mk	/^pkg_epgsql_commit = master$/;"	m
pkg_epgsql_description	deps/ranch/erlang.mk	/^pkg_epgsql_description = Erlang PostgreSQL client library.$/;"	m
pkg_epgsql_fetch	deps/ranch/erlang.mk	/^pkg_epgsql_fetch = git$/;"	m
pkg_epgsql_homepage	deps/ranch/erlang.mk	/^pkg_epgsql_homepage = https:\/\/github.com\/epgsql\/epgsql$/;"	m
pkg_epgsql_name	deps/ranch/erlang.mk	/^pkg_epgsql_name = epgsql$/;"	m
pkg_epgsql_repo	deps/ranch/erlang.mk	/^pkg_epgsql_repo = https:\/\/github.com\/epgsql\/epgsql$/;"	m
pkg_episcina_commit	deps/ranch/erlang.mk	/^pkg_episcina_commit = master$/;"	m
pkg_episcina_description	deps/ranch/erlang.mk	/^pkg_episcina_description = A simple non intrusive resource pool for connections$/;"	m
pkg_episcina_fetch	deps/ranch/erlang.mk	/^pkg_episcina_fetch = git$/;"	m
pkg_episcina_homepage	deps/ranch/erlang.mk	/^pkg_episcina_homepage = https:\/\/github.com\/erlware\/episcina$/;"	m
pkg_episcina_name	deps/ranch/erlang.mk	/^pkg_episcina_name = episcina$/;"	m
pkg_episcina_repo	deps/ranch/erlang.mk	/^pkg_episcina_repo = https:\/\/github.com\/erlware\/episcina$/;"	m
pkg_eplot_commit	deps/ranch/erlang.mk	/^pkg_eplot_commit = master$/;"	m
pkg_eplot_description	deps/ranch/erlang.mk	/^pkg_eplot_description = A plot engine written in erlang.$/;"	m
pkg_eplot_fetch	deps/ranch/erlang.mk	/^pkg_eplot_fetch = git$/;"	m
pkg_eplot_homepage	deps/ranch/erlang.mk	/^pkg_eplot_homepage = https:\/\/github.com\/psyeugenic\/eplot$/;"	m
pkg_eplot_name	deps/ranch/erlang.mk	/^pkg_eplot_name = eplot$/;"	m
pkg_eplot_repo	deps/ranch/erlang.mk	/^pkg_eplot_repo = https:\/\/github.com\/psyeugenic\/eplot$/;"	m
pkg_epocxy_commit	deps/ranch/erlang.mk	/^pkg_epocxy_commit = master$/;"	m
pkg_epocxy_description	deps/ranch/erlang.mk	/^pkg_epocxy_description = Erlang Patterns of Concurrency$/;"	m
pkg_epocxy_fetch	deps/ranch/erlang.mk	/^pkg_epocxy_fetch = git$/;"	m
pkg_epocxy_homepage	deps/ranch/erlang.mk	/^pkg_epocxy_homepage = https:\/\/github.com\/duomark\/epocxy$/;"	m
pkg_epocxy_name	deps/ranch/erlang.mk	/^pkg_epocxy_name = epocxy$/;"	m
pkg_epocxy_repo	deps/ranch/erlang.mk	/^pkg_epocxy_repo = https:\/\/github.com\/duomark\/epocxy$/;"	m
pkg_epubnub_commit	deps/ranch/erlang.mk	/^pkg_epubnub_commit = master$/;"	m
pkg_epubnub_description	deps/ranch/erlang.mk	/^pkg_epubnub_description = Erlang PubNub API$/;"	m
pkg_epubnub_fetch	deps/ranch/erlang.mk	/^pkg_epubnub_fetch = git$/;"	m
pkg_epubnub_homepage	deps/ranch/erlang.mk	/^pkg_epubnub_homepage = https:\/\/github.com\/tsloughter\/epubnub$/;"	m
pkg_epubnub_name	deps/ranch/erlang.mk	/^pkg_epubnub_name = epubnub$/;"	m
pkg_epubnub_repo	deps/ranch/erlang.mk	/^pkg_epubnub_repo = https:\/\/github.com\/tsloughter\/epubnub$/;"	m
pkg_eqm_commit	deps/ranch/erlang.mk	/^pkg_eqm_commit = master$/;"	m
pkg_eqm_description	deps/ranch/erlang.mk	/^pkg_eqm_description = Erlang pub sub with supply-demand channels$/;"	m
pkg_eqm_fetch	deps/ranch/erlang.mk	/^pkg_eqm_fetch = git$/;"	m
pkg_eqm_homepage	deps/ranch/erlang.mk	/^pkg_eqm_homepage = https:\/\/github.com\/loucash\/eqm$/;"	m
pkg_eqm_name	deps/ranch/erlang.mk	/^pkg_eqm_name = eqm$/;"	m
pkg_eqm_repo	deps/ranch/erlang.mk	/^pkg_eqm_repo = https:\/\/github.com\/loucash\/eqm$/;"	m
pkg_eredis_commit	deps/ranch/erlang.mk	/^pkg_eredis_commit = master$/;"	m
pkg_eredis_description	deps/ranch/erlang.mk	/^pkg_eredis_description = Erlang Redis client$/;"	m
pkg_eredis_fetch	deps/ranch/erlang.mk	/^pkg_eredis_fetch = git$/;"	m
pkg_eredis_homepage	deps/ranch/erlang.mk	/^pkg_eredis_homepage = https:\/\/github.com\/wooga\/eredis$/;"	m
pkg_eredis_name	deps/ranch/erlang.mk	/^pkg_eredis_name = eredis$/;"	m
pkg_eredis_pool_commit	deps/ranch/erlang.mk	/^pkg_eredis_pool_commit = master$/;"	m
pkg_eredis_pool_description	deps/ranch/erlang.mk	/^pkg_eredis_pool_description = eredis_pool is Pool of Redis clients, using eredis and poolboy.$/;"	m
pkg_eredis_pool_fetch	deps/ranch/erlang.mk	/^pkg_eredis_pool_fetch = git$/;"	m
pkg_eredis_pool_homepage	deps/ranch/erlang.mk	/^pkg_eredis_pool_homepage = https:\/\/github.com\/hiroeorz\/eredis_pool$/;"	m
pkg_eredis_pool_name	deps/ranch/erlang.mk	/^pkg_eredis_pool_name = eredis_pool$/;"	m
pkg_eredis_pool_repo	deps/ranch/erlang.mk	/^pkg_eredis_pool_repo = https:\/\/github.com\/hiroeorz\/eredis_pool$/;"	m
pkg_eredis_repo	deps/ranch/erlang.mk	/^pkg_eredis_repo = https:\/\/github.com\/wooga\/eredis$/;"	m
pkg_erl_streams_commit	deps/ranch/erlang.mk	/^pkg_erl_streams_commit = master$/;"	m
pkg_erl_streams_description	deps/ranch/erlang.mk	/^pkg_erl_streams_description = Streams in Erlang$/;"	m
pkg_erl_streams_fetch	deps/ranch/erlang.mk	/^pkg_erl_streams_fetch = git$/;"	m
pkg_erl_streams_homepage	deps/ranch/erlang.mk	/^pkg_erl_streams_homepage = https:\/\/github.com\/epappas\/erl_streams$/;"	m
pkg_erl_streams_name	deps/ranch/erlang.mk	/^pkg_erl_streams_name = erl_streams$/;"	m
pkg_erl_streams_repo	deps/ranch/erlang.mk	/^pkg_erl_streams_repo = https:\/\/github.com\/epappas\/erl_streams$/;"	m
pkg_erlang_cep_commit	deps/ranch/erlang.mk	/^pkg_erlang_cep_commit = master$/;"	m
pkg_erlang_cep_description	deps/ranch/erlang.mk	/^pkg_erlang_cep_description = A basic CEP package written in erlang$/;"	m
pkg_erlang_cep_fetch	deps/ranch/erlang.mk	/^pkg_erlang_cep_fetch = git$/;"	m
pkg_erlang_cep_homepage	deps/ranch/erlang.mk	/^pkg_erlang_cep_homepage = https:\/\/github.com\/danmacklin\/erlang_cep$/;"	m
pkg_erlang_cep_name	deps/ranch/erlang.mk	/^pkg_erlang_cep_name = erlang_cep$/;"	m
pkg_erlang_cep_repo	deps/ranch/erlang.mk	/^pkg_erlang_cep_repo = https:\/\/github.com\/danmacklin\/erlang_cep$/;"	m
pkg_erlang_js_commit	deps/ranch/erlang.mk	/^pkg_erlang_js_commit = master$/;"	m
pkg_erlang_js_description	deps/ranch/erlang.mk	/^pkg_erlang_js_description = A linked-in driver for Erlang to Mozilla's Spidermonkey Javascript runtime.$/;"	m
pkg_erlang_js_fetch	deps/ranch/erlang.mk	/^pkg_erlang_js_fetch = git$/;"	m
pkg_erlang_js_homepage	deps/ranch/erlang.mk	/^pkg_erlang_js_homepage = https:\/\/github.com\/basho\/erlang_js$/;"	m
pkg_erlang_js_name	deps/ranch/erlang.mk	/^pkg_erlang_js_name = erlang_js$/;"	m
pkg_erlang_js_repo	deps/ranch/erlang.mk	/^pkg_erlang_js_repo = https:\/\/github.com\/basho\/erlang_js$/;"	m
pkg_erlang_localtime_commit	deps/ranch/erlang.mk	/^pkg_erlang_localtime_commit = master$/;"	m
pkg_erlang_localtime_description	deps/ranch/erlang.mk	/^pkg_erlang_localtime_description = Erlang library for conversion from one local time to another$/;"	m
pkg_erlang_localtime_fetch	deps/ranch/erlang.mk	/^pkg_erlang_localtime_fetch = git$/;"	m
pkg_erlang_localtime_homepage	deps/ranch/erlang.mk	/^pkg_erlang_localtime_homepage = https:\/\/github.com\/dmitryme\/erlang_localtime$/;"	m
pkg_erlang_localtime_name	deps/ranch/erlang.mk	/^pkg_erlang_localtime_name = erlang_localtime$/;"	m
pkg_erlang_localtime_repo	deps/ranch/erlang.mk	/^pkg_erlang_localtime_repo = https:\/\/github.com\/dmitryme\/erlang_localtime$/;"	m
pkg_erlang_smtp_commit	deps/ranch/erlang.mk	/^pkg_erlang_smtp_commit = master$/;"	m
pkg_erlang_smtp_description	deps/ranch/erlang.mk	/^pkg_erlang_smtp_description = Erlang SMTP and POP3 server code.$/;"	m
pkg_erlang_smtp_fetch	deps/ranch/erlang.mk	/^pkg_erlang_smtp_fetch = git$/;"	m
pkg_erlang_smtp_homepage	deps/ranch/erlang.mk	/^pkg_erlang_smtp_homepage = https:\/\/github.com\/tonyg\/erlang-smtp$/;"	m
pkg_erlang_smtp_name	deps/ranch/erlang.mk	/^pkg_erlang_smtp_name = erlang_smtp$/;"	m
pkg_erlang_smtp_repo	deps/ranch/erlang.mk	/^pkg_erlang_smtp_repo = https:\/\/github.com\/tonyg\/erlang-smtp$/;"	m
pkg_erlang_term_commit	deps/ranch/erlang.mk	/^pkg_erlang_term_commit = master$/;"	m
pkg_erlang_term_description	deps/ranch/erlang.mk	/^pkg_erlang_term_description = Erlang Term Info$/;"	m
pkg_erlang_term_fetch	deps/ranch/erlang.mk	/^pkg_erlang_term_fetch = git$/;"	m
pkg_erlang_term_homepage	deps/ranch/erlang.mk	/^pkg_erlang_term_homepage = https:\/\/github.com\/okeuday\/erlang_term$/;"	m
pkg_erlang_term_name	deps/ranch/erlang.mk	/^pkg_erlang_term_name = erlang_term$/;"	m
pkg_erlang_term_repo	deps/ranch/erlang.mk	/^pkg_erlang_term_repo = https:\/\/github.com\/okeuday\/erlang_term$/;"	m
pkg_erlastic_search_commit	deps/ranch/erlang.mk	/^pkg_erlastic_search_commit = master$/;"	m
pkg_erlastic_search_description	deps/ranch/erlang.mk	/^pkg_erlastic_search_description = An Erlang app for communicating with Elastic Search's rest interface.$/;"	m
pkg_erlastic_search_fetch	deps/ranch/erlang.mk	/^pkg_erlastic_search_fetch = git$/;"	m
pkg_erlastic_search_homepage	deps/ranch/erlang.mk	/^pkg_erlastic_search_homepage = https:\/\/github.com\/tsloughter\/erlastic_search$/;"	m
pkg_erlastic_search_name	deps/ranch/erlang.mk	/^pkg_erlastic_search_name = erlastic_search$/;"	m
pkg_erlastic_search_repo	deps/ranch/erlang.mk	/^pkg_erlastic_search_repo = https:\/\/github.com\/tsloughter\/erlastic_search$/;"	m
pkg_erlasticsearch_commit	deps/ranch/erlang.mk	/^pkg_erlasticsearch_commit = master$/;"	m
pkg_erlasticsearch_description	deps/ranch/erlang.mk	/^pkg_erlasticsearch_description = Erlang thrift interface to elastic_search$/;"	m
pkg_erlasticsearch_fetch	deps/ranch/erlang.mk	/^pkg_erlasticsearch_fetch = git$/;"	m
pkg_erlasticsearch_homepage	deps/ranch/erlang.mk	/^pkg_erlasticsearch_homepage = https:\/\/github.com\/dieswaytoofast\/erlasticsearch$/;"	m
pkg_erlasticsearch_name	deps/ranch/erlang.mk	/^pkg_erlasticsearch_name = erlasticsearch$/;"	m
pkg_erlasticsearch_repo	deps/ranch/erlang.mk	/^pkg_erlasticsearch_repo = https:\/\/github.com\/dieswaytoofast\/erlasticsearch$/;"	m
pkg_erlbrake_commit	deps/ranch/erlang.mk	/^pkg_erlbrake_commit = master$/;"	m
pkg_erlbrake_description	deps/ranch/erlang.mk	/^pkg_erlbrake_description = Erlang Airbrake notification client$/;"	m
pkg_erlbrake_fetch	deps/ranch/erlang.mk	/^pkg_erlbrake_fetch = git$/;"	m
pkg_erlbrake_homepage	deps/ranch/erlang.mk	/^pkg_erlbrake_homepage = https:\/\/github.com\/kenpratt\/erlbrake$/;"	m
pkg_erlbrake_name	deps/ranch/erlang.mk	/^pkg_erlbrake_name = erlbrake$/;"	m
pkg_erlbrake_repo	deps/ranch/erlang.mk	/^pkg_erlbrake_repo = https:\/\/github.com\/kenpratt\/erlbrake$/;"	m
pkg_erlcloud_commit	deps/ranch/erlang.mk	/^pkg_erlcloud_commit = master$/;"	m
pkg_erlcloud_description	deps/ranch/erlang.mk	/^pkg_erlcloud_description = Cloud Computing library for erlang (Amazon EC2, S3, SQS, SimpleDB, Mechanical Turk, ELB)$/;"	m
pkg_erlcloud_fetch	deps/ranch/erlang.mk	/^pkg_erlcloud_fetch = git$/;"	m
pkg_erlcloud_homepage	deps/ranch/erlang.mk	/^pkg_erlcloud_homepage = https:\/\/github.com\/gleber\/erlcloud$/;"	m
pkg_erlcloud_name	deps/ranch/erlang.mk	/^pkg_erlcloud_name = erlcloud$/;"	m
pkg_erlcloud_repo	deps/ranch/erlang.mk	/^pkg_erlcloud_repo = https:\/\/github.com\/gleber\/erlcloud$/;"	m
pkg_erlcron_commit	deps/ranch/erlang.mk	/^pkg_erlcron_commit = master$/;"	m
pkg_erlcron_description	deps/ranch/erlang.mk	/^pkg_erlcron_description = Erlang cronish system$/;"	m
pkg_erlcron_fetch	deps/ranch/erlang.mk	/^pkg_erlcron_fetch = git$/;"	m
pkg_erlcron_homepage	deps/ranch/erlang.mk	/^pkg_erlcron_homepage = https:\/\/github.com\/erlware\/erlcron$/;"	m
pkg_erlcron_name	deps/ranch/erlang.mk	/^pkg_erlcron_name = erlcron$/;"	m
pkg_erlcron_repo	deps/ranch/erlang.mk	/^pkg_erlcron_repo = https:\/\/github.com\/erlware\/erlcron$/;"	m
pkg_erldb_commit	deps/ranch/erlang.mk	/^pkg_erldb_commit = master$/;"	m
pkg_erldb_description	deps/ranch/erlang.mk	/^pkg_erldb_description = ORM (Object-relational mapping) application implemented in Erlang$/;"	m
pkg_erldb_fetch	deps/ranch/erlang.mk	/^pkg_erldb_fetch = git$/;"	m
pkg_erldb_homepage	deps/ranch/erlang.mk	/^pkg_erldb_homepage = http:\/\/erldb.org$/;"	m
pkg_erldb_name	deps/ranch/erlang.mk	/^pkg_erldb_name = erldb$/;"	m
pkg_erldb_repo	deps/ranch/erlang.mk	/^pkg_erldb_repo = https:\/\/github.com\/erldb\/erldb$/;"	m
pkg_erldis_commit	deps/ranch/erlang.mk	/^pkg_erldis_commit = master$/;"	m
pkg_erldis_description	deps/ranch/erlang.mk	/^pkg_erldis_description = redis erlang client library$/;"	m
pkg_erldis_fetch	deps/ranch/erlang.mk	/^pkg_erldis_fetch = git$/;"	m
pkg_erldis_homepage	deps/ranch/erlang.mk	/^pkg_erldis_homepage = https:\/\/github.com\/cstar\/erldis$/;"	m
pkg_erldis_name	deps/ranch/erlang.mk	/^pkg_erldis_name = erldis$/;"	m
pkg_erldis_repo	deps/ranch/erlang.mk	/^pkg_erldis_repo = https:\/\/github.com\/cstar\/erldis$/;"	m
pkg_erldns_commit	deps/ranch/erlang.mk	/^pkg_erldns_commit = master$/;"	m
pkg_erldns_description	deps/ranch/erlang.mk	/^pkg_erldns_description = DNS server, in erlang.$/;"	m
pkg_erldns_fetch	deps/ranch/erlang.mk	/^pkg_erldns_fetch = git$/;"	m
pkg_erldns_homepage	deps/ranch/erlang.mk	/^pkg_erldns_homepage = https:\/\/github.com\/aetrion\/erl-dns$/;"	m
pkg_erldns_name	deps/ranch/erlang.mk	/^pkg_erldns_name = erldns$/;"	m
pkg_erldns_repo	deps/ranch/erlang.mk	/^pkg_erldns_repo = https:\/\/github.com\/aetrion\/erl-dns$/;"	m
pkg_erldocker_commit	deps/ranch/erlang.mk	/^pkg_erldocker_commit = master$/;"	m
pkg_erldocker_description	deps/ranch/erlang.mk	/^pkg_erldocker_description = Docker Remote API client for Erlang$/;"	m
pkg_erldocker_fetch	deps/ranch/erlang.mk	/^pkg_erldocker_fetch = git$/;"	m
pkg_erldocker_homepage	deps/ranch/erlang.mk	/^pkg_erldocker_homepage = https:\/\/github.com\/proger\/erldocker$/;"	m
pkg_erldocker_name	deps/ranch/erlang.mk	/^pkg_erldocker_name = erldocker$/;"	m
pkg_erldocker_repo	deps/ranch/erlang.mk	/^pkg_erldocker_repo = https:\/\/github.com\/proger\/erldocker$/;"	m
pkg_erlfsmon_commit	deps/ranch/erlang.mk	/^pkg_erlfsmon_commit = master$/;"	m
pkg_erlfsmon_description	deps/ranch/erlang.mk	/^pkg_erlfsmon_description = Erlang filesystem event watcher for Linux and OSX$/;"	m
pkg_erlfsmon_fetch	deps/ranch/erlang.mk	/^pkg_erlfsmon_fetch = git$/;"	m
pkg_erlfsmon_homepage	deps/ranch/erlang.mk	/^pkg_erlfsmon_homepage = https:\/\/github.com\/proger\/erlfsmon$/;"	m
pkg_erlfsmon_name	deps/ranch/erlang.mk	/^pkg_erlfsmon_name = erlfsmon$/;"	m
pkg_erlfsmon_repo	deps/ranch/erlang.mk	/^pkg_erlfsmon_repo = https:\/\/github.com\/proger\/erlfsmon$/;"	m
pkg_erlgit_commit	deps/ranch/erlang.mk	/^pkg_erlgit_commit = master$/;"	m
pkg_erlgit_description	deps/ranch/erlang.mk	/^pkg_erlgit_description = Erlang convenience wrapper around git executable$/;"	m
pkg_erlgit_fetch	deps/ranch/erlang.mk	/^pkg_erlgit_fetch = git$/;"	m
pkg_erlgit_homepage	deps/ranch/erlang.mk	/^pkg_erlgit_homepage = https:\/\/github.com\/gleber\/erlgit$/;"	m
pkg_erlgit_name	deps/ranch/erlang.mk	/^pkg_erlgit_name = erlgit$/;"	m
pkg_erlgit_repo	deps/ranch/erlang.mk	/^pkg_erlgit_repo = https:\/\/github.com\/gleber\/erlgit$/;"	m
pkg_erlguten_commit	deps/ranch/erlang.mk	/^pkg_erlguten_commit = master$/;"	m
pkg_erlguten_description	deps/ranch/erlang.mk	/^pkg_erlguten_description = ErlGuten is a system for high-quality typesetting, written purely in Erlang.$/;"	m
pkg_erlguten_fetch	deps/ranch/erlang.mk	/^pkg_erlguten_fetch = git$/;"	m
pkg_erlguten_homepage	deps/ranch/erlang.mk	/^pkg_erlguten_homepage = https:\/\/github.com\/richcarl\/erlguten$/;"	m
pkg_erlguten_name	deps/ranch/erlang.mk	/^pkg_erlguten_name = erlguten$/;"	m
pkg_erlguten_repo	deps/ranch/erlang.mk	/^pkg_erlguten_repo = https:\/\/github.com\/richcarl\/erlguten$/;"	m
pkg_erlmc_commit	deps/ranch/erlang.mk	/^pkg_erlmc_commit = master$/;"	m
pkg_erlmc_description	deps/ranch/erlang.mk	/^pkg_erlmc_description = Erlang memcached binary protocol client$/;"	m
pkg_erlmc_fetch	deps/ranch/erlang.mk	/^pkg_erlmc_fetch = git$/;"	m
pkg_erlmc_homepage	deps/ranch/erlang.mk	/^pkg_erlmc_homepage = https:\/\/github.com\/jkvor\/erlmc$/;"	m
pkg_erlmc_name	deps/ranch/erlang.mk	/^pkg_erlmc_name = erlmc$/;"	m
pkg_erlmc_repo	deps/ranch/erlang.mk	/^pkg_erlmc_repo = https:\/\/github.com\/jkvor\/erlmc$/;"	m
pkg_erlmongo_commit	deps/ranch/erlang.mk	/^pkg_erlmongo_commit = master$/;"	m
pkg_erlmongo_description	deps/ranch/erlang.mk	/^pkg_erlmongo_description = Record based Erlang driver for MongoDB with gridfs support$/;"	m
pkg_erlmongo_fetch	deps/ranch/erlang.mk	/^pkg_erlmongo_fetch = git$/;"	m
pkg_erlmongo_homepage	deps/ranch/erlang.mk	/^pkg_erlmongo_homepage = https:\/\/github.com\/SergejJurecko\/erlmongo$/;"	m
pkg_erlmongo_name	deps/ranch/erlang.mk	/^pkg_erlmongo_name = erlmongo$/;"	m
pkg_erlmongo_repo	deps/ranch/erlang.mk	/^pkg_erlmongo_repo = https:\/\/github.com\/SergejJurecko\/erlmongo$/;"	m
pkg_erlog_commit	deps/ranch/erlang.mk	/^pkg_erlog_commit = master$/;"	m
pkg_erlog_description	deps/ranch/erlang.mk	/^pkg_erlog_description = Prolog interpreter in and for Erlang$/;"	m
pkg_erlog_fetch	deps/ranch/erlang.mk	/^pkg_erlog_fetch = git$/;"	m
pkg_erlog_homepage	deps/ranch/erlang.mk	/^pkg_erlog_homepage = https:\/\/github.com\/rvirding\/erlog$/;"	m
pkg_erlog_name	deps/ranch/erlang.mk	/^pkg_erlog_name = erlog$/;"	m
pkg_erlog_repo	deps/ranch/erlang.mk	/^pkg_erlog_repo = https:\/\/github.com\/rvirding\/erlog$/;"	m
pkg_erlpass_commit	deps/ranch/erlang.mk	/^pkg_erlpass_commit = master$/;"	m
pkg_erlpass_description	deps/ranch/erlang.mk	/^pkg_erlpass_description = A library to handle password hashing and changing in a safe manner, independent from any kind of storage whatsoever.$/;"	m
pkg_erlpass_fetch	deps/ranch/erlang.mk	/^pkg_erlpass_fetch = git$/;"	m
pkg_erlpass_homepage	deps/ranch/erlang.mk	/^pkg_erlpass_homepage = https:\/\/github.com\/ferd\/erlpass$/;"	m
pkg_erlpass_name	deps/ranch/erlang.mk	/^pkg_erlpass_name = erlpass$/;"	m
pkg_erlpass_repo	deps/ranch/erlang.mk	/^pkg_erlpass_repo = https:\/\/github.com\/ferd\/erlpass$/;"	m
pkg_erlport_commit	deps/ranch/erlang.mk	/^pkg_erlport_commit = master$/;"	m
pkg_erlport_description	deps/ranch/erlang.mk	/^pkg_erlport_description = ErlPort - connect Erlang to other languages$/;"	m
pkg_erlport_fetch	deps/ranch/erlang.mk	/^pkg_erlport_fetch = git$/;"	m
pkg_erlport_homepage	deps/ranch/erlang.mk	/^pkg_erlport_homepage = https:\/\/github.com\/hdima\/erlport$/;"	m
pkg_erlport_name	deps/ranch/erlang.mk	/^pkg_erlport_name = erlport$/;"	m
pkg_erlport_repo	deps/ranch/erlang.mk	/^pkg_erlport_repo = https:\/\/github.com\/hdima\/erlport$/;"	m
pkg_erlsh_commit	deps/ranch/erlang.mk	/^pkg_erlsh_commit = master$/;"	m
pkg_erlsh_description	deps/ranch/erlang.mk	/^pkg_erlsh_description = Erlang shell tools$/;"	m
pkg_erlsh_fetch	deps/ranch/erlang.mk	/^pkg_erlsh_fetch = git$/;"	m
pkg_erlsh_homepage	deps/ranch/erlang.mk	/^pkg_erlsh_homepage = https:\/\/github.com\/proger\/erlsh$/;"	m
pkg_erlsh_name	deps/ranch/erlang.mk	/^pkg_erlsh_name = erlsh$/;"	m
pkg_erlsh_repo	deps/ranch/erlang.mk	/^pkg_erlsh_repo = https:\/\/github.com\/proger\/erlsh$/;"	m
pkg_erlsha2_commit	deps/ranch/erlang.mk	/^pkg_erlsha2_commit = master$/;"	m
pkg_erlsha2_description	deps/ranch/erlang.mk	/^pkg_erlsha2_description = SHA-224, SHA-256, SHA-384, SHA-512 implemented in Erlang NIFs.$/;"	m
pkg_erlsha2_fetch	deps/ranch/erlang.mk	/^pkg_erlsha2_fetch = git$/;"	m
pkg_erlsha2_homepage	deps/ranch/erlang.mk	/^pkg_erlsha2_homepage = https:\/\/github.com\/vinoski\/erlsha2$/;"	m
pkg_erlsha2_name	deps/ranch/erlang.mk	/^pkg_erlsha2_name = erlsha2$/;"	m
pkg_erlsha2_repo	deps/ranch/erlang.mk	/^pkg_erlsha2_repo = https:\/\/github.com\/vinoski\/erlsha2$/;"	m
pkg_erlsom_commit	deps/ranch/erlang.mk	/^pkg_erlsom_commit = master$/;"	m
pkg_erlsom_description	deps/ranch/erlang.mk	/^pkg_erlsom_description = XML parser for Erlang$/;"	m
pkg_erlsom_fetch	deps/ranch/erlang.mk	/^pkg_erlsom_fetch = git$/;"	m
pkg_erlsom_homepage	deps/ranch/erlang.mk	/^pkg_erlsom_homepage = https:\/\/github.com\/willemdj\/erlsom$/;"	m
pkg_erlsom_name	deps/ranch/erlang.mk	/^pkg_erlsom_name = erlsom$/;"	m
pkg_erlsom_repo	deps/ranch/erlang.mk	/^pkg_erlsom_repo = https:\/\/github.com\/willemdj\/erlsom$/;"	m
pkg_erlubi_commit	deps/ranch/erlang.mk	/^pkg_erlubi_commit = master$/;"	m
pkg_erlubi_description	deps/ranch/erlang.mk	/^pkg_erlubi_description = Ubigraph Erlang Client (and Process Visualizer)$/;"	m
pkg_erlubi_fetch	deps/ranch/erlang.mk	/^pkg_erlubi_fetch = git$/;"	m
pkg_erlubi_homepage	deps/ranch/erlang.mk	/^pkg_erlubi_homepage = https:\/\/github.com\/krestenkrab\/erlubi$/;"	m
pkg_erlubi_name	deps/ranch/erlang.mk	/^pkg_erlubi_name = erlubi$/;"	m
pkg_erlubi_repo	deps/ranch/erlang.mk	/^pkg_erlubi_repo = https:\/\/github.com\/krestenkrab\/erlubi$/;"	m
pkg_erlvolt_commit	deps/ranch/erlang.mk	/^pkg_erlvolt_commit = master$/;"	m
pkg_erlvolt_description	deps/ranch/erlang.mk	/^pkg_erlvolt_description = VoltDB Erlang Client Driver$/;"	m
pkg_erlvolt_fetch	deps/ranch/erlang.mk	/^pkg_erlvolt_fetch = git$/;"	m
pkg_erlvolt_homepage	deps/ranch/erlang.mk	/^pkg_erlvolt_homepage = https:\/\/github.com\/VoltDB\/voltdb-client-erlang$/;"	m
pkg_erlvolt_name	deps/ranch/erlang.mk	/^pkg_erlvolt_name = erlvolt$/;"	m
pkg_erlvolt_repo	deps/ranch/erlang.mk	/^pkg_erlvolt_repo = https:\/\/github.com\/VoltDB\/voltdb-client-erlang$/;"	m
pkg_erlware_commons_commit	deps/ranch/erlang.mk	/^pkg_erlware_commons_commit = master$/;"	m
pkg_erlware_commons_description	deps/ranch/erlang.mk	/^pkg_erlware_commons_description = Erlware Commons is an Erlware project focused on all aspects of reusable Erlang components.$/;"	m
pkg_erlware_commons_fetch	deps/ranch/erlang.mk	/^pkg_erlware_commons_fetch = git$/;"	m
pkg_erlware_commons_homepage	deps/ranch/erlang.mk	/^pkg_erlware_commons_homepage = https:\/\/github.com\/erlware\/erlware_commons$/;"	m
pkg_erlware_commons_name	deps/ranch/erlang.mk	/^pkg_erlware_commons_name = erlware_commons$/;"	m
pkg_erlware_commons_repo	deps/ranch/erlang.mk	/^pkg_erlware_commons_repo = https:\/\/github.com\/erlware\/erlware_commons$/;"	m
pkg_erlydtl_commit	deps/ranch/erlang.mk	/^pkg_erlydtl_commit = master$/;"	m
pkg_erlydtl_description	deps/ranch/erlang.mk	/^pkg_erlydtl_description = Django Template Language for Erlang.$/;"	m
pkg_erlydtl_fetch	deps/ranch/erlang.mk	/^pkg_erlydtl_fetch = git$/;"	m
pkg_erlydtl_homepage	deps/ranch/erlang.mk	/^pkg_erlydtl_homepage = https:\/\/github.com\/erlydtl\/erlydtl$/;"	m
pkg_erlydtl_name	deps/ranch/erlang.mk	/^pkg_erlydtl_name = erlydtl$/;"	m
pkg_erlydtl_repo	deps/ranch/erlang.mk	/^pkg_erlydtl_repo = https:\/\/github.com\/erlydtl\/erlydtl$/;"	m
pkg_errd_commit	deps/ranch/erlang.mk	/^pkg_errd_commit = master$/;"	m
pkg_errd_description	deps/ranch/erlang.mk	/^pkg_errd_description = Erlang RRDTool library$/;"	m
pkg_errd_fetch	deps/ranch/erlang.mk	/^pkg_errd_fetch = git$/;"	m
pkg_errd_homepage	deps/ranch/erlang.mk	/^pkg_errd_homepage = https:\/\/github.com\/archaelus\/errd$/;"	m
pkg_errd_name	deps/ranch/erlang.mk	/^pkg_errd_name = errd$/;"	m
pkg_errd_repo	deps/ranch/erlang.mk	/^pkg_errd_repo = https:\/\/github.com\/archaelus\/errd$/;"	m
pkg_erserve_commit	deps/ranch/erlang.mk	/^pkg_erserve_commit = master$/;"	m
pkg_erserve_description	deps/ranch/erlang.mk	/^pkg_erserve_description = Erlang\/Rserve communication interface$/;"	m
pkg_erserve_fetch	deps/ranch/erlang.mk	/^pkg_erserve_fetch = git$/;"	m
pkg_erserve_homepage	deps/ranch/erlang.mk	/^pkg_erserve_homepage = https:\/\/github.com\/del\/erserve$/;"	m
pkg_erserve_name	deps/ranch/erlang.mk	/^pkg_erserve_name = erserve$/;"	m
pkg_erserve_repo	deps/ranch/erlang.mk	/^pkg_erserve_repo = https:\/\/github.com\/del\/erserve$/;"	m
pkg_erwa_commit	deps/ranch/erlang.mk	/^pkg_erwa_commit = master$/;"	m
pkg_erwa_description	deps/ranch/erlang.mk	/^pkg_erwa_description = A WAMP router and client written in Erlang.$/;"	m
pkg_erwa_fetch	deps/ranch/erlang.mk	/^pkg_erwa_fetch = git$/;"	m
pkg_erwa_homepage	deps/ranch/erlang.mk	/^pkg_erwa_homepage = https:\/\/github.com\/bwegh\/erwa$/;"	m
pkg_erwa_name	deps/ranch/erlang.mk	/^pkg_erwa_name = erwa$/;"	m
pkg_erwa_repo	deps/ranch/erlang.mk	/^pkg_erwa_repo = https:\/\/github.com\/bwegh\/erwa$/;"	m
pkg_espec_commit	deps/ranch/erlang.mk	/^pkg_espec_commit = master$/;"	m
pkg_espec_description	deps/ranch/erlang.mk	/^pkg_espec_description = ESpec: Behaviour driven development framework for Erlang$/;"	m
pkg_espec_fetch	deps/ranch/erlang.mk	/^pkg_espec_fetch = git$/;"	m
pkg_espec_homepage	deps/ranch/erlang.mk	/^pkg_espec_homepage = https:\/\/github.com\/lucaspiller\/espec$/;"	m
pkg_espec_name	deps/ranch/erlang.mk	/^pkg_espec_name = espec$/;"	m
pkg_espec_repo	deps/ranch/erlang.mk	/^pkg_espec_repo = https:\/\/github.com\/lucaspiller\/espec$/;"	m
pkg_estatsd_commit	deps/ranch/erlang.mk	/^pkg_estatsd_commit = master$/;"	m
pkg_estatsd_description	deps/ranch/erlang.mk	/^pkg_estatsd_description = Erlang stats aggregation app that periodically flushes data to graphite$/;"	m
pkg_estatsd_fetch	deps/ranch/erlang.mk	/^pkg_estatsd_fetch = git$/;"	m
pkg_estatsd_homepage	deps/ranch/erlang.mk	/^pkg_estatsd_homepage = https:\/\/github.com\/RJ\/estatsd$/;"	m
pkg_estatsd_name	deps/ranch/erlang.mk	/^pkg_estatsd_name = estatsd$/;"	m
pkg_estatsd_repo	deps/ranch/erlang.mk	/^pkg_estatsd_repo = https:\/\/github.com\/RJ\/estatsd$/;"	m
pkg_etap_commit	deps/ranch/erlang.mk	/^pkg_etap_commit = master$/;"	m
pkg_etap_description	deps/ranch/erlang.mk	/^pkg_etap_description = etap is a simple erlang testing library that provides TAP compliant output.$/;"	m
pkg_etap_fetch	deps/ranch/erlang.mk	/^pkg_etap_fetch = git$/;"	m
pkg_etap_homepage	deps/ranch/erlang.mk	/^pkg_etap_homepage = https:\/\/github.com\/ngerakines\/etap$/;"	m
pkg_etap_name	deps/ranch/erlang.mk	/^pkg_etap_name = etap$/;"	m
pkg_etap_repo	deps/ranch/erlang.mk	/^pkg_etap_repo = https:\/\/github.com\/ngerakines\/etap$/;"	m
pkg_etest_commit	deps/ranch/erlang.mk	/^pkg_etest_commit = master$/;"	m
pkg_etest_description	deps/ranch/erlang.mk	/^pkg_etest_description = A lightweight, convention over configuration test framework for Erlang$/;"	m
pkg_etest_fetch	deps/ranch/erlang.mk	/^pkg_etest_fetch = git$/;"	m
pkg_etest_homepage	deps/ranch/erlang.mk	/^pkg_etest_homepage = https:\/\/github.com\/wooga\/etest$/;"	m
pkg_etest_http_commit	deps/ranch/erlang.mk	/^pkg_etest_http_commit = master$/;"	m
pkg_etest_http_description	deps/ranch/erlang.mk	/^pkg_etest_http_description = etest Assertions around HTTP (client-side)$/;"	m
pkg_etest_http_fetch	deps/ranch/erlang.mk	/^pkg_etest_http_fetch = git$/;"	m
pkg_etest_http_homepage	deps/ranch/erlang.mk	/^pkg_etest_http_homepage = https:\/\/github.com\/wooga\/etest_http$/;"	m
pkg_etest_http_name	deps/ranch/erlang.mk	/^pkg_etest_http_name = etest_http$/;"	m
pkg_etest_http_repo	deps/ranch/erlang.mk	/^pkg_etest_http_repo = https:\/\/github.com\/wooga\/etest_http$/;"	m
pkg_etest_name	deps/ranch/erlang.mk	/^pkg_etest_name = etest$/;"	m
pkg_etest_repo	deps/ranch/erlang.mk	/^pkg_etest_repo = https:\/\/github.com\/wooga\/etest$/;"	m
pkg_etoml_commit	deps/ranch/erlang.mk	/^pkg_etoml_commit = master$/;"	m
pkg_etoml_description	deps/ranch/erlang.mk	/^pkg_etoml_description = TOML language erlang parser$/;"	m
pkg_etoml_fetch	deps/ranch/erlang.mk	/^pkg_etoml_fetch = git$/;"	m
pkg_etoml_homepage	deps/ranch/erlang.mk	/^pkg_etoml_homepage = https:\/\/github.com\/kalta\/etoml$/;"	m
pkg_etoml_name	deps/ranch/erlang.mk	/^pkg_etoml_name = etoml$/;"	m
pkg_etoml_repo	deps/ranch/erlang.mk	/^pkg_etoml_repo = https:\/\/github.com\/kalta\/etoml$/;"	m
pkg_eunit_commit	deps/ranch/erlang.mk	/^pkg_eunit_commit = master$/;"	m
pkg_eunit_description	deps/ranch/erlang.mk	/^pkg_eunit_description = The EUnit lightweight unit testing framework for Erlang - this is the canonical development repository.$/;"	m
pkg_eunit_fetch	deps/ranch/erlang.mk	/^pkg_eunit_fetch = git$/;"	m
pkg_eunit_formatters_commit	deps/ranch/erlang.mk	/^pkg_eunit_formatters_commit = master$/;"	m
pkg_eunit_formatters_description	deps/ranch/erlang.mk	/^pkg_eunit_formatters_description = Because eunit's output sucks. Let's make it better.$/;"	m
pkg_eunit_formatters_fetch	deps/ranch/erlang.mk	/^pkg_eunit_formatters_fetch = git$/;"	m
pkg_eunit_formatters_homepage	deps/ranch/erlang.mk	/^pkg_eunit_formatters_homepage = https:\/\/github.com\/seancribbs\/eunit_formatters$/;"	m
pkg_eunit_formatters_name	deps/ranch/erlang.mk	/^pkg_eunit_formatters_name = eunit_formatters$/;"	m
pkg_eunit_formatters_repo	deps/ranch/erlang.mk	/^pkg_eunit_formatters_repo = https:\/\/github.com\/seancribbs\/eunit_formatters$/;"	m
pkg_eunit_homepage	deps/ranch/erlang.mk	/^pkg_eunit_homepage = https:\/\/github.com\/richcarl\/eunit$/;"	m
pkg_eunit_name	deps/ranch/erlang.mk	/^pkg_eunit_name = eunit$/;"	m
pkg_eunit_repo	deps/ranch/erlang.mk	/^pkg_eunit_repo = https:\/\/github.com\/richcarl\/eunit$/;"	m
pkg_euthanasia_commit	deps/ranch/erlang.mk	/^pkg_euthanasia_commit = master$/;"	m
pkg_euthanasia_description	deps/ranch/erlang.mk	/^pkg_euthanasia_description = Merciful killer for your Erlang processes$/;"	m
pkg_euthanasia_fetch	deps/ranch/erlang.mk	/^pkg_euthanasia_fetch = git$/;"	m
pkg_euthanasia_homepage	deps/ranch/erlang.mk	/^pkg_euthanasia_homepage = https:\/\/github.com\/doubleyou\/euthanasia$/;"	m
pkg_euthanasia_name	deps/ranch/erlang.mk	/^pkg_euthanasia_name = euthanasia$/;"	m
pkg_euthanasia_repo	deps/ranch/erlang.mk	/^pkg_euthanasia_repo = https:\/\/github.com\/doubleyou\/euthanasia$/;"	m
pkg_evum_commit	deps/ranch/erlang.mk	/^pkg_evum_commit = master$/;"	m
pkg_evum_description	deps/ranch/erlang.mk	/^pkg_evum_description = Spawn Linux VMs as Erlang processes in the Erlang VM$/;"	m
pkg_evum_fetch	deps/ranch/erlang.mk	/^pkg_evum_fetch = git$/;"	m
pkg_evum_homepage	deps/ranch/erlang.mk	/^pkg_evum_homepage = https:\/\/github.com\/msantos\/evum$/;"	m
pkg_evum_name	deps/ranch/erlang.mk	/^pkg_evum_name = evum$/;"	m
pkg_evum_repo	deps/ranch/erlang.mk	/^pkg_evum_repo = https:\/\/github.com\/msantos\/evum$/;"	m
pkg_exec_commit	deps/ranch/erlang.mk	/^pkg_exec_commit = master$/;"	m
pkg_exec_description	deps/ranch/erlang.mk	/^pkg_exec_description = Execute and control OS processes from Erlang\/OTP.$/;"	m
pkg_exec_fetch	deps/ranch/erlang.mk	/^pkg_exec_fetch = git$/;"	m
pkg_exec_homepage	deps/ranch/erlang.mk	/^pkg_exec_homepage = http:\/\/saleyn.github.com\/erlexec$/;"	m
pkg_exec_name	deps/ranch/erlang.mk	/^pkg_exec_name = erlexec$/;"	m
pkg_exec_repo	deps/ranch/erlang.mk	/^pkg_exec_repo = https:\/\/github.com\/saleyn\/erlexec$/;"	m
pkg_exml_commit	deps/ranch/erlang.mk	/^pkg_exml_commit = master$/;"	m
pkg_exml_description	deps/ranch/erlang.mk	/^pkg_exml_description = XML parsing library in Erlang$/;"	m
pkg_exml_fetch	deps/ranch/erlang.mk	/^pkg_exml_fetch = git$/;"	m
pkg_exml_homepage	deps/ranch/erlang.mk	/^pkg_exml_homepage = https:\/\/github.com\/paulgray\/exml$/;"	m
pkg_exml_name	deps/ranch/erlang.mk	/^pkg_exml_name = exml$/;"	m
pkg_exml_repo	deps/ranch/erlang.mk	/^pkg_exml_repo = https:\/\/github.com\/paulgray\/exml$/;"	m
pkg_exometer_commit	deps/ranch/erlang.mk	/^pkg_exometer_commit = master$/;"	m
pkg_exometer_description	deps/ranch/erlang.mk	/^pkg_exometer_description = Basic measurement objects and probe behavior$/;"	m
pkg_exometer_fetch	deps/ranch/erlang.mk	/^pkg_exometer_fetch = git$/;"	m
pkg_exometer_homepage	deps/ranch/erlang.mk	/^pkg_exometer_homepage = https:\/\/github.com\/Feuerlabs\/exometer$/;"	m
pkg_exometer_name	deps/ranch/erlang.mk	/^pkg_exometer_name = exometer$/;"	m
pkg_exometer_repo	deps/ranch/erlang.mk	/^pkg_exometer_repo = https:\/\/github.com\/Feuerlabs\/exometer$/;"	m
pkg_exs1024_commit	deps/ranch/erlang.mk	/^pkg_exs1024_commit = master$/;"	m
pkg_exs1024_description	deps/ranch/erlang.mk	/^pkg_exs1024_description = Xorshift1024star pseudo random number generator for Erlang.$/;"	m
pkg_exs1024_fetch	deps/ranch/erlang.mk	/^pkg_exs1024_fetch = git$/;"	m
pkg_exs1024_homepage	deps/ranch/erlang.mk	/^pkg_exs1024_homepage = https:\/\/github.com\/jj1bdx\/exs1024$/;"	m
pkg_exs1024_name	deps/ranch/erlang.mk	/^pkg_exs1024_name = exs1024$/;"	m
pkg_exs1024_repo	deps/ranch/erlang.mk	/^pkg_exs1024_repo = https:\/\/github.com\/jj1bdx\/exs1024$/;"	m
pkg_exs64_commit	deps/ranch/erlang.mk	/^pkg_exs64_commit = master$/;"	m
pkg_exs64_description	deps/ranch/erlang.mk	/^pkg_exs64_description = Xorshift64star pseudo random number generator for Erlang.$/;"	m
pkg_exs64_fetch	deps/ranch/erlang.mk	/^pkg_exs64_fetch = git$/;"	m
pkg_exs64_homepage	deps/ranch/erlang.mk	/^pkg_exs64_homepage = https:\/\/github.com\/jj1bdx\/exs64$/;"	m
pkg_exs64_name	deps/ranch/erlang.mk	/^pkg_exs64_name = exs64$/;"	m
pkg_exs64_repo	deps/ranch/erlang.mk	/^pkg_exs64_repo = https:\/\/github.com\/jj1bdx\/exs64$/;"	m
pkg_exsplus116_commit	deps/ranch/erlang.mk	/^pkg_exsplus116_commit = master$/;"	m
pkg_exsplus116_description	deps/ranch/erlang.mk	/^pkg_exsplus116_description = Xorshift116plus for Erlang$/;"	m
pkg_exsplus116_fetch	deps/ranch/erlang.mk	/^pkg_exsplus116_fetch = git$/;"	m
pkg_exsplus116_homepage	deps/ranch/erlang.mk	/^pkg_exsplus116_homepage = https:\/\/github.com\/jj1bdx\/exsplus116$/;"	m
pkg_exsplus116_name	deps/ranch/erlang.mk	/^pkg_exsplus116_name = exsplus116$/;"	m
pkg_exsplus116_repo	deps/ranch/erlang.mk	/^pkg_exsplus116_repo = https:\/\/github.com\/jj1bdx\/exsplus116$/;"	m
pkg_exsplus128_commit	deps/ranch/erlang.mk	/^pkg_exsplus128_commit = master$/;"	m
pkg_exsplus128_description	deps/ranch/erlang.mk	/^pkg_exsplus128_description = Xorshift128plus pseudo random number generator for Erlang.$/;"	m
pkg_exsplus128_fetch	deps/ranch/erlang.mk	/^pkg_exsplus128_fetch = git$/;"	m
pkg_exsplus128_homepage	deps/ranch/erlang.mk	/^pkg_exsplus128_homepage = https:\/\/github.com\/jj1bdx\/exsplus128$/;"	m
pkg_exsplus128_name	deps/ranch/erlang.mk	/^pkg_exsplus128_name = exsplus128$/;"	m
pkg_exsplus128_repo	deps/ranch/erlang.mk	/^pkg_exsplus128_repo = https:\/\/github.com\/jj1bdx\/exsplus128$/;"	m
pkg_ezmq_commit	deps/ranch/erlang.mk	/^pkg_ezmq_commit = master$/;"	m
pkg_ezmq_description	deps/ranch/erlang.mk	/^pkg_ezmq_description = zMQ implemented in Erlang$/;"	m
pkg_ezmq_fetch	deps/ranch/erlang.mk	/^pkg_ezmq_fetch = git$/;"	m
pkg_ezmq_homepage	deps/ranch/erlang.mk	/^pkg_ezmq_homepage = https:\/\/github.com\/RoadRunnr\/ezmq$/;"	m
pkg_ezmq_name	deps/ranch/erlang.mk	/^pkg_ezmq_name = ezmq$/;"	m
pkg_ezmq_repo	deps/ranch/erlang.mk	/^pkg_ezmq_repo = https:\/\/github.com\/RoadRunnr\/ezmq$/;"	m
pkg_ezmtp_commit	deps/ranch/erlang.mk	/^pkg_ezmtp_commit = master$/;"	m
pkg_ezmtp_description	deps/ranch/erlang.mk	/^pkg_ezmtp_description = ZMTP protocol in pure Erlang.$/;"	m
pkg_ezmtp_fetch	deps/ranch/erlang.mk	/^pkg_ezmtp_fetch = git$/;"	m
pkg_ezmtp_homepage	deps/ranch/erlang.mk	/^pkg_ezmtp_homepage = https:\/\/github.com\/a13x\/ezmtp$/;"	m
pkg_ezmtp_name	deps/ranch/erlang.mk	/^pkg_ezmtp_name = ezmtp$/;"	m
pkg_ezmtp_repo	deps/ranch/erlang.mk	/^pkg_ezmtp_repo = https:\/\/github.com\/a13x\/ezmtp$/;"	m
pkg_fast_disk_log_commit	deps/ranch/erlang.mk	/^pkg_fast_disk_log_commit = master$/;"	m
pkg_fast_disk_log_description	deps/ranch/erlang.mk	/^pkg_fast_disk_log_description = Pool-based asynchronous Erlang disk logger$/;"	m
pkg_fast_disk_log_fetch	deps/ranch/erlang.mk	/^pkg_fast_disk_log_fetch = git$/;"	m
pkg_fast_disk_log_homepage	deps/ranch/erlang.mk	/^pkg_fast_disk_log_homepage = https:\/\/github.com\/lpgauth\/fast_disk_log$/;"	m
pkg_fast_disk_log_name	deps/ranch/erlang.mk	/^pkg_fast_disk_log_name = fast_disk_log$/;"	m
pkg_fast_disk_log_repo	deps/ranch/erlang.mk	/^pkg_fast_disk_log_repo = https:\/\/github.com\/lpgauth\/fast_disk_log$/;"	m
pkg_feeder_commit	deps/ranch/erlang.mk	/^pkg_feeder_commit = master$/;"	m
pkg_feeder_description	deps/ranch/erlang.mk	/^pkg_feeder_description = Stream parse RSS and Atom formatted XML feeds.$/;"	m
pkg_feeder_fetch	deps/ranch/erlang.mk	/^pkg_feeder_fetch = git$/;"	m
pkg_feeder_homepage	deps/ranch/erlang.mk	/^pkg_feeder_homepage = https:\/\/github.com\/michaelnisi\/feeder$/;"	m
pkg_feeder_name	deps/ranch/erlang.mk	/^pkg_feeder_name = feeder$/;"	m
pkg_feeder_repo	deps/ranch/erlang.mk	/^pkg_feeder_repo = https:\/\/github.com\/michaelnisi\/feeder$/;"	m
pkg_find_crate_commit	deps/ranch/erlang.mk	/^pkg_find_crate_commit = master$/;"	m
pkg_find_crate_description	deps/ranch/erlang.mk	/^pkg_find_crate_description = Find Rust libs and exes in Erlang application priv directory$/;"	m
pkg_find_crate_fetch	deps/ranch/erlang.mk	/^pkg_find_crate_fetch = git$/;"	m
pkg_find_crate_homepage	deps/ranch/erlang.mk	/^pkg_find_crate_homepage = https:\/\/github.com\/goertzenator\/find_crate$/;"	m
pkg_find_crate_name	deps/ranch/erlang.mk	/^pkg_find_crate_name = find_crate$/;"	m
pkg_find_crate_repo	deps/ranch/erlang.mk	/^pkg_find_crate_repo = https:\/\/github.com\/goertzenator\/find_crate$/;"	m
pkg_fix_commit	deps/ranch/erlang.mk	/^pkg_fix_commit = master$/;"	m
pkg_fix_description	deps/ranch/erlang.mk	/^pkg_fix_description = http:\/\/fixprotocol.org\/ implementation.$/;"	m
pkg_fix_fetch	deps/ranch/erlang.mk	/^pkg_fix_fetch = git$/;"	m
pkg_fix_homepage	deps/ranch/erlang.mk	/^pkg_fix_homepage = https:\/\/github.com\/maxlapshin\/fix$/;"	m
pkg_fix_name	deps/ranch/erlang.mk	/^pkg_fix_name = fix$/;"	m
pkg_fix_repo	deps/ranch/erlang.mk	/^pkg_fix_repo = https:\/\/github.com\/maxlapshin\/fix$/;"	m
pkg_flower_commit	deps/ranch/erlang.mk	/^pkg_flower_commit = master$/;"	m
pkg_flower_description	deps/ranch/erlang.mk	/^pkg_flower_description = FlowER - a Erlang OpenFlow development platform$/;"	m
pkg_flower_fetch	deps/ranch/erlang.mk	/^pkg_flower_fetch = git$/;"	m
pkg_flower_homepage	deps/ranch/erlang.mk	/^pkg_flower_homepage = https:\/\/github.com\/travelping\/flower$/;"	m
pkg_flower_name	deps/ranch/erlang.mk	/^pkg_flower_name = flower$/;"	m
pkg_flower_repo	deps/ranch/erlang.mk	/^pkg_flower_repo = https:\/\/github.com\/travelping\/flower$/;"	m
pkg_fn_commit	deps/ranch/erlang.mk	/^pkg_fn_commit = master$/;"	m
pkg_fn_description	deps/ranch/erlang.mk	/^pkg_fn_description = Function utilities for Erlang$/;"	m
pkg_fn_fetch	deps/ranch/erlang.mk	/^pkg_fn_fetch = git$/;"	m
pkg_fn_homepage	deps/ranch/erlang.mk	/^pkg_fn_homepage = https:\/\/github.com\/reiddraper\/fn$/;"	m
pkg_fn_name	deps/ranch/erlang.mk	/^pkg_fn_name = fn$/;"	m
pkg_fn_repo	deps/ranch/erlang.mk	/^pkg_fn_repo = https:\/\/github.com\/reiddraper\/fn$/;"	m
pkg_folsom_commit	deps/ranch/erlang.mk	/^pkg_folsom_commit = master$/;"	m
pkg_folsom_cowboy_commit	deps/ranch/erlang.mk	/^pkg_folsom_cowboy_commit = master$/;"	m
pkg_folsom_cowboy_description	deps/ranch/erlang.mk	/^pkg_folsom_cowboy_description = A Cowboy based Folsom HTTP Wrapper.$/;"	m
pkg_folsom_cowboy_fetch	deps/ranch/erlang.mk	/^pkg_folsom_cowboy_fetch = git$/;"	m
pkg_folsom_cowboy_homepage	deps/ranch/erlang.mk	/^pkg_folsom_cowboy_homepage = https:\/\/github.com\/boundary\/folsom_cowboy$/;"	m
pkg_folsom_cowboy_name	deps/ranch/erlang.mk	/^pkg_folsom_cowboy_name = folsom_cowboy$/;"	m
pkg_folsom_cowboy_repo	deps/ranch/erlang.mk	/^pkg_folsom_cowboy_repo = https:\/\/github.com\/boundary\/folsom_cowboy$/;"	m
pkg_folsom_description	deps/ranch/erlang.mk	/^pkg_folsom_description = Expose Erlang Events and Metrics$/;"	m
pkg_folsom_fetch	deps/ranch/erlang.mk	/^pkg_folsom_fetch = git$/;"	m
pkg_folsom_homepage	deps/ranch/erlang.mk	/^pkg_folsom_homepage = https:\/\/github.com\/boundary\/folsom$/;"	m
pkg_folsom_name	deps/ranch/erlang.mk	/^pkg_folsom_name = folsom$/;"	m
pkg_folsom_repo	deps/ranch/erlang.mk	/^pkg_folsom_repo = https:\/\/github.com\/boundary\/folsom$/;"	m
pkg_folsomite_commit	deps/ranch/erlang.mk	/^pkg_folsomite_commit = master$/;"	m
pkg_folsomite_description	deps/ranch/erlang.mk	/^pkg_folsomite_description = blow up your graphite \/ riemann server with folsom metrics$/;"	m
pkg_folsomite_fetch	deps/ranch/erlang.mk	/^pkg_folsomite_fetch = git$/;"	m
pkg_folsomite_homepage	deps/ranch/erlang.mk	/^pkg_folsomite_homepage = https:\/\/github.com\/campanja\/folsomite$/;"	m
pkg_folsomite_name	deps/ranch/erlang.mk	/^pkg_folsomite_name = folsomite$/;"	m
pkg_folsomite_repo	deps/ranch/erlang.mk	/^pkg_folsomite_repo = https:\/\/github.com\/campanja\/folsomite$/;"	m
pkg_fs_commit	deps/ranch/erlang.mk	/^pkg_fs_commit = master$/;"	m
pkg_fs_description	deps/ranch/erlang.mk	/^pkg_fs_description = Erlang FileSystem Listener$/;"	m
pkg_fs_fetch	deps/ranch/erlang.mk	/^pkg_fs_fetch = git$/;"	m
pkg_fs_homepage	deps/ranch/erlang.mk	/^pkg_fs_homepage = https:\/\/github.com\/synrc\/fs$/;"	m
pkg_fs_name	deps/ranch/erlang.mk	/^pkg_fs_name = fs$/;"	m
pkg_fs_repo	deps/ranch/erlang.mk	/^pkg_fs_repo = https:\/\/github.com\/synrc\/fs$/;"	m
pkg_fuse_commit	deps/ranch/erlang.mk	/^pkg_fuse_commit = master$/;"	m
pkg_fuse_description	deps/ranch/erlang.mk	/^pkg_fuse_description = A Circuit Breaker for Erlang$/;"	m
pkg_fuse_fetch	deps/ranch/erlang.mk	/^pkg_fuse_fetch = git$/;"	m
pkg_fuse_homepage	deps/ranch/erlang.mk	/^pkg_fuse_homepage = https:\/\/github.com\/jlouis\/fuse$/;"	m
pkg_fuse_name	deps/ranch/erlang.mk	/^pkg_fuse_name = fuse$/;"	m
pkg_fuse_repo	deps/ranch/erlang.mk	/^pkg_fuse_repo = https:\/\/github.com\/jlouis\/fuse$/;"	m
pkg_gcm_commit	deps/ranch/erlang.mk	/^pkg_gcm_commit = master$/;"	m
pkg_gcm_description	deps/ranch/erlang.mk	/^pkg_gcm_description = An Erlang application for Google Cloud Messaging$/;"	m
pkg_gcm_fetch	deps/ranch/erlang.mk	/^pkg_gcm_fetch = git$/;"	m
pkg_gcm_homepage	deps/ranch/erlang.mk	/^pkg_gcm_homepage = https:\/\/github.com\/pdincau\/gcm-erlang$/;"	m
pkg_gcm_name	deps/ranch/erlang.mk	/^pkg_gcm_name = gcm$/;"	m
pkg_gcm_repo	deps/ranch/erlang.mk	/^pkg_gcm_repo = https:\/\/github.com\/pdincau\/gcm-erlang$/;"	m
pkg_gcprof_commit	deps/ranch/erlang.mk	/^pkg_gcprof_commit = master$/;"	m
pkg_gcprof_description	deps/ranch/erlang.mk	/^pkg_gcprof_description = Garbage Collection profiler for Erlang$/;"	m
pkg_gcprof_fetch	deps/ranch/erlang.mk	/^pkg_gcprof_fetch = git$/;"	m
pkg_gcprof_homepage	deps/ranch/erlang.mk	/^pkg_gcprof_homepage = https:\/\/github.com\/knutin\/gcprof$/;"	m
pkg_gcprof_name	deps/ranch/erlang.mk	/^pkg_gcprof_name = gcprof$/;"	m
pkg_gcprof_repo	deps/ranch/erlang.mk	/^pkg_gcprof_repo = https:\/\/github.com\/knutin\/gcprof$/;"	m
pkg_geas_commit	deps/ranch/erlang.mk	/^pkg_geas_commit = master$/;"	m
pkg_geas_description	deps/ranch/erlang.mk	/^pkg_geas_description = Guess Erlang Application Scattering$/;"	m
pkg_geas_fetch	deps/ranch/erlang.mk	/^pkg_geas_fetch = git$/;"	m
pkg_geas_homepage	deps/ranch/erlang.mk	/^pkg_geas_homepage = https:\/\/github.com\/crownedgrouse\/geas$/;"	m
pkg_geas_name	deps/ranch/erlang.mk	/^pkg_geas_name = geas$/;"	m
pkg_geas_repo	deps/ranch/erlang.mk	/^pkg_geas_repo = https:\/\/github.com\/crownedgrouse\/geas$/;"	m
pkg_geef_commit	deps/ranch/erlang.mk	/^pkg_geef_commit = master$/;"	m
pkg_geef_description	deps/ranch/erlang.mk	/^pkg_geef_description = Git NEEEEF (Erlang NIF)$/;"	m
pkg_geef_fetch	deps/ranch/erlang.mk	/^pkg_geef_fetch = git$/;"	m
pkg_geef_homepage	deps/ranch/erlang.mk	/^pkg_geef_homepage = https:\/\/github.com\/carlosmn\/geef$/;"	m
pkg_geef_name	deps/ranch/erlang.mk	/^pkg_geef_name = geef$/;"	m
pkg_geef_repo	deps/ranch/erlang.mk	/^pkg_geef_repo = https:\/\/github.com\/carlosmn\/geef$/;"	m
pkg_gen_coap_commit	deps/ranch/erlang.mk	/^pkg_gen_coap_commit = master$/;"	m
pkg_gen_coap_description	deps/ranch/erlang.mk	/^pkg_gen_coap_description = Generic Erlang CoAP Client\/Server$/;"	m
pkg_gen_coap_fetch	deps/ranch/erlang.mk	/^pkg_gen_coap_fetch = git$/;"	m
pkg_gen_coap_homepage	deps/ranch/erlang.mk	/^pkg_gen_coap_homepage = https:\/\/github.com\/gotthardp\/gen_coap$/;"	m
pkg_gen_coap_name	deps/ranch/erlang.mk	/^pkg_gen_coap_name = gen_coap$/;"	m
pkg_gen_coap_repo	deps/ranch/erlang.mk	/^pkg_gen_coap_repo = https:\/\/github.com\/gotthardp\/gen_coap$/;"	m
pkg_gen_cycle_commit	deps/ranch/erlang.mk	/^pkg_gen_cycle_commit = develop$/;"	m
pkg_gen_cycle_description	deps/ranch/erlang.mk	/^pkg_gen_cycle_description = Simple, generic OTP behaviour for recurring tasks$/;"	m
pkg_gen_cycle_fetch	deps/ranch/erlang.mk	/^pkg_gen_cycle_fetch = git$/;"	m
pkg_gen_cycle_homepage	deps/ranch/erlang.mk	/^pkg_gen_cycle_homepage = https:\/\/github.com\/aerosol\/gen_cycle$/;"	m
pkg_gen_cycle_name	deps/ranch/erlang.mk	/^pkg_gen_cycle_name = gen_cycle$/;"	m
pkg_gen_cycle_repo	deps/ranch/erlang.mk	/^pkg_gen_cycle_repo = https:\/\/github.com\/aerosol\/gen_cycle$/;"	m
pkg_gen_icmp_commit	deps/ranch/erlang.mk	/^pkg_gen_icmp_commit = master$/;"	m
pkg_gen_icmp_description	deps/ranch/erlang.mk	/^pkg_gen_icmp_description = Erlang interface to ICMP sockets$/;"	m
pkg_gen_icmp_fetch	deps/ranch/erlang.mk	/^pkg_gen_icmp_fetch = git$/;"	m
pkg_gen_icmp_homepage	deps/ranch/erlang.mk	/^pkg_gen_icmp_homepage = https:\/\/github.com\/msantos\/gen_icmp$/;"	m
pkg_gen_icmp_name	deps/ranch/erlang.mk	/^pkg_gen_icmp_name = gen_icmp$/;"	m
pkg_gen_icmp_repo	deps/ranch/erlang.mk	/^pkg_gen_icmp_repo = https:\/\/github.com\/msantos\/gen_icmp$/;"	m
pkg_gen_nb_server_commit	deps/ranch/erlang.mk	/^pkg_gen_nb_server_commit = master$/;"	m
pkg_gen_nb_server_description	deps/ranch/erlang.mk	/^pkg_gen_nb_server_description = OTP behavior for writing non-blocking servers$/;"	m
pkg_gen_nb_server_fetch	deps/ranch/erlang.mk	/^pkg_gen_nb_server_fetch = git$/;"	m
pkg_gen_nb_server_homepage	deps/ranch/erlang.mk	/^pkg_gen_nb_server_homepage = https:\/\/github.com\/kevsmith\/gen_nb_server$/;"	m
pkg_gen_nb_server_name	deps/ranch/erlang.mk	/^pkg_gen_nb_server_name = gen_nb_server$/;"	m
pkg_gen_nb_server_repo	deps/ranch/erlang.mk	/^pkg_gen_nb_server_repo = https:\/\/github.com\/kevsmith\/gen_nb_server$/;"	m
pkg_gen_paxos_commit	deps/ranch/erlang.mk	/^pkg_gen_paxos_commit = master$/;"	m
pkg_gen_paxos_description	deps/ranch/erlang.mk	/^pkg_gen_paxos_description = An Erlang\/OTP-style implementation of the PAXOS distributed consensus protocol$/;"	m
pkg_gen_paxos_fetch	deps/ranch/erlang.mk	/^pkg_gen_paxos_fetch = git$/;"	m
pkg_gen_paxos_homepage	deps/ranch/erlang.mk	/^pkg_gen_paxos_homepage = https:\/\/github.com\/gburd\/gen_paxos$/;"	m
pkg_gen_paxos_name	deps/ranch/erlang.mk	/^pkg_gen_paxos_name = gen_paxos$/;"	m
pkg_gen_paxos_repo	deps/ranch/erlang.mk	/^pkg_gen_paxos_repo = https:\/\/github.com\/gburd\/gen_paxos$/;"	m
pkg_gen_smtp_commit	deps/ranch/erlang.mk	/^pkg_gen_smtp_commit = master$/;"	m
pkg_gen_smtp_description	deps/ranch/erlang.mk	/^pkg_gen_smtp_description = A generic Erlang SMTP server and client that can be extended via callback modules$/;"	m
pkg_gen_smtp_fetch	deps/ranch/erlang.mk	/^pkg_gen_smtp_fetch = git$/;"	m
pkg_gen_smtp_homepage	deps/ranch/erlang.mk	/^pkg_gen_smtp_homepage = https:\/\/github.com\/Vagabond\/gen_smtp$/;"	m
pkg_gen_smtp_name	deps/ranch/erlang.mk	/^pkg_gen_smtp_name = gen_smtp$/;"	m
pkg_gen_smtp_repo	deps/ranch/erlang.mk	/^pkg_gen_smtp_repo = https:\/\/github.com\/Vagabond\/gen_smtp$/;"	m
pkg_gen_tracker_commit	deps/ranch/erlang.mk	/^pkg_gen_tracker_commit = master$/;"	m
pkg_gen_tracker_description	deps/ranch/erlang.mk	/^pkg_gen_tracker_description = supervisor with ets handling of children and their metadata$/;"	m
pkg_gen_tracker_fetch	deps/ranch/erlang.mk	/^pkg_gen_tracker_fetch = git$/;"	m
pkg_gen_tracker_homepage	deps/ranch/erlang.mk	/^pkg_gen_tracker_homepage = https:\/\/github.com\/erlyvideo\/gen_tracker$/;"	m
pkg_gen_tracker_name	deps/ranch/erlang.mk	/^pkg_gen_tracker_name = gen_tracker$/;"	m
pkg_gen_tracker_repo	deps/ranch/erlang.mk	/^pkg_gen_tracker_repo = https:\/\/github.com\/erlyvideo\/gen_tracker$/;"	m
pkg_gen_unix_commit	deps/ranch/erlang.mk	/^pkg_gen_unix_commit = master$/;"	m
pkg_gen_unix_description	deps/ranch/erlang.mk	/^pkg_gen_unix_description = Erlang Unix socket interface$/;"	m
pkg_gen_unix_fetch	deps/ranch/erlang.mk	/^pkg_gen_unix_fetch = git$/;"	m
pkg_gen_unix_homepage	deps/ranch/erlang.mk	/^pkg_gen_unix_homepage = https:\/\/github.com\/msantos\/gen_unix$/;"	m
pkg_gen_unix_name	deps/ranch/erlang.mk	/^pkg_gen_unix_name = gen_unix$/;"	m
pkg_gen_unix_repo	deps/ranch/erlang.mk	/^pkg_gen_unix_repo = https:\/\/github.com\/msantos\/gen_unix$/;"	m
pkg_geode_commit	deps/ranch/erlang.mk	/^pkg_geode_commit = master$/;"	m
pkg_geode_description	deps/ranch/erlang.mk	/^pkg_geode_description = geohash\/proximity lookup in pure, uncut erlang.$/;"	m
pkg_geode_fetch	deps/ranch/erlang.mk	/^pkg_geode_fetch = git$/;"	m
pkg_geode_homepage	deps/ranch/erlang.mk	/^pkg_geode_homepage = https:\/\/github.com\/bradfordw\/geode$/;"	m
pkg_geode_name	deps/ranch/erlang.mk	/^pkg_geode_name = geode$/;"	m
pkg_geode_repo	deps/ranch/erlang.mk	/^pkg_geode_repo = https:\/\/github.com\/bradfordw\/geode$/;"	m
pkg_getopt_commit	deps/ranch/erlang.mk	/^pkg_getopt_commit = master$/;"	m
pkg_getopt_description	deps/ranch/erlang.mk	/^pkg_getopt_description = Module to parse command line arguments using the GNU getopt syntax$/;"	m
pkg_getopt_fetch	deps/ranch/erlang.mk	/^pkg_getopt_fetch = git$/;"	m
pkg_getopt_homepage	deps/ranch/erlang.mk	/^pkg_getopt_homepage = https:\/\/github.com\/jcomellas\/getopt$/;"	m
pkg_getopt_name	deps/ranch/erlang.mk	/^pkg_getopt_name = getopt$/;"	m
pkg_getopt_repo	deps/ranch/erlang.mk	/^pkg_getopt_repo = https:\/\/github.com\/jcomellas\/getopt$/;"	m
pkg_gettext_commit	deps/ranch/erlang.mk	/^pkg_gettext_commit = master$/;"	m
pkg_gettext_description	deps/ranch/erlang.mk	/^pkg_gettext_description = Erlang internationalization library.$/;"	m
pkg_gettext_fetch	deps/ranch/erlang.mk	/^pkg_gettext_fetch = git$/;"	m
pkg_gettext_homepage	deps/ranch/erlang.mk	/^pkg_gettext_homepage = https:\/\/github.com\/etnt\/gettext$/;"	m
pkg_gettext_name	deps/ranch/erlang.mk	/^pkg_gettext_name = gettext$/;"	m
pkg_gettext_repo	deps/ranch/erlang.mk	/^pkg_gettext_repo = https:\/\/github.com\/etnt\/gettext$/;"	m
pkg_giallo_commit	deps/ranch/erlang.mk	/^pkg_giallo_commit = master$/;"	m
pkg_giallo_description	deps/ranch/erlang.mk	/^pkg_giallo_description = Small and flexible web framework on top of Cowboy$/;"	m
pkg_giallo_fetch	deps/ranch/erlang.mk	/^pkg_giallo_fetch = git$/;"	m
pkg_giallo_homepage	deps/ranch/erlang.mk	/^pkg_giallo_homepage = https:\/\/github.com\/kivra\/giallo$/;"	m
pkg_giallo_name	deps/ranch/erlang.mk	/^pkg_giallo_name = giallo$/;"	m
pkg_giallo_repo	deps/ranch/erlang.mk	/^pkg_giallo_repo = https:\/\/github.com\/kivra\/giallo$/;"	m
pkg_gin_commit	deps/ranch/erlang.mk	/^pkg_gin_commit = master$/;"	m
pkg_gin_description	deps/ranch/erlang.mk	/^pkg_gin_description = The guards  and  for Erlang parse_transform$/;"	m
pkg_gin_fetch	deps/ranch/erlang.mk	/^pkg_gin_fetch = git$/;"	m
pkg_gin_homepage	deps/ranch/erlang.mk	/^pkg_gin_homepage = https:\/\/github.com\/mad-cocktail\/gin$/;"	m
pkg_gin_name	deps/ranch/erlang.mk	/^pkg_gin_name = gin$/;"	m
pkg_gin_repo	deps/ranch/erlang.mk	/^pkg_gin_repo = https:\/\/github.com\/mad-cocktail\/gin$/;"	m
pkg_gitty_commit	deps/ranch/erlang.mk	/^pkg_gitty_commit = master$/;"	m
pkg_gitty_description	deps/ranch/erlang.mk	/^pkg_gitty_description = Git access in erlang$/;"	m
pkg_gitty_fetch	deps/ranch/erlang.mk	/^pkg_gitty_fetch = git$/;"	m
pkg_gitty_homepage	deps/ranch/erlang.mk	/^pkg_gitty_homepage = https:\/\/github.com\/maxlapshin\/gitty$/;"	m
pkg_gitty_name	deps/ranch/erlang.mk	/^pkg_gitty_name = gitty$/;"	m
pkg_gitty_repo	deps/ranch/erlang.mk	/^pkg_gitty_repo = https:\/\/github.com\/maxlapshin\/gitty$/;"	m
pkg_gold_fever_commit	deps/ranch/erlang.mk	/^pkg_gold_fever_commit = master$/;"	m
pkg_gold_fever_description	deps/ranch/erlang.mk	/^pkg_gold_fever_description = A Treasure Hunt for Erlangers$/;"	m
pkg_gold_fever_fetch	deps/ranch/erlang.mk	/^pkg_gold_fever_fetch = git$/;"	m
pkg_gold_fever_homepage	deps/ranch/erlang.mk	/^pkg_gold_fever_homepage = https:\/\/github.com\/inaka\/gold_fever$/;"	m
pkg_gold_fever_name	deps/ranch/erlang.mk	/^pkg_gold_fever_name = gold_fever$/;"	m
pkg_gold_fever_repo	deps/ranch/erlang.mk	/^pkg_gold_fever_repo = https:\/\/github.com\/inaka\/gold_fever$/;"	m
pkg_gossiperl_commit	deps/ranch/erlang.mk	/^pkg_gossiperl_commit = master$/;"	m
pkg_gossiperl_description	deps/ranch/erlang.mk	/^pkg_gossiperl_description = Gossip middleware in Erlang$/;"	m
pkg_gossiperl_fetch	deps/ranch/erlang.mk	/^pkg_gossiperl_fetch = git$/;"	m
pkg_gossiperl_homepage	deps/ranch/erlang.mk	/^pkg_gossiperl_homepage = http:\/\/gossiperl.com\/$/;"	m
pkg_gossiperl_name	deps/ranch/erlang.mk	/^pkg_gossiperl_name = gossiperl$/;"	m
pkg_gossiperl_repo	deps/ranch/erlang.mk	/^pkg_gossiperl_repo = https:\/\/github.com\/gossiperl\/gossiperl$/;"	m
pkg_gpb_commit	deps/ranch/erlang.mk	/^pkg_gpb_commit = master$/;"	m
pkg_gpb_description	deps/ranch/erlang.mk	/^pkg_gpb_description = A Google Protobuf implementation for Erlang$/;"	m
pkg_gpb_fetch	deps/ranch/erlang.mk	/^pkg_gpb_fetch = git$/;"	m
pkg_gpb_homepage	deps/ranch/erlang.mk	/^pkg_gpb_homepage = https:\/\/github.com\/tomas-abrahamsson\/gpb$/;"	m
pkg_gpb_name	deps/ranch/erlang.mk	/^pkg_gpb_name = gpb$/;"	m
pkg_gpb_repo	deps/ranch/erlang.mk	/^pkg_gpb_repo = https:\/\/github.com\/tomas-abrahamsson\/gpb$/;"	m
pkg_gproc_commit	deps/ranch/erlang.mk	/^pkg_gproc_commit = master$/;"	m
pkg_gproc_description	deps/ranch/erlang.mk	/^pkg_gproc_description = Extended process registry for Erlang$/;"	m
pkg_gproc_fetch	deps/ranch/erlang.mk	/^pkg_gproc_fetch = git$/;"	m
pkg_gproc_homepage	deps/ranch/erlang.mk	/^pkg_gproc_homepage = https:\/\/github.com\/uwiger\/gproc$/;"	m
pkg_gproc_name	deps/ranch/erlang.mk	/^pkg_gproc_name = gproc$/;"	m
pkg_gproc_repo	deps/ranch/erlang.mk	/^pkg_gproc_repo = https:\/\/github.com\/uwiger\/gproc$/;"	m
pkg_grapherl_commit	deps/ranch/erlang.mk	/^pkg_grapherl_commit = master$/;"	m
pkg_grapherl_description	deps/ranch/erlang.mk	/^pkg_grapherl_description = Create graphs of Erlang systems and programs$/;"	m
pkg_grapherl_fetch	deps/ranch/erlang.mk	/^pkg_grapherl_fetch = git$/;"	m
pkg_grapherl_homepage	deps/ranch/erlang.mk	/^pkg_grapherl_homepage = https:\/\/github.com\/eproxus\/grapherl$/;"	m
pkg_grapherl_name	deps/ranch/erlang.mk	/^pkg_grapherl_name = grapherl$/;"	m
pkg_grapherl_repo	deps/ranch/erlang.mk	/^pkg_grapherl_repo = https:\/\/github.com\/eproxus\/grapherl$/;"	m
pkg_gun_commit	deps/ranch/erlang.mk	/^pkg_gun_commit = master$/;"	m
pkg_gun_description	deps/ranch/erlang.mk	/^pkg_gun_description = Asynchronous SPDY, HTTP and Websocket client written in Erlang.$/;"	m
pkg_gun_fetch	deps/ranch/erlang.mk	/^pkg_gun_fetch = git$/;"	m
pkg_gun_homepage	deps/ranch/erlang.mk	/^pkg_gun_homepage = http\/\/ninenines.eu$/;"	m
pkg_gun_name	deps/ranch/erlang.mk	/^pkg_gun_name = gun$/;"	m
pkg_gun_repo	deps/ranch/erlang.mk	/^pkg_gun_repo = https:\/\/github.com\/ninenines\/gun$/;"	m
pkg_gut_commit	deps/ranch/erlang.mk	/^pkg_gut_commit = master$/;"	m
pkg_gut_description	deps/ranch/erlang.mk	/^pkg_gut_description = gut is a template printing, aka scaffolding, tool for Erlang. Like rails generate or yeoman$/;"	m
pkg_gut_fetch	deps/ranch/erlang.mk	/^pkg_gut_fetch = git$/;"	m
pkg_gut_homepage	deps/ranch/erlang.mk	/^pkg_gut_homepage = https:\/\/github.com\/unbalancedparentheses\/gut$/;"	m
pkg_gut_name	deps/ranch/erlang.mk	/^pkg_gut_name = gut$/;"	m
pkg_gut_repo	deps/ranch/erlang.mk	/^pkg_gut_repo = https:\/\/github.com\/unbalancedparentheses\/gut$/;"	m
pkg_hackney_commit	deps/ranch/erlang.mk	/^pkg_hackney_commit = master$/;"	m
pkg_hackney_description	deps/ranch/erlang.mk	/^pkg_hackney_description = simple HTTP client in Erlang$/;"	m
pkg_hackney_fetch	deps/ranch/erlang.mk	/^pkg_hackney_fetch = git$/;"	m
pkg_hackney_homepage	deps/ranch/erlang.mk	/^pkg_hackney_homepage = https:\/\/github.com\/benoitc\/hackney$/;"	m
pkg_hackney_name	deps/ranch/erlang.mk	/^pkg_hackney_name = hackney$/;"	m
pkg_hackney_repo	deps/ranch/erlang.mk	/^pkg_hackney_repo = https:\/\/github.com\/benoitc\/hackney$/;"	m
pkg_hamcrest_commit	deps/ranch/erlang.mk	/^pkg_hamcrest_commit = master$/;"	m
pkg_hamcrest_description	deps/ranch/erlang.mk	/^pkg_hamcrest_description = Erlang port of Hamcrest$/;"	m
pkg_hamcrest_fetch	deps/ranch/erlang.mk	/^pkg_hamcrest_fetch = git$/;"	m
pkg_hamcrest_homepage	deps/ranch/erlang.mk	/^pkg_hamcrest_homepage = https:\/\/github.com\/hyperthunk\/hamcrest-erlang$/;"	m
pkg_hamcrest_name	deps/ranch/erlang.mk	/^pkg_hamcrest_name = hamcrest$/;"	m
pkg_hamcrest_repo	deps/ranch/erlang.mk	/^pkg_hamcrest_repo = https:\/\/github.com\/hyperthunk\/hamcrest-erlang$/;"	m
pkg_hanoidb_commit	deps/ranch/erlang.mk	/^pkg_hanoidb_commit = master$/;"	m
pkg_hanoidb_description	deps/ranch/erlang.mk	/^pkg_hanoidb_description = Erlang LSM BTree Storage$/;"	m
pkg_hanoidb_fetch	deps/ranch/erlang.mk	/^pkg_hanoidb_fetch = git$/;"	m
pkg_hanoidb_homepage	deps/ranch/erlang.mk	/^pkg_hanoidb_homepage = https:\/\/github.com\/krestenkrab\/hanoidb$/;"	m
pkg_hanoidb_name	deps/ranch/erlang.mk	/^pkg_hanoidb_name = hanoidb$/;"	m
pkg_hanoidb_repo	deps/ranch/erlang.mk	/^pkg_hanoidb_repo = https:\/\/github.com\/krestenkrab\/hanoidb$/;"	m
pkg_hottub_commit	deps/ranch/erlang.mk	/^pkg_hottub_commit = master$/;"	m
pkg_hottub_description	deps/ranch/erlang.mk	/^pkg_hottub_description = Permanent Erlang Worker Pool$/;"	m
pkg_hottub_fetch	deps/ranch/erlang.mk	/^pkg_hottub_fetch = git$/;"	m
pkg_hottub_homepage	deps/ranch/erlang.mk	/^pkg_hottub_homepage = https:\/\/github.com\/bfrog\/hottub$/;"	m
pkg_hottub_name	deps/ranch/erlang.mk	/^pkg_hottub_name = hottub$/;"	m
pkg_hottub_repo	deps/ranch/erlang.mk	/^pkg_hottub_repo = https:\/\/github.com\/bfrog\/hottub$/;"	m
pkg_hpack_commit	deps/ranch/erlang.mk	/^pkg_hpack_commit = master$/;"	m
pkg_hpack_description	deps/ranch/erlang.mk	/^pkg_hpack_description = HPACK Implementation for Erlang$/;"	m
pkg_hpack_fetch	deps/ranch/erlang.mk	/^pkg_hpack_fetch = git$/;"	m
pkg_hpack_homepage	deps/ranch/erlang.mk	/^pkg_hpack_homepage = https:\/\/github.com\/joedevivo\/hpack$/;"	m
pkg_hpack_name	deps/ranch/erlang.mk	/^pkg_hpack_name = hpack$/;"	m
pkg_hpack_repo	deps/ranch/erlang.mk	/^pkg_hpack_repo = https:\/\/github.com\/joedevivo\/hpack$/;"	m
pkg_hyper_commit	deps/ranch/erlang.mk	/^pkg_hyper_commit = master$/;"	m
pkg_hyper_description	deps/ranch/erlang.mk	/^pkg_hyper_description = Erlang implementation of HyperLogLog$/;"	m
pkg_hyper_fetch	deps/ranch/erlang.mk	/^pkg_hyper_fetch = git$/;"	m
pkg_hyper_homepage	deps/ranch/erlang.mk	/^pkg_hyper_homepage = https:\/\/github.com\/GameAnalytics\/hyper$/;"	m
pkg_hyper_name	deps/ranch/erlang.mk	/^pkg_hyper_name = hyper$/;"	m
pkg_hyper_repo	deps/ranch/erlang.mk	/^pkg_hyper_repo = https:\/\/github.com\/GameAnalytics\/hyper$/;"	m
pkg_i18n_commit	deps/ranch/erlang.mk	/^pkg_i18n_commit = master$/;"	m
pkg_i18n_description	deps/ranch/erlang.mk	/^pkg_i18n_description = International components for unicode from Erlang (unicode, date, string, number, format, locale, localization, transliteration, icu4e)$/;"	m
pkg_i18n_fetch	deps/ranch/erlang.mk	/^pkg_i18n_fetch = git$/;"	m
pkg_i18n_homepage	deps/ranch/erlang.mk	/^pkg_i18n_homepage = https:\/\/github.com\/erlang-unicode\/i18n$/;"	m
pkg_i18n_name	deps/ranch/erlang.mk	/^pkg_i18n_name = i18n$/;"	m
pkg_i18n_repo	deps/ranch/erlang.mk	/^pkg_i18n_repo = https:\/\/github.com\/erlang-unicode\/i18n$/;"	m
pkg_ibrowse_commit	deps/ranch/erlang.mk	/^pkg_ibrowse_commit = master$/;"	m
pkg_ibrowse_description	deps/ranch/erlang.mk	/^pkg_ibrowse_description = Erlang HTTP client$/;"	m
pkg_ibrowse_fetch	deps/ranch/erlang.mk	/^pkg_ibrowse_fetch = git$/;"	m
pkg_ibrowse_homepage	deps/ranch/erlang.mk	/^pkg_ibrowse_homepage = https:\/\/github.com\/cmullaparthi\/ibrowse$/;"	m
pkg_ibrowse_name	deps/ranch/erlang.mk	/^pkg_ibrowse_name = ibrowse$/;"	m
pkg_ibrowse_repo	deps/ranch/erlang.mk	/^pkg_ibrowse_repo = https:\/\/github.com\/cmullaparthi\/ibrowse$/;"	m
pkg_ierlang_commit	deps/ranch/erlang.mk	/^pkg_ierlang_commit = master$/;"	m
pkg_ierlang_description	deps/ranch/erlang.mk	/^pkg_ierlang_description = An Erlang language kernel for IPython.$/;"	m
pkg_ierlang_fetch	deps/ranch/erlang.mk	/^pkg_ierlang_fetch = git$/;"	m
pkg_ierlang_homepage	deps/ranch/erlang.mk	/^pkg_ierlang_homepage = https:\/\/github.com\/robbielynch\/ierlang$/;"	m
pkg_ierlang_name	deps/ranch/erlang.mk	/^pkg_ierlang_name = ierlang$/;"	m
pkg_ierlang_repo	deps/ranch/erlang.mk	/^pkg_ierlang_repo = https:\/\/github.com\/robbielynch\/ierlang$/;"	m
pkg_iota_commit	deps/ranch/erlang.mk	/^pkg_iota_commit = master$/;"	m
pkg_iota_description	deps/ranch/erlang.mk	/^pkg_iota_description = iota (Inter-dependency Objective Testing Apparatus) - a tool to enforce clean separation of responsibilities in Erlang code$/;"	m
pkg_iota_fetch	deps/ranch/erlang.mk	/^pkg_iota_fetch = git$/;"	m
pkg_iota_homepage	deps/ranch/erlang.mk	/^pkg_iota_homepage = https:\/\/github.com\/jpgneves\/iota$/;"	m
pkg_iota_name	deps/ranch/erlang.mk	/^pkg_iota_name = iota$/;"	m
pkg_iota_repo	deps/ranch/erlang.mk	/^pkg_iota_repo = https:\/\/github.com\/jpgneves\/iota$/;"	m
pkg_irc_lib_commit	deps/ranch/erlang.mk	/^pkg_irc_lib_commit = master$/;"	m
pkg_irc_lib_description	deps/ranch/erlang.mk	/^pkg_irc_lib_description = Erlang irc client library$/;"	m
pkg_irc_lib_fetch	deps/ranch/erlang.mk	/^pkg_irc_lib_fetch = git$/;"	m
pkg_irc_lib_homepage	deps/ranch/erlang.mk	/^pkg_irc_lib_homepage = https:\/\/github.com\/OtpChatBot\/irc_lib$/;"	m
pkg_irc_lib_name	deps/ranch/erlang.mk	/^pkg_irc_lib_name = irc_lib$/;"	m
pkg_irc_lib_repo	deps/ranch/erlang.mk	/^pkg_irc_lib_repo = https:\/\/github.com\/OtpChatBot\/irc_lib$/;"	m
pkg_ircd_commit	deps/ranch/erlang.mk	/^pkg_ircd_commit = master$/;"	m
pkg_ircd_description	deps/ranch/erlang.mk	/^pkg_ircd_description = A pluggable IRC daemon application\/library for Erlang.$/;"	m
pkg_ircd_fetch	deps/ranch/erlang.mk	/^pkg_ircd_fetch = git$/;"	m
pkg_ircd_homepage	deps/ranch/erlang.mk	/^pkg_ircd_homepage = https:\/\/github.com\/tonyg\/erlang-ircd$/;"	m
pkg_ircd_name	deps/ranch/erlang.mk	/^pkg_ircd_name = ircd$/;"	m
pkg_ircd_repo	deps/ranch/erlang.mk	/^pkg_ircd_repo = https:\/\/github.com\/tonyg\/erlang-ircd$/;"	m
pkg_iris_commit	deps/ranch/erlang.mk	/^pkg_iris_commit = master$/;"	m
pkg_iris_description	deps/ranch/erlang.mk	/^pkg_iris_description = Iris Erlang binding$/;"	m
pkg_iris_fetch	deps/ranch/erlang.mk	/^pkg_iris_fetch = git$/;"	m
pkg_iris_homepage	deps/ranch/erlang.mk	/^pkg_iris_homepage = https:\/\/github.com\/project-iris\/iris-erl$/;"	m
pkg_iris_name	deps/ranch/erlang.mk	/^pkg_iris_name = iris$/;"	m
pkg_iris_repo	deps/ranch/erlang.mk	/^pkg_iris_repo = https:\/\/github.com\/project-iris\/iris-erl$/;"	m
pkg_iso8601_commit	deps/ranch/erlang.mk	/^pkg_iso8601_commit = master$/;"	m
pkg_iso8601_description	deps/ranch/erlang.mk	/^pkg_iso8601_description = Erlang ISO 8601 date formatter\/parser$/;"	m
pkg_iso8601_fetch	deps/ranch/erlang.mk	/^pkg_iso8601_fetch = git$/;"	m
pkg_iso8601_homepage	deps/ranch/erlang.mk	/^pkg_iso8601_homepage = https:\/\/github.com\/seansawyer\/erlang_iso8601$/;"	m
pkg_iso8601_name	deps/ranch/erlang.mk	/^pkg_iso8601_name = iso8601$/;"	m
pkg_iso8601_repo	deps/ranch/erlang.mk	/^pkg_iso8601_repo = https:\/\/github.com\/seansawyer\/erlang_iso8601$/;"	m
pkg_jamdb_sybase_commit	deps/ranch/erlang.mk	/^pkg_jamdb_sybase_commit = master$/;"	m
pkg_jamdb_sybase_description	deps/ranch/erlang.mk	/^pkg_jamdb_sybase_description = Erlang driver for SAP Sybase ASE$/;"	m
pkg_jamdb_sybase_fetch	deps/ranch/erlang.mk	/^pkg_jamdb_sybase_fetch = git$/;"	m
pkg_jamdb_sybase_homepage	deps/ranch/erlang.mk	/^pkg_jamdb_sybase_homepage = https:\/\/github.com\/erlangbureau\/jamdb_sybase$/;"	m
pkg_jamdb_sybase_name	deps/ranch/erlang.mk	/^pkg_jamdb_sybase_name = jamdb_sybase$/;"	m
pkg_jamdb_sybase_repo	deps/ranch/erlang.mk	/^pkg_jamdb_sybase_repo = https:\/\/github.com\/erlangbureau\/jamdb_sybase$/;"	m
pkg_jerg_commit	deps/ranch/erlang.mk	/^pkg_jerg_commit = master$/;"	m
pkg_jerg_description	deps/ranch/erlang.mk	/^pkg_jerg_description = JSON Schema to Erlang Records Generator$/;"	m
pkg_jerg_fetch	deps/ranch/erlang.mk	/^pkg_jerg_fetch = git$/;"	m
pkg_jerg_homepage	deps/ranch/erlang.mk	/^pkg_jerg_homepage = https:\/\/github.com\/ddossot\/jerg$/;"	m
pkg_jerg_name	deps/ranch/erlang.mk	/^pkg_jerg_name = jerg$/;"	m
pkg_jerg_repo	deps/ranch/erlang.mk	/^pkg_jerg_repo = https:\/\/github.com\/ddossot\/jerg$/;"	m
pkg_jesse_commit	deps/ranch/erlang.mk	/^pkg_jesse_commit = master$/;"	m
pkg_jesse_description	deps/ranch/erlang.mk	/^pkg_jesse_description = jesse (JSon Schema Erlang) is an implementation of a json schema validator for Erlang.$/;"	m
pkg_jesse_fetch	deps/ranch/erlang.mk	/^pkg_jesse_fetch = git$/;"	m
pkg_jesse_homepage	deps/ranch/erlang.mk	/^pkg_jesse_homepage = https:\/\/github.com\/for-GET\/jesse$/;"	m
pkg_jesse_name	deps/ranch/erlang.mk	/^pkg_jesse_name = jesse$/;"	m
pkg_jesse_repo	deps/ranch/erlang.mk	/^pkg_jesse_repo = https:\/\/github.com\/for-GET\/jesse$/;"	m
pkg_jiffy_commit	deps/ranch/erlang.mk	/^pkg_jiffy_commit = master$/;"	m
pkg_jiffy_description	deps/ranch/erlang.mk	/^pkg_jiffy_description = JSON NIFs for Erlang.$/;"	m
pkg_jiffy_fetch	deps/ranch/erlang.mk	/^pkg_jiffy_fetch = git$/;"	m
pkg_jiffy_homepage	deps/ranch/erlang.mk	/^pkg_jiffy_homepage = https:\/\/github.com\/davisp\/jiffy$/;"	m
pkg_jiffy_name	deps/ranch/erlang.mk	/^pkg_jiffy_name = jiffy$/;"	m
pkg_jiffy_repo	deps/ranch/erlang.mk	/^pkg_jiffy_repo = https:\/\/github.com\/davisp\/jiffy$/;"	m
pkg_jiffy_v_commit	deps/ranch/erlang.mk	/^pkg_jiffy_v_commit = master$/;"	m
pkg_jiffy_v_description	deps/ranch/erlang.mk	/^pkg_jiffy_v_description = JSON validation utility$/;"	m
pkg_jiffy_v_fetch	deps/ranch/erlang.mk	/^pkg_jiffy_v_fetch = git$/;"	m
pkg_jiffy_v_homepage	deps/ranch/erlang.mk	/^pkg_jiffy_v_homepage = https:\/\/github.com\/shizzard\/jiffy-v$/;"	m
pkg_jiffy_v_name	deps/ranch/erlang.mk	/^pkg_jiffy_v_name = jiffy_v$/;"	m
pkg_jiffy_v_repo	deps/ranch/erlang.mk	/^pkg_jiffy_v_repo = https:\/\/github.com\/shizzard\/jiffy-v$/;"	m
pkg_jobs_commit	deps/ranch/erlang.mk	/^pkg_jobs_commit = master$/;"	m
pkg_jobs_description	deps/ranch/erlang.mk	/^pkg_jobs_description = a Job scheduler for load regulation$/;"	m
pkg_jobs_fetch	deps/ranch/erlang.mk	/^pkg_jobs_fetch = git$/;"	m
pkg_jobs_homepage	deps/ranch/erlang.mk	/^pkg_jobs_homepage = https:\/\/github.com\/esl\/jobs$/;"	m
pkg_jobs_name	deps/ranch/erlang.mk	/^pkg_jobs_name = jobs$/;"	m
pkg_jobs_repo	deps/ranch/erlang.mk	/^pkg_jobs_repo = https:\/\/github.com\/esl\/jobs$/;"	m
pkg_joxa_commit	deps/ranch/erlang.mk	/^pkg_joxa_commit = master$/;"	m
pkg_joxa_description	deps/ranch/erlang.mk	/^pkg_joxa_description = A Modern Lisp for the Erlang VM$/;"	m
pkg_joxa_fetch	deps/ranch/erlang.mk	/^pkg_joxa_fetch = git$/;"	m
pkg_joxa_homepage	deps/ranch/erlang.mk	/^pkg_joxa_homepage = https:\/\/github.com\/joxa\/joxa$/;"	m
pkg_joxa_name	deps/ranch/erlang.mk	/^pkg_joxa_name = joxa$/;"	m
pkg_joxa_repo	deps/ranch/erlang.mk	/^pkg_joxa_repo = https:\/\/github.com\/joxa\/joxa$/;"	m
pkg_json_commit	deps/ranch/erlang.mk	/^pkg_json_commit = master$/;"	m
pkg_json_description	deps/ranch/erlang.mk	/^pkg_json_description = a high level json library for erlang (17.0+)$/;"	m
pkg_json_fetch	deps/ranch/erlang.mk	/^pkg_json_fetch = git$/;"	m
pkg_json_homepage	deps/ranch/erlang.mk	/^pkg_json_homepage = https:\/\/github.com\/talentdeficit\/json$/;"	m
pkg_json_name	deps/ranch/erlang.mk	/^pkg_json_name = json$/;"	m
pkg_json_rec_commit	deps/ranch/erlang.mk	/^pkg_json_rec_commit = master$/;"	m
pkg_json_rec_description	deps/ranch/erlang.mk	/^pkg_json_rec_description = JSON to erlang record$/;"	m
pkg_json_rec_fetch	deps/ranch/erlang.mk	/^pkg_json_rec_fetch = git$/;"	m
pkg_json_rec_homepage	deps/ranch/erlang.mk	/^pkg_json_rec_homepage = https:\/\/github.com\/justinkirby\/json_rec$/;"	m
pkg_json_rec_name	deps/ranch/erlang.mk	/^pkg_json_rec_name = json_rec$/;"	m
pkg_json_rec_repo	deps/ranch/erlang.mk	/^pkg_json_rec_repo = https:\/\/github.com\/justinkirby\/json_rec$/;"	m
pkg_json_repo	deps/ranch/erlang.mk	/^pkg_json_repo = https:\/\/github.com\/talentdeficit\/json$/;"	m
pkg_jsone_commit	deps/ranch/erlang.mk	/^pkg_jsone_commit = master$/;"	m
pkg_jsone_description	deps/ranch/erlang.mk	/^pkg_jsone_description = An Erlang library for encoding, decoding JSON data.$/;"	m
pkg_jsone_fetch	deps/ranch/erlang.mk	/^pkg_jsone_fetch = git$/;"	m
pkg_jsone_homepage	deps/ranch/erlang.mk	/^pkg_jsone_homepage = https:\/\/github.com\/sile\/jsone.git$/;"	m
pkg_jsone_name	deps/ranch/erlang.mk	/^pkg_jsone_name = jsone$/;"	m
pkg_jsone_repo	deps/ranch/erlang.mk	/^pkg_jsone_repo = https:\/\/github.com\/sile\/jsone.git$/;"	m
pkg_jsonerl_commit	deps/ranch/erlang.mk	/^pkg_jsonerl_commit = master$/;"	m
pkg_jsonerl_description	deps/ranch/erlang.mk	/^pkg_jsonerl_description = yet another but slightly different erlang <-> json encoder\/decoder$/;"	m
pkg_jsonerl_fetch	deps/ranch/erlang.mk	/^pkg_jsonerl_fetch = git$/;"	m
pkg_jsonerl_homepage	deps/ranch/erlang.mk	/^pkg_jsonerl_homepage = https:\/\/github.com\/lambder\/jsonerl$/;"	m
pkg_jsonerl_name	deps/ranch/erlang.mk	/^pkg_jsonerl_name = jsonerl$/;"	m
pkg_jsonerl_repo	deps/ranch/erlang.mk	/^pkg_jsonerl_repo = https:\/\/github.com\/lambder\/jsonerl$/;"	m
pkg_jsonpath_commit	deps/ranch/erlang.mk	/^pkg_jsonpath_commit = master$/;"	m
pkg_jsonpath_description	deps/ranch/erlang.mk	/^pkg_jsonpath_description = Fast Erlang JSON data retrieval and updates via javascript-like notation$/;"	m
pkg_jsonpath_fetch	deps/ranch/erlang.mk	/^pkg_jsonpath_fetch = git$/;"	m
pkg_jsonpath_homepage	deps/ranch/erlang.mk	/^pkg_jsonpath_homepage = https:\/\/github.com\/GeneStevens\/jsonpath$/;"	m
pkg_jsonpath_name	deps/ranch/erlang.mk	/^pkg_jsonpath_name = jsonpath$/;"	m
pkg_jsonpath_repo	deps/ranch/erlang.mk	/^pkg_jsonpath_repo = https:\/\/github.com\/GeneStevens\/jsonpath$/;"	m
pkg_jsonx_commit	deps/ranch/erlang.mk	/^pkg_jsonx_commit = master$/;"	m
pkg_jsonx_description	deps/ranch/erlang.mk	/^pkg_jsonx_description = JSONX is an Erlang library for efficient decode and encode JSON, written in C.$/;"	m
pkg_jsonx_fetch	deps/ranch/erlang.mk	/^pkg_jsonx_fetch = git$/;"	m
pkg_jsonx_homepage	deps/ranch/erlang.mk	/^pkg_jsonx_homepage = https:\/\/github.com\/iskra\/jsonx$/;"	m
pkg_jsonx_name	deps/ranch/erlang.mk	/^pkg_jsonx_name = jsonx$/;"	m
pkg_jsonx_repo	deps/ranch/erlang.mk	/^pkg_jsonx_repo = https:\/\/github.com\/iskra\/jsonx$/;"	m
pkg_jsx_commit	deps/ranch/erlang.mk	/^pkg_jsx_commit = master$/;"	m
pkg_jsx_description	deps/ranch/erlang.mk	/^pkg_jsx_description = An Erlang application for consuming, producing and manipulating JSON.$/;"	m
pkg_jsx_fetch	deps/ranch/erlang.mk	/^pkg_jsx_fetch = git$/;"	m
pkg_jsx_homepage	deps/ranch/erlang.mk	/^pkg_jsx_homepage = https:\/\/github.com\/talentdeficit\/jsx$/;"	m
pkg_jsx_name	deps/ranch/erlang.mk	/^pkg_jsx_name = jsx$/;"	m
pkg_jsx_repo	deps/ranch/erlang.mk	/^pkg_jsx_repo = https:\/\/github.com\/talentdeficit\/jsx$/;"	m
pkg_kafka_commit	deps/ranch/erlang.mk	/^pkg_kafka_commit = master$/;"	m
pkg_kafka_description	deps/ranch/erlang.mk	/^pkg_kafka_description = Kafka consumer and producer in Erlang$/;"	m
pkg_kafka_fetch	deps/ranch/erlang.mk	/^pkg_kafka_fetch = git$/;"	m
pkg_kafka_homepage	deps/ranch/erlang.mk	/^pkg_kafka_homepage = https:\/\/github.com\/wooga\/kafka-erlang$/;"	m
pkg_kafka_name	deps/ranch/erlang.mk	/^pkg_kafka_name = kafka$/;"	m
pkg_kafka_protocol_commit	deps/ranch/erlang.mk	/^pkg_kafka_protocol_commit = master$/;"	m
pkg_kafka_protocol_description	deps/ranch/erlang.mk	/^pkg_kafka_protocol_description = Kafka protocol Erlang library$/;"	m
pkg_kafka_protocol_fetch	deps/ranch/erlang.mk	/^pkg_kafka_protocol_fetch = git$/;"	m
pkg_kafka_protocol_homepage	deps/ranch/erlang.mk	/^pkg_kafka_protocol_homepage = https:\/\/github.com\/klarna\/kafka_protocol$/;"	m
pkg_kafka_protocol_name	deps/ranch/erlang.mk	/^pkg_kafka_protocol_name = kafka_protocol$/;"	m
pkg_kafka_protocol_repo	deps/ranch/erlang.mk	/^pkg_kafka_protocol_repo = https:\/\/github.com\/klarna\/kafka_protocol.git$/;"	m
pkg_kafka_repo	deps/ranch/erlang.mk	/^pkg_kafka_repo = https:\/\/github.com\/wooga\/kafka-erlang$/;"	m
pkg_kai_commit	deps/ranch/erlang.mk	/^pkg_kai_commit = master$/;"	m
pkg_kai_description	deps/ranch/erlang.mk	/^pkg_kai_description = DHT storage by Takeshi Inoue$/;"	m
pkg_kai_fetch	deps/ranch/erlang.mk	/^pkg_kai_fetch = git$/;"	m
pkg_kai_homepage	deps/ranch/erlang.mk	/^pkg_kai_homepage = https:\/\/github.com\/synrc\/kai$/;"	m
pkg_kai_name	deps/ranch/erlang.mk	/^pkg_kai_name = kai$/;"	m
pkg_kai_repo	deps/ranch/erlang.mk	/^pkg_kai_repo = https:\/\/github.com\/synrc\/kai$/;"	m
pkg_katja_commit	deps/ranch/erlang.mk	/^pkg_katja_commit = master$/;"	m
pkg_katja_description	deps/ranch/erlang.mk	/^pkg_katja_description = A simple Riemann client written in Erlang.$/;"	m
pkg_katja_fetch	deps/ranch/erlang.mk	/^pkg_katja_fetch = git$/;"	m
pkg_katja_homepage	deps/ranch/erlang.mk	/^pkg_katja_homepage = https:\/\/github.com\/nifoc\/katja$/;"	m
pkg_katja_name	deps/ranch/erlang.mk	/^pkg_katja_name = katja$/;"	m
pkg_katja_repo	deps/ranch/erlang.mk	/^pkg_katja_repo = https:\/\/github.com\/nifoc\/katja$/;"	m
pkg_kdht_commit	deps/ranch/erlang.mk	/^pkg_kdht_commit = master$/;"	m
pkg_kdht_description	deps/ranch/erlang.mk	/^pkg_kdht_description = kdht is an erlang DHT implementation$/;"	m
pkg_kdht_fetch	deps/ranch/erlang.mk	/^pkg_kdht_fetch = git$/;"	m
pkg_kdht_homepage	deps/ranch/erlang.mk	/^pkg_kdht_homepage = https:\/\/github.com\/kevinlynx\/kdht$/;"	m
pkg_kdht_name	deps/ranch/erlang.mk	/^pkg_kdht_name = kdht$/;"	m
pkg_kdht_repo	deps/ranch/erlang.mk	/^pkg_kdht_repo = https:\/\/github.com\/kevinlynx\/kdht$/;"	m
pkg_key2value_commit	deps/ranch/erlang.mk	/^pkg_key2value_commit = master$/;"	m
pkg_key2value_description	deps/ranch/erlang.mk	/^pkg_key2value_description = Erlang 2-way map$/;"	m
pkg_key2value_fetch	deps/ranch/erlang.mk	/^pkg_key2value_fetch = git$/;"	m
pkg_key2value_homepage	deps/ranch/erlang.mk	/^pkg_key2value_homepage = https:\/\/github.com\/okeuday\/key2value$/;"	m
pkg_key2value_name	deps/ranch/erlang.mk	/^pkg_key2value_name = key2value$/;"	m
pkg_key2value_repo	deps/ranch/erlang.mk	/^pkg_key2value_repo = https:\/\/github.com\/okeuday\/key2value$/;"	m
pkg_keys1value_commit	deps/ranch/erlang.mk	/^pkg_keys1value_commit = master$/;"	m
pkg_keys1value_description	deps/ranch/erlang.mk	/^pkg_keys1value_description = Erlang set associative map for key lists$/;"	m
pkg_keys1value_fetch	deps/ranch/erlang.mk	/^pkg_keys1value_fetch = git$/;"	m
pkg_keys1value_homepage	deps/ranch/erlang.mk	/^pkg_keys1value_homepage = https:\/\/github.com\/okeuday\/keys1value$/;"	m
pkg_keys1value_name	deps/ranch/erlang.mk	/^pkg_keys1value_name = keys1value$/;"	m
pkg_keys1value_repo	deps/ranch/erlang.mk	/^pkg_keys1value_repo = https:\/\/github.com\/okeuday\/keys1value$/;"	m
pkg_kinetic_commit	deps/ranch/erlang.mk	/^pkg_kinetic_commit = master$/;"	m
pkg_kinetic_description	deps/ranch/erlang.mk	/^pkg_kinetic_description = Erlang Kinesis Client$/;"	m
pkg_kinetic_fetch	deps/ranch/erlang.mk	/^pkg_kinetic_fetch = git$/;"	m
pkg_kinetic_homepage	deps/ranch/erlang.mk	/^pkg_kinetic_homepage = https:\/\/github.com\/AdRoll\/kinetic$/;"	m
pkg_kinetic_name	deps/ranch/erlang.mk	/^pkg_kinetic_name = kinetic$/;"	m
pkg_kinetic_repo	deps/ranch/erlang.mk	/^pkg_kinetic_repo = https:\/\/github.com\/AdRoll\/kinetic$/;"	m
pkg_kjell_commit	deps/ranch/erlang.mk	/^pkg_kjell_commit = master$/;"	m
pkg_kjell_description	deps/ranch/erlang.mk	/^pkg_kjell_description = Erlang Shell$/;"	m
pkg_kjell_fetch	deps/ranch/erlang.mk	/^pkg_kjell_fetch = git$/;"	m
pkg_kjell_homepage	deps/ranch/erlang.mk	/^pkg_kjell_homepage = https:\/\/github.com\/karlll\/kjell$/;"	m
pkg_kjell_name	deps/ranch/erlang.mk	/^pkg_kjell_name = kjell$/;"	m
pkg_kjell_repo	deps/ranch/erlang.mk	/^pkg_kjell_repo = https:\/\/github.com\/karlll\/kjell$/;"	m
pkg_kraken_commit	deps/ranch/erlang.mk	/^pkg_kraken_commit = master$/;"	m
pkg_kraken_description	deps/ranch/erlang.mk	/^pkg_kraken_description = Distributed Pubsub Server for Realtime Apps$/;"	m
pkg_kraken_fetch	deps/ranch/erlang.mk	/^pkg_kraken_fetch = git$/;"	m
pkg_kraken_homepage	deps/ranch/erlang.mk	/^pkg_kraken_homepage = https:\/\/github.com\/Asana\/kraken$/;"	m
pkg_kraken_name	deps/ranch/erlang.mk	/^pkg_kraken_name = kraken$/;"	m
pkg_kraken_repo	deps/ranch/erlang.mk	/^pkg_kraken_repo = https:\/\/github.com\/Asana\/kraken$/;"	m
pkg_kucumberl_commit	deps/ranch/erlang.mk	/^pkg_kucumberl_commit = master$/;"	m
pkg_kucumberl_description	deps/ranch/erlang.mk	/^pkg_kucumberl_description = A pure-erlang, open-source, implementation of Cucumber$/;"	m
pkg_kucumberl_fetch	deps/ranch/erlang.mk	/^pkg_kucumberl_fetch = git$/;"	m
pkg_kucumberl_homepage	deps/ranch/erlang.mk	/^pkg_kucumberl_homepage = https:\/\/github.com\/openshine\/kucumberl$/;"	m
pkg_kucumberl_name	deps/ranch/erlang.mk	/^pkg_kucumberl_name = kucumberl$/;"	m
pkg_kucumberl_repo	deps/ranch/erlang.mk	/^pkg_kucumberl_repo = https:\/\/github.com\/openshine\/kucumberl$/;"	m
pkg_kvc_commit	deps/ranch/erlang.mk	/^pkg_kvc_commit = master$/;"	m
pkg_kvc_description	deps/ranch/erlang.mk	/^pkg_kvc_description = KVC - Key Value Coding for Erlang data structures$/;"	m
pkg_kvc_fetch	deps/ranch/erlang.mk	/^pkg_kvc_fetch = git$/;"	m
pkg_kvc_homepage	deps/ranch/erlang.mk	/^pkg_kvc_homepage = https:\/\/github.com\/etrepum\/kvc$/;"	m
pkg_kvc_name	deps/ranch/erlang.mk	/^pkg_kvc_name = kvc$/;"	m
pkg_kvc_repo	deps/ranch/erlang.mk	/^pkg_kvc_repo = https:\/\/github.com\/etrepum\/kvc$/;"	m
pkg_kvlists_commit	deps/ranch/erlang.mk	/^pkg_kvlists_commit = master$/;"	m
pkg_kvlists_description	deps/ranch/erlang.mk	/^pkg_kvlists_description = Lists of key-value pairs (decoded JSON) in Erlang$/;"	m
pkg_kvlists_fetch	deps/ranch/erlang.mk	/^pkg_kvlists_fetch = git$/;"	m
pkg_kvlists_homepage	deps/ranch/erlang.mk	/^pkg_kvlists_homepage = https:\/\/github.com\/jcomellas\/kvlists$/;"	m
pkg_kvlists_name	deps/ranch/erlang.mk	/^pkg_kvlists_name = kvlists$/;"	m
pkg_kvlists_repo	deps/ranch/erlang.mk	/^pkg_kvlists_repo = https:\/\/github.com\/jcomellas\/kvlists$/;"	m
pkg_kvs_commit	deps/ranch/erlang.mk	/^pkg_kvs_commit = master$/;"	m
pkg_kvs_description	deps/ranch/erlang.mk	/^pkg_kvs_description = Container and Iterator$/;"	m
pkg_kvs_fetch	deps/ranch/erlang.mk	/^pkg_kvs_fetch = git$/;"	m
pkg_kvs_homepage	deps/ranch/erlang.mk	/^pkg_kvs_homepage = https:\/\/github.com\/synrc\/kvs$/;"	m
pkg_kvs_name	deps/ranch/erlang.mk	/^pkg_kvs_name = kvs$/;"	m
pkg_kvs_repo	deps/ranch/erlang.mk	/^pkg_kvs_repo = https:\/\/github.com\/synrc\/kvs$/;"	m
pkg_lager_amqp_backend_commit	deps/ranch/erlang.mk	/^pkg_lager_amqp_backend_commit = master$/;"	m
pkg_lager_amqp_backend_description	deps/ranch/erlang.mk	/^pkg_lager_amqp_backend_description = AMQP RabbitMQ Lager backend$/;"	m
pkg_lager_amqp_backend_fetch	deps/ranch/erlang.mk	/^pkg_lager_amqp_backend_fetch = git$/;"	m
pkg_lager_amqp_backend_homepage	deps/ranch/erlang.mk	/^pkg_lager_amqp_backend_homepage = https:\/\/github.com\/jbrisbin\/lager_amqp_backend$/;"	m
pkg_lager_amqp_backend_name	deps/ranch/erlang.mk	/^pkg_lager_amqp_backend_name = lager_amqp_backend$/;"	m
pkg_lager_amqp_backend_repo	deps/ranch/erlang.mk	/^pkg_lager_amqp_backend_repo = https:\/\/github.com\/jbrisbin\/lager_amqp_backend$/;"	m
pkg_lager_commit	deps/ranch/erlang.mk	/^pkg_lager_commit = master$/;"	m
pkg_lager_description	deps/ranch/erlang.mk	/^pkg_lager_description = A logging framework for Erlang\/OTP.$/;"	m
pkg_lager_fetch	deps/ranch/erlang.mk	/^pkg_lager_fetch = git$/;"	m
pkg_lager_homepage	deps/ranch/erlang.mk	/^pkg_lager_homepage = https:\/\/github.com\/basho\/lager$/;"	m
pkg_lager_name	deps/ranch/erlang.mk	/^pkg_lager_name = lager$/;"	m
pkg_lager_repo	deps/ranch/erlang.mk	/^pkg_lager_repo = https:\/\/github.com\/basho\/lager$/;"	m
pkg_lager_syslog_commit	deps/ranch/erlang.mk	/^pkg_lager_syslog_commit = master$/;"	m
pkg_lager_syslog_description	deps/ranch/erlang.mk	/^pkg_lager_syslog_description = Syslog backend for lager$/;"	m
pkg_lager_syslog_fetch	deps/ranch/erlang.mk	/^pkg_lager_syslog_fetch = git$/;"	m
pkg_lager_syslog_homepage	deps/ranch/erlang.mk	/^pkg_lager_syslog_homepage = https:\/\/github.com\/basho\/lager_syslog$/;"	m
pkg_lager_syslog_name	deps/ranch/erlang.mk	/^pkg_lager_syslog_name = lager_syslog$/;"	m
pkg_lager_syslog_repo	deps/ranch/erlang.mk	/^pkg_lager_syslog_repo = https:\/\/github.com\/basho\/lager_syslog$/;"	m
pkg_lambdapad_commit	deps/ranch/erlang.mk	/^pkg_lambdapad_commit = master$/;"	m
pkg_lambdapad_description	deps/ranch/erlang.mk	/^pkg_lambdapad_description = Static site generator using Erlang. Yes, Erlang.$/;"	m
pkg_lambdapad_fetch	deps/ranch/erlang.mk	/^pkg_lambdapad_fetch = git$/;"	m
pkg_lambdapad_homepage	deps/ranch/erlang.mk	/^pkg_lambdapad_homepage = https:\/\/github.com\/gar1t\/lambdapad$/;"	m
pkg_lambdapad_name	deps/ranch/erlang.mk	/^pkg_lambdapad_name = lambdapad$/;"	m
pkg_lambdapad_repo	deps/ranch/erlang.mk	/^pkg_lambdapad_repo = https:\/\/github.com\/gar1t\/lambdapad$/;"	m
pkg_lasp_commit	deps/ranch/erlang.mk	/^pkg_lasp_commit = master$/;"	m
pkg_lasp_description	deps/ranch/erlang.mk	/^pkg_lasp_description = A Language for Distributed, Eventually Consistent Computations$/;"	m
pkg_lasp_fetch	deps/ranch/erlang.mk	/^pkg_lasp_fetch = git$/;"	m
pkg_lasp_homepage	deps/ranch/erlang.mk	/^pkg_lasp_homepage = http:\/\/lasp-lang.org\/$/;"	m
pkg_lasp_name	deps/ranch/erlang.mk	/^pkg_lasp_name = lasp$/;"	m
pkg_lasp_repo	deps/ranch/erlang.mk	/^pkg_lasp_repo = https:\/\/github.com\/lasp-lang\/lasp$/;"	m
pkg_lasse_commit	deps/ranch/erlang.mk	/^pkg_lasse_commit = master$/;"	m
pkg_lasse_description	deps/ranch/erlang.mk	/^pkg_lasse_description = SSE handler for Cowboy$/;"	m
pkg_lasse_fetch	deps/ranch/erlang.mk	/^pkg_lasse_fetch = git$/;"	m
pkg_lasse_homepage	deps/ranch/erlang.mk	/^pkg_lasse_homepage = https:\/\/github.com\/inaka\/lasse$/;"	m
pkg_lasse_name	deps/ranch/erlang.mk	/^pkg_lasse_name = lasse$/;"	m
pkg_lasse_repo	deps/ranch/erlang.mk	/^pkg_lasse_repo = https:\/\/github.com\/inaka\/lasse$/;"	m
pkg_ldap_commit	deps/ranch/erlang.mk	/^pkg_ldap_commit = master$/;"	m
pkg_ldap_description	deps/ranch/erlang.mk	/^pkg_ldap_description = LDAP server written in Erlang$/;"	m
pkg_ldap_fetch	deps/ranch/erlang.mk	/^pkg_ldap_fetch = git$/;"	m
pkg_ldap_homepage	deps/ranch/erlang.mk	/^pkg_ldap_homepage = https:\/\/github.com\/spawnproc\/ldap$/;"	m
pkg_ldap_name	deps/ranch/erlang.mk	/^pkg_ldap_name = ldap$/;"	m
pkg_ldap_repo	deps/ranch/erlang.mk	/^pkg_ldap_repo = https:\/\/github.com\/spawnproc\/ldap$/;"	m
pkg_lethink_commit	deps/ranch/erlang.mk	/^pkg_lethink_commit = master$/;"	m
pkg_lethink_description	deps/ranch/erlang.mk	/^pkg_lethink_description = erlang driver for rethinkdb$/;"	m
pkg_lethink_fetch	deps/ranch/erlang.mk	/^pkg_lethink_fetch = git$/;"	m
pkg_lethink_homepage	deps/ranch/erlang.mk	/^pkg_lethink_homepage = https:\/\/github.com\/taybin\/lethink$/;"	m
pkg_lethink_name	deps/ranch/erlang.mk	/^pkg_lethink_name = lethink$/;"	m
pkg_lethink_repo	deps/ranch/erlang.mk	/^pkg_lethink_repo = https:\/\/github.com\/taybin\/lethink$/;"	m
pkg_lfe_commit	deps/ranch/erlang.mk	/^pkg_lfe_commit = master$/;"	m
pkg_lfe_description	deps/ranch/erlang.mk	/^pkg_lfe_description = Lisp Flavoured Erlang (LFE)$/;"	m
pkg_lfe_fetch	deps/ranch/erlang.mk	/^pkg_lfe_fetch = git$/;"	m
pkg_lfe_homepage	deps/ranch/erlang.mk	/^pkg_lfe_homepage = https:\/\/github.com\/rvirding\/lfe$/;"	m
pkg_lfe_name	deps/ranch/erlang.mk	/^pkg_lfe_name = lfe$/;"	m
pkg_lfe_repo	deps/ranch/erlang.mk	/^pkg_lfe_repo = https:\/\/github.com\/rvirding\/lfe$/;"	m
pkg_ling_commit	deps/ranch/erlang.mk	/^pkg_ling_commit = master$/;"	m
pkg_ling_description	deps/ranch/erlang.mk	/^pkg_ling_description = Erlang on Xen$/;"	m
pkg_ling_fetch	deps/ranch/erlang.mk	/^pkg_ling_fetch = git$/;"	m
pkg_ling_homepage	deps/ranch/erlang.mk	/^pkg_ling_homepage = https:\/\/github.com\/cloudozer\/ling$/;"	m
pkg_ling_name	deps/ranch/erlang.mk	/^pkg_ling_name = ling$/;"	m
pkg_ling_repo	deps/ranch/erlang.mk	/^pkg_ling_repo = https:\/\/github.com\/cloudozer\/ling$/;"	m
pkg_live_commit	deps/ranch/erlang.mk	/^pkg_live_commit = master$/;"	m
pkg_live_description	deps/ranch/erlang.mk	/^pkg_live_description = Automated module and configuration reloader.$/;"	m
pkg_live_fetch	deps/ranch/erlang.mk	/^pkg_live_fetch = git$/;"	m
pkg_live_homepage	deps/ranch/erlang.mk	/^pkg_live_homepage = http:\/\/ninenines.eu$/;"	m
pkg_live_name	deps/ranch/erlang.mk	/^pkg_live_name = live$/;"	m
pkg_live_repo	deps/ranch/erlang.mk	/^pkg_live_repo = https:\/\/github.com\/ninenines\/live$/;"	m
pkg_lmq_commit	deps/ranch/erlang.mk	/^pkg_lmq_commit = master$/;"	m
pkg_lmq_description	deps/ranch/erlang.mk	/^pkg_lmq_description = Lightweight Message Queue$/;"	m
pkg_lmq_fetch	deps/ranch/erlang.mk	/^pkg_lmq_fetch = git$/;"	m
pkg_lmq_homepage	deps/ranch/erlang.mk	/^pkg_lmq_homepage = https:\/\/github.com\/iij\/lmq$/;"	m
pkg_lmq_name	deps/ranch/erlang.mk	/^pkg_lmq_name = lmq$/;"	m
pkg_lmq_repo	deps/ranch/erlang.mk	/^pkg_lmq_repo = https:\/\/github.com\/iij\/lmq$/;"	m
pkg_locker_commit	deps/ranch/erlang.mk	/^pkg_locker_commit = master$/;"	m
pkg_locker_description	deps/ranch/erlang.mk	/^pkg_locker_description = Atomic distributed 'check and set' for short-lived keys$/;"	m
pkg_locker_fetch	deps/ranch/erlang.mk	/^pkg_locker_fetch = git$/;"	m
pkg_locker_homepage	deps/ranch/erlang.mk	/^pkg_locker_homepage = https:\/\/github.com\/wooga\/locker$/;"	m
pkg_locker_name	deps/ranch/erlang.mk	/^pkg_locker_name = locker$/;"	m
pkg_locker_repo	deps/ranch/erlang.mk	/^pkg_locker_repo = https:\/\/github.com\/wooga\/locker$/;"	m
pkg_locks_commit	deps/ranch/erlang.mk	/^pkg_locks_commit = master$/;"	m
pkg_locks_description	deps/ranch/erlang.mk	/^pkg_locks_description = A scalable, deadlock-resolving resource locker$/;"	m
pkg_locks_fetch	deps/ranch/erlang.mk	/^pkg_locks_fetch = git$/;"	m
pkg_locks_homepage	deps/ranch/erlang.mk	/^pkg_locks_homepage = https:\/\/github.com\/uwiger\/locks$/;"	m
pkg_locks_name	deps/ranch/erlang.mk	/^pkg_locks_name = locks$/;"	m
pkg_locks_repo	deps/ranch/erlang.mk	/^pkg_locks_repo = https:\/\/github.com\/uwiger\/locks$/;"	m
pkg_log4erl_commit	deps/ranch/erlang.mk	/^pkg_log4erl_commit = master$/;"	m
pkg_log4erl_description	deps/ranch/erlang.mk	/^pkg_log4erl_description = A logger for erlang in the spirit of Log4J.$/;"	m
pkg_log4erl_fetch	deps/ranch/erlang.mk	/^pkg_log4erl_fetch = git$/;"	m
pkg_log4erl_homepage	deps/ranch/erlang.mk	/^pkg_log4erl_homepage = https:\/\/github.com\/ahmednawras\/log4erl$/;"	m
pkg_log4erl_name	deps/ranch/erlang.mk	/^pkg_log4erl_name = log4erl$/;"	m
pkg_log4erl_repo	deps/ranch/erlang.mk	/^pkg_log4erl_repo = https:\/\/github.com\/ahmednawras\/log4erl$/;"	m
pkg_lol_commit	deps/ranch/erlang.mk	/^pkg_lol_commit = master$/;"	m
pkg_lol_description	deps/ranch/erlang.mk	/^pkg_lol_description = Lisp on erLang, and programming is fun again$/;"	m
pkg_lol_fetch	deps/ranch/erlang.mk	/^pkg_lol_fetch = git$/;"	m
pkg_lol_homepage	deps/ranch/erlang.mk	/^pkg_lol_homepage = https:\/\/github.com\/b0oh\/lol$/;"	m
pkg_lol_name	deps/ranch/erlang.mk	/^pkg_lol_name = lol$/;"	m
pkg_lol_repo	deps/ranch/erlang.mk	/^pkg_lol_repo = https:\/\/github.com\/b0oh\/lol$/;"	m
pkg_lucid_commit	deps/ranch/erlang.mk	/^pkg_lucid_commit = master$/;"	m
pkg_lucid_description	deps/ranch/erlang.mk	/^pkg_lucid_description = HTTP\/2 server written in Erlang$/;"	m
pkg_lucid_fetch	deps/ranch/erlang.mk	/^pkg_lucid_fetch = git$/;"	m
pkg_lucid_homepage	deps/ranch/erlang.mk	/^pkg_lucid_homepage = https:\/\/github.com\/tatsuhiro-t\/lucid$/;"	m
pkg_lucid_name	deps/ranch/erlang.mk	/^pkg_lucid_name = lucid$/;"	m
pkg_lucid_repo	deps/ranch/erlang.mk	/^pkg_lucid_repo = https:\/\/github.com\/tatsuhiro-t\/lucid$/;"	m
pkg_luerl_commit	deps/ranch/erlang.mk	/^pkg_luerl_commit = develop$/;"	m
pkg_luerl_description	deps/ranch/erlang.mk	/^pkg_luerl_description = Lua in Erlang$/;"	m
pkg_luerl_fetch	deps/ranch/erlang.mk	/^pkg_luerl_fetch = git$/;"	m
pkg_luerl_homepage	deps/ranch/erlang.mk	/^pkg_luerl_homepage = https:\/\/github.com\/rvirding\/luerl$/;"	m
pkg_luerl_name	deps/ranch/erlang.mk	/^pkg_luerl_name = luerl$/;"	m
pkg_luerl_repo	deps/ranch/erlang.mk	/^pkg_luerl_repo = https:\/\/github.com\/rvirding\/luerl$/;"	m
pkg_luwak_commit	deps/ranch/erlang.mk	/^pkg_luwak_commit = master$/;"	m
pkg_luwak_description	deps/ranch/erlang.mk	/^pkg_luwak_description = Large-object storage interface for Riak$/;"	m
pkg_luwak_fetch	deps/ranch/erlang.mk	/^pkg_luwak_fetch = git$/;"	m
pkg_luwak_homepage	deps/ranch/erlang.mk	/^pkg_luwak_homepage = https:\/\/github.com\/basho\/luwak$/;"	m
pkg_luwak_name	deps/ranch/erlang.mk	/^pkg_luwak_name = luwak$/;"	m
pkg_luwak_repo	deps/ranch/erlang.mk	/^pkg_luwak_repo = https:\/\/github.com\/basho\/luwak$/;"	m
pkg_lux_commit	deps/ranch/erlang.mk	/^pkg_lux_commit = master$/;"	m
pkg_lux_description	deps/ranch/erlang.mk	/^pkg_lux_description = Lux (LUcid eXpect scripting) simplifies test automation and provides an Expect-style execution of commands$/;"	m
pkg_lux_fetch	deps/ranch/erlang.mk	/^pkg_lux_fetch = git$/;"	m
pkg_lux_homepage	deps/ranch/erlang.mk	/^pkg_lux_homepage = https:\/\/github.com\/hawk\/lux$/;"	m
pkg_lux_name	deps/ranch/erlang.mk	/^pkg_lux_name = lux$/;"	m
pkg_lux_repo	deps/ranch/erlang.mk	/^pkg_lux_repo = https:\/\/github.com\/hawk\/lux$/;"	m
pkg_machi_commit	deps/ranch/erlang.mk	/^pkg_machi_commit = master$/;"	m
pkg_machi_description	deps/ranch/erlang.mk	/^pkg_machi_description = Machi file store$/;"	m
pkg_machi_fetch	deps/ranch/erlang.mk	/^pkg_machi_fetch = git$/;"	m
pkg_machi_homepage	deps/ranch/erlang.mk	/^pkg_machi_homepage = https:\/\/github.com\/basho\/machi$/;"	m
pkg_machi_name	deps/ranch/erlang.mk	/^pkg_machi_name = machi$/;"	m
pkg_machi_repo	deps/ranch/erlang.mk	/^pkg_machi_repo = https:\/\/github.com\/basho\/machi$/;"	m
pkg_mad_commit	deps/ranch/erlang.mk	/^pkg_mad_commit = master$/;"	m
pkg_mad_description	deps/ranch/erlang.mk	/^pkg_mad_description = Small and Fast Rebar Replacement$/;"	m
pkg_mad_fetch	deps/ranch/erlang.mk	/^pkg_mad_fetch = git$/;"	m
pkg_mad_homepage	deps/ranch/erlang.mk	/^pkg_mad_homepage = https:\/\/github.com\/synrc\/mad$/;"	m
pkg_mad_name	deps/ranch/erlang.mk	/^pkg_mad_name = mad$/;"	m
pkg_mad_repo	deps/ranch/erlang.mk	/^pkg_mad_repo = https:\/\/github.com\/synrc\/mad$/;"	m
pkg_marina_commit	deps/ranch/erlang.mk	/^pkg_marina_commit = master$/;"	m
pkg_marina_description	deps/ranch/erlang.mk	/^pkg_marina_description = Non-blocking Erlang Cassandra CQL3 client$/;"	m
pkg_marina_fetch	deps/ranch/erlang.mk	/^pkg_marina_fetch = git$/;"	m
pkg_marina_homepage	deps/ranch/erlang.mk	/^pkg_marina_homepage = https:\/\/github.com\/lpgauth\/marina$/;"	m
pkg_marina_name	deps/ranch/erlang.mk	/^pkg_marina_name = marina$/;"	m
pkg_marina_repo	deps/ranch/erlang.mk	/^pkg_marina_repo = https:\/\/github.com\/lpgauth\/marina$/;"	m
pkg_mavg_commit	deps/ranch/erlang.mk	/^pkg_mavg_commit = master$/;"	m
pkg_mavg_description	deps/ranch/erlang.mk	/^pkg_mavg_description = Erlang :: Exponential moving average library$/;"	m
pkg_mavg_fetch	deps/ranch/erlang.mk	/^pkg_mavg_fetch = git$/;"	m
pkg_mavg_homepage	deps/ranch/erlang.mk	/^pkg_mavg_homepage = https:\/\/github.com\/EchoTeam\/mavg$/;"	m
pkg_mavg_name	deps/ranch/erlang.mk	/^pkg_mavg_name = mavg$/;"	m
pkg_mavg_repo	deps/ranch/erlang.mk	/^pkg_mavg_repo = https:\/\/github.com\/EchoTeam\/mavg$/;"	m
pkg_mc_erl_commit	deps/ranch/erlang.mk	/^pkg_mc_erl_commit = master$/;"	m
pkg_mc_erl_description	deps/ranch/erlang.mk	/^pkg_mc_erl_description = mc-erl is a server for Minecraft 1.4.7 written in Erlang.$/;"	m
pkg_mc_erl_fetch	deps/ranch/erlang.mk	/^pkg_mc_erl_fetch = git$/;"	m
pkg_mc_erl_homepage	deps/ranch/erlang.mk	/^pkg_mc_erl_homepage = https:\/\/github.com\/clonejo\/mc-erl$/;"	m
pkg_mc_erl_name	deps/ranch/erlang.mk	/^pkg_mc_erl_name = mc_erl$/;"	m
pkg_mc_erl_repo	deps/ranch/erlang.mk	/^pkg_mc_erl_repo = https:\/\/github.com\/clonejo\/mc-erl$/;"	m
pkg_mcd_commit	deps/ranch/erlang.mk	/^pkg_mcd_commit = master$/;"	m
pkg_mcd_description	deps/ranch/erlang.mk	/^pkg_mcd_description = Fast memcached protocol client in pure Erlang$/;"	m
pkg_mcd_fetch	deps/ranch/erlang.mk	/^pkg_mcd_fetch = git$/;"	m
pkg_mcd_homepage	deps/ranch/erlang.mk	/^pkg_mcd_homepage = https:\/\/github.com\/EchoTeam\/mcd$/;"	m
pkg_mcd_name	deps/ranch/erlang.mk	/^pkg_mcd_name = mcd$/;"	m
pkg_mcd_repo	deps/ranch/erlang.mk	/^pkg_mcd_repo = https:\/\/github.com\/EchoTeam\/mcd$/;"	m
pkg_mcerlang_commit	deps/ranch/erlang.mk	/^pkg_mcerlang_commit = master$/;"	m
pkg_mcerlang_description	deps/ranch/erlang.mk	/^pkg_mcerlang_description = The McErlang model checker for Erlang$/;"	m
pkg_mcerlang_fetch	deps/ranch/erlang.mk	/^pkg_mcerlang_fetch = git$/;"	m
pkg_mcerlang_homepage	deps/ranch/erlang.mk	/^pkg_mcerlang_homepage = https:\/\/github.com\/fredlund\/McErlang$/;"	m
pkg_mcerlang_name	deps/ranch/erlang.mk	/^pkg_mcerlang_name = mcerlang$/;"	m
pkg_mcerlang_repo	deps/ranch/erlang.mk	/^pkg_mcerlang_repo = https:\/\/github.com\/fredlund\/McErlang$/;"	m
pkg_meck_commit	deps/ranch/erlang.mk	/^pkg_meck_commit = master$/;"	m
pkg_meck_description	deps/ranch/erlang.mk	/^pkg_meck_description = A mocking library for Erlang$/;"	m
pkg_meck_fetch	deps/ranch/erlang.mk	/^pkg_meck_fetch = git$/;"	m
pkg_meck_homepage	deps/ranch/erlang.mk	/^pkg_meck_homepage = https:\/\/github.com\/eproxus\/meck$/;"	m
pkg_meck_name	deps/ranch/erlang.mk	/^pkg_meck_name = meck$/;"	m
pkg_meck_repo	deps/ranch/erlang.mk	/^pkg_meck_repo = https:\/\/github.com\/eproxus\/meck$/;"	m
pkg_mekao_commit	deps/ranch/erlang.mk	/^pkg_mekao_commit = master$/;"	m
pkg_mekao_description	deps/ranch/erlang.mk	/^pkg_mekao_description = SQL constructor$/;"	m
pkg_mekao_fetch	deps/ranch/erlang.mk	/^pkg_mekao_fetch = git$/;"	m
pkg_mekao_homepage	deps/ranch/erlang.mk	/^pkg_mekao_homepage = https:\/\/github.com\/ddosia\/mekao$/;"	m
pkg_mekao_name	deps/ranch/erlang.mk	/^pkg_mekao_name = mekao$/;"	m
pkg_mekao_repo	deps/ranch/erlang.mk	/^pkg_mekao_repo = https:\/\/github.com\/ddosia\/mekao$/;"	m
pkg_memo_commit	deps/ranch/erlang.mk	/^pkg_memo_commit = master$/;"	m
pkg_memo_description	deps/ranch/erlang.mk	/^pkg_memo_description = Erlang memoization server$/;"	m
pkg_memo_fetch	deps/ranch/erlang.mk	/^pkg_memo_fetch = git$/;"	m
pkg_memo_homepage	deps/ranch/erlang.mk	/^pkg_memo_homepage = https:\/\/github.com\/tuncer\/memo$/;"	m
pkg_memo_name	deps/ranch/erlang.mk	/^pkg_memo_name = memo$/;"	m
pkg_memo_repo	deps/ranch/erlang.mk	/^pkg_memo_repo = https:\/\/github.com\/tuncer\/memo$/;"	m
pkg_merge_index_commit	deps/ranch/erlang.mk	/^pkg_merge_index_commit = master$/;"	m
pkg_merge_index_description	deps/ranch/erlang.mk	/^pkg_merge_index_description = MergeIndex is an Erlang library for storing ordered sets on disk. It is very similar to an SSTable (in Google's Bigtable) or an HFile (in Hadoop).$/;"	m
pkg_merge_index_fetch	deps/ranch/erlang.mk	/^pkg_merge_index_fetch = git$/;"	m
pkg_merge_index_homepage	deps/ranch/erlang.mk	/^pkg_merge_index_homepage = https:\/\/github.com\/basho\/merge_index$/;"	m
pkg_merge_index_name	deps/ranch/erlang.mk	/^pkg_merge_index_name = merge_index$/;"	m
pkg_merge_index_repo	deps/ranch/erlang.mk	/^pkg_merge_index_repo = https:\/\/github.com\/basho\/merge_index$/;"	m
pkg_merl_commit	deps/ranch/erlang.mk	/^pkg_merl_commit = master$/;"	m
pkg_merl_description	deps/ranch/erlang.mk	/^pkg_merl_description = Metaprogramming in Erlang$/;"	m
pkg_merl_fetch	deps/ranch/erlang.mk	/^pkg_merl_fetch = git$/;"	m
pkg_merl_homepage	deps/ranch/erlang.mk	/^pkg_merl_homepage = https:\/\/github.com\/richcarl\/merl$/;"	m
pkg_merl_name	deps/ranch/erlang.mk	/^pkg_merl_name = merl$/;"	m
pkg_merl_repo	deps/ranch/erlang.mk	/^pkg_merl_repo = https:\/\/github.com\/richcarl\/merl$/;"	m
pkg_mimerl_commit	deps/ranch/erlang.mk	/^pkg_mimerl_commit = master$/;"	m
pkg_mimerl_description	deps/ranch/erlang.mk	/^pkg_mimerl_description = library to handle mimetypes$/;"	m
pkg_mimerl_fetch	deps/ranch/erlang.mk	/^pkg_mimerl_fetch = git$/;"	m
pkg_mimerl_homepage	deps/ranch/erlang.mk	/^pkg_mimerl_homepage = https:\/\/github.com\/benoitc\/mimerl$/;"	m
pkg_mimerl_name	deps/ranch/erlang.mk	/^pkg_mimerl_name = mimerl$/;"	m
pkg_mimerl_repo	deps/ranch/erlang.mk	/^pkg_mimerl_repo = https:\/\/github.com\/benoitc\/mimerl$/;"	m
pkg_mimetypes_commit	deps/ranch/erlang.mk	/^pkg_mimetypes_commit = master$/;"	m
pkg_mimetypes_description	deps/ranch/erlang.mk	/^pkg_mimetypes_description = Erlang MIME types library$/;"	m
pkg_mimetypes_fetch	deps/ranch/erlang.mk	/^pkg_mimetypes_fetch = git$/;"	m
pkg_mimetypes_homepage	deps/ranch/erlang.mk	/^pkg_mimetypes_homepage = https:\/\/github.com\/spawngrid\/mimetypes$/;"	m
pkg_mimetypes_name	deps/ranch/erlang.mk	/^pkg_mimetypes_name = mimetypes$/;"	m
pkg_mimetypes_repo	deps/ranch/erlang.mk	/^pkg_mimetypes_repo = https:\/\/github.com\/spawngrid\/mimetypes$/;"	m
pkg_mixer_commit	deps/ranch/erlang.mk	/^pkg_mixer_commit = master$/;"	m
pkg_mixer_description	deps/ranch/erlang.mk	/^pkg_mixer_description = Mix in functions from other modules$/;"	m
pkg_mixer_fetch	deps/ranch/erlang.mk	/^pkg_mixer_fetch = git$/;"	m
pkg_mixer_homepage	deps/ranch/erlang.mk	/^pkg_mixer_homepage = https:\/\/github.com\/chef\/mixer$/;"	m
pkg_mixer_name	deps/ranch/erlang.mk	/^pkg_mixer_name = mixer$/;"	m
pkg_mixer_repo	deps/ranch/erlang.mk	/^pkg_mixer_repo = https:\/\/github.com\/chef\/mixer$/;"	m
pkg_mochiweb_commit	deps/ranch/erlang.mk	/^pkg_mochiweb_commit = master$/;"	m
pkg_mochiweb_description	deps/ranch/erlang.mk	/^pkg_mochiweb_description = MochiWeb is an Erlang library for building lightweight HTTP servers.$/;"	m
pkg_mochiweb_fetch	deps/ranch/erlang.mk	/^pkg_mochiweb_fetch = git$/;"	m
pkg_mochiweb_homepage	deps/ranch/erlang.mk	/^pkg_mochiweb_homepage = https:\/\/github.com\/mochi\/mochiweb$/;"	m
pkg_mochiweb_name	deps/ranch/erlang.mk	/^pkg_mochiweb_name = mochiweb$/;"	m
pkg_mochiweb_repo	deps/ranch/erlang.mk	/^pkg_mochiweb_repo = https:\/\/github.com\/mochi\/mochiweb$/;"	m
pkg_mochiweb_xpath_commit	deps/ranch/erlang.mk	/^pkg_mochiweb_xpath_commit = master$/;"	m
pkg_mochiweb_xpath_description	deps/ranch/erlang.mk	/^pkg_mochiweb_xpath_description = XPath support for mochiweb's html parser$/;"	m
pkg_mochiweb_xpath_fetch	deps/ranch/erlang.mk	/^pkg_mochiweb_xpath_fetch = git$/;"	m
pkg_mochiweb_xpath_homepage	deps/ranch/erlang.mk	/^pkg_mochiweb_xpath_homepage = https:\/\/github.com\/retnuh\/mochiweb_xpath$/;"	m
pkg_mochiweb_xpath_name	deps/ranch/erlang.mk	/^pkg_mochiweb_xpath_name = mochiweb_xpath$/;"	m
pkg_mochiweb_xpath_repo	deps/ranch/erlang.mk	/^pkg_mochiweb_xpath_repo = https:\/\/github.com\/retnuh\/mochiweb_xpath$/;"	m
pkg_mockgyver_commit	deps/ranch/erlang.mk	/^pkg_mockgyver_commit = master$/;"	m
pkg_mockgyver_description	deps/ranch/erlang.mk	/^pkg_mockgyver_description = A mocking library for Erlang$/;"	m
pkg_mockgyver_fetch	deps/ranch/erlang.mk	/^pkg_mockgyver_fetch = git$/;"	m
pkg_mockgyver_homepage	deps/ranch/erlang.mk	/^pkg_mockgyver_homepage = https:\/\/github.com\/klajo\/mockgyver$/;"	m
pkg_mockgyver_name	deps/ranch/erlang.mk	/^pkg_mockgyver_name = mockgyver$/;"	m
pkg_mockgyver_repo	deps/ranch/erlang.mk	/^pkg_mockgyver_repo = https:\/\/github.com\/klajo\/mockgyver$/;"	m
pkg_modlib_commit	deps/ranch/erlang.mk	/^pkg_modlib_commit = master$/;"	m
pkg_modlib_description	deps/ranch/erlang.mk	/^pkg_modlib_description = Web framework based on Erlang's inets httpd$/;"	m
pkg_modlib_fetch	deps/ranch/erlang.mk	/^pkg_modlib_fetch = git$/;"	m
pkg_modlib_homepage	deps/ranch/erlang.mk	/^pkg_modlib_homepage = https:\/\/github.com\/gar1t\/modlib$/;"	m
pkg_modlib_name	deps/ranch/erlang.mk	/^pkg_modlib_name = modlib$/;"	m
pkg_modlib_repo	deps/ranch/erlang.mk	/^pkg_modlib_repo = https:\/\/github.com\/gar1t\/modlib$/;"	m
pkg_mongodb_commit	deps/ranch/erlang.mk	/^pkg_mongodb_commit = master$/;"	m
pkg_mongodb_description	deps/ranch/erlang.mk	/^pkg_mongodb_description = MongoDB driver for Erlang$/;"	m
pkg_mongodb_fetch	deps/ranch/erlang.mk	/^pkg_mongodb_fetch = git$/;"	m
pkg_mongodb_homepage	deps/ranch/erlang.mk	/^pkg_mongodb_homepage = https:\/\/github.com\/comtihon\/mongodb-erlang$/;"	m
pkg_mongodb_name	deps/ranch/erlang.mk	/^pkg_mongodb_name = mongodb$/;"	m
pkg_mongodb_repo	deps/ranch/erlang.mk	/^pkg_mongodb_repo = https:\/\/github.com\/comtihon\/mongodb-erlang$/;"	m
pkg_mongooseim_commit	deps/ranch/erlang.mk	/^pkg_mongooseim_commit = master$/;"	m
pkg_mongooseim_description	deps/ranch/erlang.mk	/^pkg_mongooseim_description = Jabber \/ XMPP server with focus on performance and scalability, by Erlang Solutions$/;"	m
pkg_mongooseim_fetch	deps/ranch/erlang.mk	/^pkg_mongooseim_fetch = git$/;"	m
pkg_mongooseim_homepage	deps/ranch/erlang.mk	/^pkg_mongooseim_homepage = https:\/\/www.erlang-solutions.com\/products\/mongooseim-massively-scalable-ejabberd-platform$/;"	m
pkg_mongooseim_name	deps/ranch/erlang.mk	/^pkg_mongooseim_name = mongooseim$/;"	m
pkg_mongooseim_repo	deps/ranch/erlang.mk	/^pkg_mongooseim_repo = https:\/\/github.com\/esl\/MongooseIM$/;"	m
pkg_moyo_commit	deps/ranch/erlang.mk	/^pkg_moyo_commit = master$/;"	m
pkg_moyo_description	deps/ranch/erlang.mk	/^pkg_moyo_description = Erlang utility functions library$/;"	m
pkg_moyo_fetch	deps/ranch/erlang.mk	/^pkg_moyo_fetch = git$/;"	m
pkg_moyo_homepage	deps/ranch/erlang.mk	/^pkg_moyo_homepage = https:\/\/github.com\/dwango\/moyo$/;"	m
pkg_moyo_name	deps/ranch/erlang.mk	/^pkg_moyo_name = moyo$/;"	m
pkg_moyo_repo	deps/ranch/erlang.mk	/^pkg_moyo_repo = https:\/\/github.com\/dwango\/moyo$/;"	m
pkg_msgpack_commit	deps/ranch/erlang.mk	/^pkg_msgpack_commit = master$/;"	m
pkg_msgpack_description	deps/ranch/erlang.mk	/^pkg_msgpack_description = MessagePack (de)serializer implementation for Erlang$/;"	m
pkg_msgpack_fetch	deps/ranch/erlang.mk	/^pkg_msgpack_fetch = git$/;"	m
pkg_msgpack_homepage	deps/ranch/erlang.mk	/^pkg_msgpack_homepage = https:\/\/github.com\/msgpack\/msgpack-erlang$/;"	m
pkg_msgpack_name	deps/ranch/erlang.mk	/^pkg_msgpack_name = msgpack$/;"	m
pkg_msgpack_repo	deps/ranch/erlang.mk	/^pkg_msgpack_repo = https:\/\/github.com\/msgpack\/msgpack-erlang$/;"	m
pkg_mu2_commit	deps/ranch/erlang.mk	/^pkg_mu2_commit = master$/;"	m
pkg_mu2_description	deps/ranch/erlang.mk	/^pkg_mu2_description = Erlang mutation testing tool$/;"	m
pkg_mu2_fetch	deps/ranch/erlang.mk	/^pkg_mu2_fetch = git$/;"	m
pkg_mu2_homepage	deps/ranch/erlang.mk	/^pkg_mu2_homepage = https:\/\/github.com\/ramsay-t\/mu2$/;"	m
pkg_mu2_name	deps/ranch/erlang.mk	/^pkg_mu2_name = mu2$/;"	m
pkg_mu2_repo	deps/ranch/erlang.mk	/^pkg_mu2_repo = https:\/\/github.com\/ramsay-t\/mu2$/;"	m
pkg_mustache_commit	deps/ranch/erlang.mk	/^pkg_mustache_commit = master$/;"	m
pkg_mustache_description	deps/ranch/erlang.mk	/^pkg_mustache_description = Mustache template engine for Erlang.$/;"	m
pkg_mustache_fetch	deps/ranch/erlang.mk	/^pkg_mustache_fetch = git$/;"	m
pkg_mustache_homepage	deps/ranch/erlang.mk	/^pkg_mustache_homepage = https:\/\/github.com\/mojombo\/mustache.erl$/;"	m
pkg_mustache_name	deps/ranch/erlang.mk	/^pkg_mustache_name = mustache$/;"	m
pkg_mustache_repo	deps/ranch/erlang.mk	/^pkg_mustache_repo = https:\/\/github.com\/mojombo\/mustache.erl$/;"	m
pkg_myproto_commit	deps/ranch/erlang.mk	/^pkg_myproto_commit = master$/;"	m
pkg_myproto_description	deps/ranch/erlang.mk	/^pkg_myproto_description = MySQL Server Protocol in Erlang$/;"	m
pkg_myproto_fetch	deps/ranch/erlang.mk	/^pkg_myproto_fetch = git$/;"	m
pkg_myproto_homepage	deps/ranch/erlang.mk	/^pkg_myproto_homepage = https:\/\/github.com\/altenwald\/myproto$/;"	m
pkg_myproto_name	deps/ranch/erlang.mk	/^pkg_myproto_name = myproto$/;"	m
pkg_myproto_repo	deps/ranch/erlang.mk	/^pkg_myproto_repo = https:\/\/github.com\/altenwald\/myproto$/;"	m
pkg_mysql_commit	deps/ranch/erlang.mk	/^pkg_mysql_commit = master$/;"	m
pkg_mysql_description	deps/ranch/erlang.mk	/^pkg_mysql_description = Erlang MySQL Driver (from code.google.com)$/;"	m
pkg_mysql_fetch	deps/ranch/erlang.mk	/^pkg_mysql_fetch = git$/;"	m
pkg_mysql_homepage	deps/ranch/erlang.mk	/^pkg_mysql_homepage = https:\/\/github.com\/dizzyd\/erlang-mysql-driver$/;"	m
pkg_mysql_name	deps/ranch/erlang.mk	/^pkg_mysql_name = mysql$/;"	m
pkg_mysql_repo	deps/ranch/erlang.mk	/^pkg_mysql_repo = https:\/\/github.com\/dizzyd\/erlang-mysql-driver$/;"	m
pkg_n2o_commit	deps/ranch/erlang.mk	/^pkg_n2o_commit = master$/;"	m
pkg_n2o_description	deps/ranch/erlang.mk	/^pkg_n2o_description = WebSocket Application Server$/;"	m
pkg_n2o_fetch	deps/ranch/erlang.mk	/^pkg_n2o_fetch = git$/;"	m
pkg_n2o_homepage	deps/ranch/erlang.mk	/^pkg_n2o_homepage = https:\/\/github.com\/5HT\/n2o$/;"	m
pkg_n2o_name	deps/ranch/erlang.mk	/^pkg_n2o_name = n2o$/;"	m
pkg_n2o_repo	deps/ranch/erlang.mk	/^pkg_n2o_repo = https:\/\/github.com\/5HT\/n2o$/;"	m
pkg_nat_upnp_commit	deps/ranch/erlang.mk	/^pkg_nat_upnp_commit = master$/;"	m
pkg_nat_upnp_description	deps/ranch/erlang.mk	/^pkg_nat_upnp_description = Erlang library to map your internal port to an external using UNP IGD$/;"	m
pkg_nat_upnp_fetch	deps/ranch/erlang.mk	/^pkg_nat_upnp_fetch = git$/;"	m
pkg_nat_upnp_homepage	deps/ranch/erlang.mk	/^pkg_nat_upnp_homepage = https:\/\/github.com\/benoitc\/nat_upnp$/;"	m
pkg_nat_upnp_name	deps/ranch/erlang.mk	/^pkg_nat_upnp_name = nat_upnp$/;"	m
pkg_nat_upnp_repo	deps/ranch/erlang.mk	/^pkg_nat_upnp_repo = https:\/\/github.com\/benoitc\/nat_upnp$/;"	m
pkg_neo4j_commit	deps/ranch/erlang.mk	/^pkg_neo4j_commit = master$/;"	m
pkg_neo4j_description	deps/ranch/erlang.mk	/^pkg_neo4j_description = Erlang client library for Neo4J.$/;"	m
pkg_neo4j_fetch	deps/ranch/erlang.mk	/^pkg_neo4j_fetch = git$/;"	m
pkg_neo4j_homepage	deps/ranch/erlang.mk	/^pkg_neo4j_homepage = https:\/\/github.com\/dmitriid\/neo4j-erlang$/;"	m
pkg_neo4j_name	deps/ranch/erlang.mk	/^pkg_neo4j_name = neo4j$/;"	m
pkg_neo4j_repo	deps/ranch/erlang.mk	/^pkg_neo4j_repo = https:\/\/github.com\/dmitriid\/neo4j-erlang$/;"	m
pkg_neotoma_commit	deps/ranch/erlang.mk	/^pkg_neotoma_commit = master$/;"	m
pkg_neotoma_description	deps/ranch/erlang.mk	/^pkg_neotoma_description = Erlang library and packrat parser-generator for parsing expression grammars.$/;"	m
pkg_neotoma_fetch	deps/ranch/erlang.mk	/^pkg_neotoma_fetch = git$/;"	m
pkg_neotoma_homepage	deps/ranch/erlang.mk	/^pkg_neotoma_homepage = https:\/\/github.com\/seancribbs\/neotoma$/;"	m
pkg_neotoma_name	deps/ranch/erlang.mk	/^pkg_neotoma_name = neotoma$/;"	m
pkg_neotoma_repo	deps/ranch/erlang.mk	/^pkg_neotoma_repo = https:\/\/github.com\/seancribbs\/neotoma$/;"	m
pkg_newrelic_commit	deps/ranch/erlang.mk	/^pkg_newrelic_commit = master$/;"	m
pkg_newrelic_description	deps/ranch/erlang.mk	/^pkg_newrelic_description = Erlang library for sending metrics to New Relic$/;"	m
pkg_newrelic_fetch	deps/ranch/erlang.mk	/^pkg_newrelic_fetch = git$/;"	m
pkg_newrelic_homepage	deps/ranch/erlang.mk	/^pkg_newrelic_homepage = https:\/\/github.com\/wooga\/newrelic-erlang$/;"	m
pkg_newrelic_name	deps/ranch/erlang.mk	/^pkg_newrelic_name = newrelic$/;"	m
pkg_newrelic_repo	deps/ranch/erlang.mk	/^pkg_newrelic_repo = https:\/\/github.com\/wooga\/newrelic-erlang$/;"	m
pkg_nifty_commit	deps/ranch/erlang.mk	/^pkg_nifty_commit = master$/;"	m
pkg_nifty_description	deps/ranch/erlang.mk	/^pkg_nifty_description = Erlang NIF wrapper generator$/;"	m
pkg_nifty_fetch	deps/ranch/erlang.mk	/^pkg_nifty_fetch = git$/;"	m
pkg_nifty_homepage	deps/ranch/erlang.mk	/^pkg_nifty_homepage = https:\/\/github.com\/parapluu\/nifty$/;"	m
pkg_nifty_name	deps/ranch/erlang.mk	/^pkg_nifty_name = nifty$/;"	m
pkg_nifty_repo	deps/ranch/erlang.mk	/^pkg_nifty_repo = https:\/\/github.com\/parapluu\/nifty$/;"	m
pkg_nitrogen_core_commit	deps/ranch/erlang.mk	/^pkg_nitrogen_core_commit = master$/;"	m
pkg_nitrogen_core_description	deps/ranch/erlang.mk	/^pkg_nitrogen_core_description = The core Nitrogen library.$/;"	m
pkg_nitrogen_core_fetch	deps/ranch/erlang.mk	/^pkg_nitrogen_core_fetch = git$/;"	m
pkg_nitrogen_core_homepage	deps/ranch/erlang.mk	/^pkg_nitrogen_core_homepage = http:\/\/nitrogenproject.com\/$/;"	m
pkg_nitrogen_core_name	deps/ranch/erlang.mk	/^pkg_nitrogen_core_name = nitrogen_core$/;"	m
pkg_nitrogen_core_repo	deps/ranch/erlang.mk	/^pkg_nitrogen_core_repo = https:\/\/github.com\/nitrogen\/nitrogen_core$/;"	m
pkg_nkbase_commit	deps/ranch/erlang.mk	/^pkg_nkbase_commit = develop$/;"	m
pkg_nkbase_description	deps/ranch/erlang.mk	/^pkg_nkbase_description = NkBASE distributed database$/;"	m
pkg_nkbase_fetch	deps/ranch/erlang.mk	/^pkg_nkbase_fetch = git$/;"	m
pkg_nkbase_homepage	deps/ranch/erlang.mk	/^pkg_nkbase_homepage = https:\/\/github.com\/Nekso\/nkbase$/;"	m
pkg_nkbase_name	deps/ranch/erlang.mk	/^pkg_nkbase_name = nkbase$/;"	m
pkg_nkbase_repo	deps/ranch/erlang.mk	/^pkg_nkbase_repo = https:\/\/github.com\/Nekso\/nkbase$/;"	m
pkg_nkdocker_commit	deps/ranch/erlang.mk	/^pkg_nkdocker_commit = master$/;"	m
pkg_nkdocker_description	deps/ranch/erlang.mk	/^pkg_nkdocker_description = Erlang Docker client$/;"	m
pkg_nkdocker_fetch	deps/ranch/erlang.mk	/^pkg_nkdocker_fetch = git$/;"	m
pkg_nkdocker_homepage	deps/ranch/erlang.mk	/^pkg_nkdocker_homepage = https:\/\/github.com\/Nekso\/nkdocker$/;"	m
pkg_nkdocker_name	deps/ranch/erlang.mk	/^pkg_nkdocker_name = nkdocker$/;"	m
pkg_nkdocker_repo	deps/ranch/erlang.mk	/^pkg_nkdocker_repo = https:\/\/github.com\/Nekso\/nkdocker$/;"	m
pkg_nkpacket_commit	deps/ranch/erlang.mk	/^pkg_nkpacket_commit = master$/;"	m
pkg_nkpacket_description	deps/ranch/erlang.mk	/^pkg_nkpacket_description = Generic Erlang transport layer$/;"	m
pkg_nkpacket_fetch	deps/ranch/erlang.mk	/^pkg_nkpacket_fetch = git$/;"	m
pkg_nkpacket_homepage	deps/ranch/erlang.mk	/^pkg_nkpacket_homepage = https:\/\/github.com\/Nekso\/nkpacket$/;"	m
pkg_nkpacket_name	deps/ranch/erlang.mk	/^pkg_nkpacket_name = nkpacket$/;"	m
pkg_nkpacket_repo	deps/ranch/erlang.mk	/^pkg_nkpacket_repo = https:\/\/github.com\/Nekso\/nkpacket$/;"	m
pkg_nksip_commit	deps/ranch/erlang.mk	/^pkg_nksip_commit = master$/;"	m
pkg_nksip_description	deps/ranch/erlang.mk	/^pkg_nksip_description = Erlang SIP application server$/;"	m
pkg_nksip_fetch	deps/ranch/erlang.mk	/^pkg_nksip_fetch = git$/;"	m
pkg_nksip_homepage	deps/ranch/erlang.mk	/^pkg_nksip_homepage = https:\/\/github.com\/kalta\/nksip$/;"	m
pkg_nksip_name	deps/ranch/erlang.mk	/^pkg_nksip_name = nksip$/;"	m
pkg_nksip_repo	deps/ranch/erlang.mk	/^pkg_nksip_repo = https:\/\/github.com\/kalta\/nksip$/;"	m
pkg_nodefinder_commit	deps/ranch/erlang.mk	/^pkg_nodefinder_commit = master$/;"	m
pkg_nodefinder_description	deps/ranch/erlang.mk	/^pkg_nodefinder_description = automatic node discovery via UDP multicast$/;"	m
pkg_nodefinder_fetch	deps/ranch/erlang.mk	/^pkg_nodefinder_fetch = git$/;"	m
pkg_nodefinder_homepage	deps/ranch/erlang.mk	/^pkg_nodefinder_homepage = https:\/\/github.com\/erlanger\/nodefinder$/;"	m
pkg_nodefinder_name	deps/ranch/erlang.mk	/^pkg_nodefinder_name = nodefinder$/;"	m
pkg_nodefinder_repo	deps/ranch/erlang.mk	/^pkg_nodefinder_repo = https:\/\/github.com\/okeuday\/nodefinder$/;"	m
pkg_nprocreg_commit	deps/ranch/erlang.mk	/^pkg_nprocreg_commit = master$/;"	m
pkg_nprocreg_description	deps/ranch/erlang.mk	/^pkg_nprocreg_description = Minimal Distributed Erlang Process Registry$/;"	m
pkg_nprocreg_fetch	deps/ranch/erlang.mk	/^pkg_nprocreg_fetch = git$/;"	m
pkg_nprocreg_homepage	deps/ranch/erlang.mk	/^pkg_nprocreg_homepage = http:\/\/nitrogenproject.com\/$/;"	m
pkg_nprocreg_name	deps/ranch/erlang.mk	/^pkg_nprocreg_name = nprocreg$/;"	m
pkg_nprocreg_repo	deps/ranch/erlang.mk	/^pkg_nprocreg_repo = https:\/\/github.com\/nitrogen\/nprocreg$/;"	m
pkg_oauth2_commit	deps/ranch/erlang.mk	/^pkg_oauth2_commit = master$/;"	m
pkg_oauth2_description	deps/ranch/erlang.mk	/^pkg_oauth2_description = Erlang Oauth2 implementation$/;"	m
pkg_oauth2_fetch	deps/ranch/erlang.mk	/^pkg_oauth2_fetch = git$/;"	m
pkg_oauth2_homepage	deps/ranch/erlang.mk	/^pkg_oauth2_homepage = https:\/\/github.com\/kivra\/oauth2$/;"	m
pkg_oauth2_name	deps/ranch/erlang.mk	/^pkg_oauth2_name = oauth2$/;"	m
pkg_oauth2_repo	deps/ranch/erlang.mk	/^pkg_oauth2_repo = https:\/\/github.com\/kivra\/oauth2$/;"	m
pkg_oauth_commit	deps/ranch/erlang.mk	/^pkg_oauth_commit = master$/;"	m
pkg_oauth_description	deps/ranch/erlang.mk	/^pkg_oauth_description = An Erlang OAuth 1.0 implementation$/;"	m
pkg_oauth_fetch	deps/ranch/erlang.mk	/^pkg_oauth_fetch = git$/;"	m
pkg_oauth_homepage	deps/ranch/erlang.mk	/^pkg_oauth_homepage = https:\/\/github.com\/tim\/erlang-oauth$/;"	m
pkg_oauth_name	deps/ranch/erlang.mk	/^pkg_oauth_name = oauth$/;"	m
pkg_oauth_repo	deps/ranch/erlang.mk	/^pkg_oauth_repo = https:\/\/github.com\/tim\/erlang-oauth$/;"	m
pkg_octopus_commit	deps/ranch/erlang.mk	/^pkg_octopus_commit = master$/;"	m
pkg_octopus_description	deps/ranch/erlang.mk	/^pkg_octopus_description = Small and flexible pool manager written in Erlang$/;"	m
pkg_octopus_fetch	deps/ranch/erlang.mk	/^pkg_octopus_fetch = git$/;"	m
pkg_octopus_homepage	deps/ranch/erlang.mk	/^pkg_octopus_homepage = https:\/\/github.com\/erlangbureau\/octopus$/;"	m
pkg_octopus_name	deps/ranch/erlang.mk	/^pkg_octopus_name = octopus$/;"	m
pkg_octopus_repo	deps/ranch/erlang.mk	/^pkg_octopus_repo = https:\/\/github.com\/erlangbureau\/octopus$/;"	m
pkg_of_protocol_commit	deps/ranch/erlang.mk	/^pkg_of_protocol_commit = master$/;"	m
pkg_of_protocol_description	deps/ranch/erlang.mk	/^pkg_of_protocol_description = OpenFlow Protocol Library for Erlang$/;"	m
pkg_of_protocol_fetch	deps/ranch/erlang.mk	/^pkg_of_protocol_fetch = git$/;"	m
pkg_of_protocol_homepage	deps/ranch/erlang.mk	/^pkg_of_protocol_homepage = https:\/\/github.com\/FlowForwarding\/of_protocol$/;"	m
pkg_of_protocol_name	deps/ranch/erlang.mk	/^pkg_of_protocol_name = of_protocol$/;"	m
pkg_of_protocol_repo	deps/ranch/erlang.mk	/^pkg_of_protocol_repo = https:\/\/github.com\/FlowForwarding\/of_protocol$/;"	m
pkg_opencouch_commit	deps/ranch/erlang.mk	/^pkg_opencouch_commit = master$/;"	m
pkg_opencouch_description	deps/ranch/erlang.mk	/^pkg_opencouch_description = A embeddable document oriented database compatible with Apache CouchDB$/;"	m
pkg_opencouch_fetch	deps/ranch/erlang.mk	/^pkg_opencouch_fetch = git$/;"	m
pkg_opencouch_homepage	deps/ranch/erlang.mk	/^pkg_opencouch_homepage = https:\/\/github.com\/benoitc\/opencouch$/;"	m
pkg_opencouch_name	deps/ranch/erlang.mk	/^pkg_opencouch_name = couch$/;"	m
pkg_opencouch_repo	deps/ranch/erlang.mk	/^pkg_opencouch_repo = https:\/\/github.com\/benoitc\/opencouch$/;"	m
pkg_openflow_commit	deps/ranch/erlang.mk	/^pkg_openflow_commit = master$/;"	m
pkg_openflow_description	deps/ranch/erlang.mk	/^pkg_openflow_description = An OpenFlow controller written in pure erlang$/;"	m
pkg_openflow_fetch	deps/ranch/erlang.mk	/^pkg_openflow_fetch = git$/;"	m
pkg_openflow_homepage	deps/ranch/erlang.mk	/^pkg_openflow_homepage = https:\/\/github.com\/renatoaguiar\/erlang-openflow$/;"	m
pkg_openflow_name	deps/ranch/erlang.mk	/^pkg_openflow_name = openflow$/;"	m
pkg_openflow_repo	deps/ranch/erlang.mk	/^pkg_openflow_repo = https:\/\/github.com\/renatoaguiar\/erlang-openflow$/;"	m
pkg_openid_commit	deps/ranch/erlang.mk	/^pkg_openid_commit = master$/;"	m
pkg_openid_description	deps/ranch/erlang.mk	/^pkg_openid_description = Erlang OpenID$/;"	m
pkg_openid_fetch	deps/ranch/erlang.mk	/^pkg_openid_fetch = git$/;"	m
pkg_openid_homepage	deps/ranch/erlang.mk	/^pkg_openid_homepage = https:\/\/github.com\/brendonh\/erl_openid$/;"	m
pkg_openid_name	deps/ranch/erlang.mk	/^pkg_openid_name = openid$/;"	m
pkg_openid_repo	deps/ranch/erlang.mk	/^pkg_openid_repo = https:\/\/github.com\/brendonh\/erl_openid$/;"	m
pkg_openpoker_commit	deps/ranch/erlang.mk	/^pkg_openpoker_commit = master$/;"	m
pkg_openpoker_description	deps/ranch/erlang.mk	/^pkg_openpoker_description = Genesis Texas hold'em Game Server$/;"	m
pkg_openpoker_fetch	deps/ranch/erlang.mk	/^pkg_openpoker_fetch = git$/;"	m
pkg_openpoker_homepage	deps/ranch/erlang.mk	/^pkg_openpoker_homepage = https:\/\/github.com\/hpyhacking\/openpoker$/;"	m
pkg_openpoker_name	deps/ranch/erlang.mk	/^pkg_openpoker_name = openpoker$/;"	m
pkg_openpoker_repo	deps/ranch/erlang.mk	/^pkg_openpoker_repo = https:\/\/github.com\/hpyhacking\/openpoker$/;"	m
pkg_pal_commit	deps/ranch/erlang.mk	/^pkg_pal_commit = master$/;"	m
pkg_pal_description	deps/ranch/erlang.mk	/^pkg_pal_description = Pragmatic Authentication Library$/;"	m
pkg_pal_fetch	deps/ranch/erlang.mk	/^pkg_pal_fetch = git$/;"	m
pkg_pal_homepage	deps/ranch/erlang.mk	/^pkg_pal_homepage = https:\/\/github.com\/manifest\/pal$/;"	m
pkg_pal_name	deps/ranch/erlang.mk	/^pkg_pal_name = pal$/;"	m
pkg_pal_repo	deps/ranch/erlang.mk	/^pkg_pal_repo = https:\/\/github.com\/manifest\/pal$/;"	m
pkg_parse_trans_commit	deps/ranch/erlang.mk	/^pkg_parse_trans_commit = master$/;"	m
pkg_parse_trans_description	deps/ranch/erlang.mk	/^pkg_parse_trans_description = Parse transform utilities for Erlang$/;"	m
pkg_parse_trans_fetch	deps/ranch/erlang.mk	/^pkg_parse_trans_fetch = git$/;"	m
pkg_parse_trans_homepage	deps/ranch/erlang.mk	/^pkg_parse_trans_homepage = https:\/\/github.com\/uwiger\/parse_trans$/;"	m
pkg_parse_trans_name	deps/ranch/erlang.mk	/^pkg_parse_trans_name = parse_trans$/;"	m
pkg_parse_trans_repo	deps/ranch/erlang.mk	/^pkg_parse_trans_repo = https:\/\/github.com\/uwiger\/parse_trans$/;"	m
pkg_parsexml_commit	deps/ranch/erlang.mk	/^pkg_parsexml_commit = master$/;"	m
pkg_parsexml_description	deps/ranch/erlang.mk	/^pkg_parsexml_description = Simple DOM XML parser with convenient and very simple API$/;"	m
pkg_parsexml_fetch	deps/ranch/erlang.mk	/^pkg_parsexml_fetch = git$/;"	m
pkg_parsexml_homepage	deps/ranch/erlang.mk	/^pkg_parsexml_homepage = https:\/\/github.com\/maxlapshin\/parsexml$/;"	m
pkg_parsexml_name	deps/ranch/erlang.mk	/^pkg_parsexml_name = parsexml$/;"	m
pkg_parsexml_repo	deps/ranch/erlang.mk	/^pkg_parsexml_repo = https:\/\/github.com\/maxlapshin\/parsexml$/;"	m
pkg_pegjs_commit	deps/ranch/erlang.mk	/^pkg_pegjs_commit = master$/;"	m
pkg_pegjs_description	deps/ranch/erlang.mk	/^pkg_pegjs_description = An implementation of PEG.js grammar for Erlang.$/;"	m
pkg_pegjs_fetch	deps/ranch/erlang.mk	/^pkg_pegjs_fetch = git$/;"	m
pkg_pegjs_homepage	deps/ranch/erlang.mk	/^pkg_pegjs_homepage = https:\/\/github.com\/dmitriid\/pegjs$/;"	m
pkg_pegjs_name	deps/ranch/erlang.mk	/^pkg_pegjs_name = pegjs$/;"	m
pkg_pegjs_repo	deps/ranch/erlang.mk	/^pkg_pegjs_repo = https:\/\/github.com\/dmitriid\/pegjs$/;"	m
pkg_percept2_commit	deps/ranch/erlang.mk	/^pkg_percept2_commit = master$/;"	m
pkg_percept2_description	deps/ranch/erlang.mk	/^pkg_percept2_description = Concurrent profiling tool for Erlang$/;"	m
pkg_percept2_fetch	deps/ranch/erlang.mk	/^pkg_percept2_fetch = git$/;"	m
pkg_percept2_homepage	deps/ranch/erlang.mk	/^pkg_percept2_homepage = https:\/\/github.com\/huiqing\/percept2$/;"	m
pkg_percept2_name	deps/ranch/erlang.mk	/^pkg_percept2_name = percept2$/;"	m
pkg_percept2_repo	deps/ranch/erlang.mk	/^pkg_percept2_repo = https:\/\/github.com\/huiqing\/percept2$/;"	m
pkg_pgsql_commit	deps/ranch/erlang.mk	/^pkg_pgsql_commit = master$/;"	m
pkg_pgsql_description	deps/ranch/erlang.mk	/^pkg_pgsql_description = Erlang PostgreSQL driver$/;"	m
pkg_pgsql_fetch	deps/ranch/erlang.mk	/^pkg_pgsql_fetch = git$/;"	m
pkg_pgsql_homepage	deps/ranch/erlang.mk	/^pkg_pgsql_homepage = https:\/\/github.com\/semiocast\/pgsql$/;"	m
pkg_pgsql_name	deps/ranch/erlang.mk	/^pkg_pgsql_name = pgsql$/;"	m
pkg_pgsql_repo	deps/ranch/erlang.mk	/^pkg_pgsql_repo = https:\/\/github.com\/semiocast\/pgsql$/;"	m
pkg_pkgx_commit	deps/ranch/erlang.mk	/^pkg_pkgx_commit = master$/;"	m
pkg_pkgx_description	deps/ranch/erlang.mk	/^pkg_pkgx_description = Build .deb packages from Erlang releases$/;"	m
pkg_pkgx_fetch	deps/ranch/erlang.mk	/^pkg_pkgx_fetch = git$/;"	m
pkg_pkgx_homepage	deps/ranch/erlang.mk	/^pkg_pkgx_homepage = https:\/\/github.com\/arjan\/pkgx$/;"	m
pkg_pkgx_name	deps/ranch/erlang.mk	/^pkg_pkgx_name = pkgx$/;"	m
pkg_pkgx_repo	deps/ranch/erlang.mk	/^pkg_pkgx_repo = https:\/\/github.com\/arjan\/pkgx$/;"	m
pkg_pkt_commit	deps/ranch/erlang.mk	/^pkg_pkt_commit = master$/;"	m
pkg_pkt_description	deps/ranch/erlang.mk	/^pkg_pkt_description = Erlang network protocol library$/;"	m
pkg_pkt_fetch	deps/ranch/erlang.mk	/^pkg_pkt_fetch = git$/;"	m
pkg_pkt_homepage	deps/ranch/erlang.mk	/^pkg_pkt_homepage = https:\/\/github.com\/msantos\/pkt$/;"	m
pkg_pkt_name	deps/ranch/erlang.mk	/^pkg_pkt_name = pkt$/;"	m
pkg_pkt_repo	deps/ranch/erlang.mk	/^pkg_pkt_repo = https:\/\/github.com\/msantos\/pkt$/;"	m
pkg_plain_fsm_commit	deps/ranch/erlang.mk	/^pkg_plain_fsm_commit = master$/;"	m
pkg_plain_fsm_description	deps/ranch/erlang.mk	/^pkg_plain_fsm_description = A behaviour\/support library for writing plain Erlang FSMs.$/;"	m
pkg_plain_fsm_fetch	deps/ranch/erlang.mk	/^pkg_plain_fsm_fetch = git$/;"	m
pkg_plain_fsm_homepage	deps/ranch/erlang.mk	/^pkg_plain_fsm_homepage = https:\/\/github.com\/uwiger\/plain_fsm$/;"	m
pkg_plain_fsm_name	deps/ranch/erlang.mk	/^pkg_plain_fsm_name = plain_fsm$/;"	m
pkg_plain_fsm_repo	deps/ranch/erlang.mk	/^pkg_plain_fsm_repo = https:\/\/github.com\/uwiger\/plain_fsm$/;"	m
pkg_plumtree_commit	deps/ranch/erlang.mk	/^pkg_plumtree_commit = master$/;"	m
pkg_plumtree_description	deps/ranch/erlang.mk	/^pkg_plumtree_description = Epidemic Broadcast Trees$/;"	m
pkg_plumtree_fetch	deps/ranch/erlang.mk	/^pkg_plumtree_fetch = git$/;"	m
pkg_plumtree_homepage	deps/ranch/erlang.mk	/^pkg_plumtree_homepage = https:\/\/github.com\/helium\/plumtree$/;"	m
pkg_plumtree_name	deps/ranch/erlang.mk	/^pkg_plumtree_name = plumtree$/;"	m
pkg_plumtree_repo	deps/ranch/erlang.mk	/^pkg_plumtree_repo = https:\/\/github.com\/helium\/plumtree$/;"	m
pkg_pmod_transform_commit	deps/ranch/erlang.mk	/^pkg_pmod_transform_commit = master$/;"	m
pkg_pmod_transform_description	deps/ranch/erlang.mk	/^pkg_pmod_transform_description = Parse transform for parameterized modules$/;"	m
pkg_pmod_transform_fetch	deps/ranch/erlang.mk	/^pkg_pmod_transform_fetch = git$/;"	m
pkg_pmod_transform_homepage	deps/ranch/erlang.mk	/^pkg_pmod_transform_homepage = https:\/\/github.com\/erlang\/pmod_transform$/;"	m
pkg_pmod_transform_name	deps/ranch/erlang.mk	/^pkg_pmod_transform_name = pmod_transform$/;"	m
pkg_pmod_transform_repo	deps/ranch/erlang.mk	/^pkg_pmod_transform_repo = https:\/\/github.com\/erlang\/pmod_transform$/;"	m
pkg_pobox_commit	deps/ranch/erlang.mk	/^pkg_pobox_commit = master$/;"	m
pkg_pobox_description	deps/ranch/erlang.mk	/^pkg_pobox_description = External buffer processes to protect against mailbox overflow in Erlang$/;"	m
pkg_pobox_fetch	deps/ranch/erlang.mk	/^pkg_pobox_fetch = git$/;"	m
pkg_pobox_homepage	deps/ranch/erlang.mk	/^pkg_pobox_homepage = https:\/\/github.com\/ferd\/pobox$/;"	m
pkg_pobox_name	deps/ranch/erlang.mk	/^pkg_pobox_name = pobox$/;"	m
pkg_pobox_repo	deps/ranch/erlang.mk	/^pkg_pobox_repo = https:\/\/github.com\/ferd\/pobox$/;"	m
pkg_ponos_commit	deps/ranch/erlang.mk	/^pkg_ponos_commit = master$/;"	m
pkg_ponos_description	deps/ranch/erlang.mk	/^pkg_ponos_description = ponos is a simple yet powerful load generator written in erlang$/;"	m
pkg_ponos_fetch	deps/ranch/erlang.mk	/^pkg_ponos_fetch = git$/;"	m
pkg_ponos_homepage	deps/ranch/erlang.mk	/^pkg_ponos_homepage = https:\/\/github.com\/klarna\/ponos$/;"	m
pkg_ponos_name	deps/ranch/erlang.mk	/^pkg_ponos_name = ponos$/;"	m
pkg_ponos_repo	deps/ranch/erlang.mk	/^pkg_ponos_repo = https:\/\/github.com\/klarna\/ponos$/;"	m
pkg_poolboy_commit	deps/ranch/erlang.mk	/^pkg_poolboy_commit = master$/;"	m
pkg_poolboy_description	deps/ranch/erlang.mk	/^pkg_poolboy_description = A hunky Erlang worker pool factory$/;"	m
pkg_poolboy_fetch	deps/ranch/erlang.mk	/^pkg_poolboy_fetch = git$/;"	m
pkg_poolboy_homepage	deps/ranch/erlang.mk	/^pkg_poolboy_homepage = https:\/\/github.com\/devinus\/poolboy$/;"	m
pkg_poolboy_name	deps/ranch/erlang.mk	/^pkg_poolboy_name = poolboy$/;"	m
pkg_poolboy_repo	deps/ranch/erlang.mk	/^pkg_poolboy_repo = https:\/\/github.com\/devinus\/poolboy$/;"	m
pkg_pooler_commit	deps/ranch/erlang.mk	/^pkg_pooler_commit = master$/;"	m
pkg_pooler_description	deps/ranch/erlang.mk	/^pkg_pooler_description = An OTP Process Pool Application$/;"	m
pkg_pooler_fetch	deps/ranch/erlang.mk	/^pkg_pooler_fetch = git$/;"	m
pkg_pooler_homepage	deps/ranch/erlang.mk	/^pkg_pooler_homepage = https:\/\/github.com\/seth\/pooler$/;"	m
pkg_pooler_name	deps/ranch/erlang.mk	/^pkg_pooler_name = pooler$/;"	m
pkg_pooler_repo	deps/ranch/erlang.mk	/^pkg_pooler_repo = https:\/\/github.com\/seth\/pooler$/;"	m
pkg_pqueue_commit	deps/ranch/erlang.mk	/^pkg_pqueue_commit = master$/;"	m
pkg_pqueue_description	deps/ranch/erlang.mk	/^pkg_pqueue_description = Erlang Priority Queues$/;"	m
pkg_pqueue_fetch	deps/ranch/erlang.mk	/^pkg_pqueue_fetch = git$/;"	m
pkg_pqueue_homepage	deps/ranch/erlang.mk	/^pkg_pqueue_homepage = https:\/\/github.com\/okeuday\/pqueue$/;"	m
pkg_pqueue_name	deps/ranch/erlang.mk	/^pkg_pqueue_name = pqueue$/;"	m
pkg_pqueue_repo	deps/ranch/erlang.mk	/^pkg_pqueue_repo = https:\/\/github.com\/okeuday\/pqueue$/;"	m
pkg_print	deps/ranch/erlang.mk	/^define pkg_print$/;"	m
pkg_procket_commit	deps/ranch/erlang.mk	/^pkg_procket_commit = master$/;"	m
pkg_procket_description	deps/ranch/erlang.mk	/^pkg_procket_description = Erlang interface to low level socket operations$/;"	m
pkg_procket_fetch	deps/ranch/erlang.mk	/^pkg_procket_fetch = git$/;"	m
pkg_procket_homepage	deps/ranch/erlang.mk	/^pkg_procket_homepage = http:\/\/blog.listincomprehension.com\/search\/label\/procket$/;"	m
pkg_procket_name	deps/ranch/erlang.mk	/^pkg_procket_name = procket$/;"	m
pkg_procket_repo	deps/ranch/erlang.mk	/^pkg_procket_repo = https:\/\/github.com\/msantos\/procket$/;"	m
pkg_prop_commit	deps/ranch/erlang.mk	/^pkg_prop_commit = master$/;"	m
pkg_prop_description	deps/ranch/erlang.mk	/^pkg_prop_description = An Erlang code scaffolding and generator system.$/;"	m
pkg_prop_fetch	deps/ranch/erlang.mk	/^pkg_prop_fetch = git$/;"	m
pkg_prop_homepage	deps/ranch/erlang.mk	/^pkg_prop_homepage = https:\/\/github.com\/nuex\/prop$/;"	m
pkg_prop_name	deps/ranch/erlang.mk	/^pkg_prop_name = prop$/;"	m
pkg_prop_repo	deps/ranch/erlang.mk	/^pkg_prop_repo = https:\/\/github.com\/nuex\/prop$/;"	m
pkg_proper_commit	deps/ranch/erlang.mk	/^pkg_proper_commit = master$/;"	m
pkg_proper_description	deps/ranch/erlang.mk	/^pkg_proper_description = PropEr: a QuickCheck-inspired property-based testing tool for Erlang.$/;"	m
pkg_proper_fetch	deps/ranch/erlang.mk	/^pkg_proper_fetch = git$/;"	m
pkg_proper_homepage	deps/ranch/erlang.mk	/^pkg_proper_homepage = http:\/\/proper.softlab.ntua.gr$/;"	m
pkg_proper_name	deps/ranch/erlang.mk	/^pkg_proper_name = proper$/;"	m
pkg_proper_repo	deps/ranch/erlang.mk	/^pkg_proper_repo = https:\/\/github.com\/manopapad\/proper$/;"	m
pkg_props_commit	deps/ranch/erlang.mk	/^pkg_props_commit = master$/;"	m
pkg_props_description	deps/ranch/erlang.mk	/^pkg_props_description = Property structure library$/;"	m
pkg_props_fetch	deps/ranch/erlang.mk	/^pkg_props_fetch = git$/;"	m
pkg_props_homepage	deps/ranch/erlang.mk	/^pkg_props_homepage = https:\/\/github.com\/greyarea\/props$/;"	m
pkg_props_name	deps/ranch/erlang.mk	/^pkg_props_name = props$/;"	m
pkg_props_repo	deps/ranch/erlang.mk	/^pkg_props_repo = https:\/\/github.com\/greyarea\/props$/;"	m
pkg_protobuffs_commit	deps/ranch/erlang.mk	/^pkg_protobuffs_commit = master$/;"	m
pkg_protobuffs_description	deps/ranch/erlang.mk	/^pkg_protobuffs_description = An implementation of Google's Protocol Buffers for Erlang, based on ngerakines\/erlang_protobuffs.$/;"	m
pkg_protobuffs_fetch	deps/ranch/erlang.mk	/^pkg_protobuffs_fetch = git$/;"	m
pkg_protobuffs_homepage	deps/ranch/erlang.mk	/^pkg_protobuffs_homepage = https:\/\/github.com\/basho\/erlang_protobuffs$/;"	m
pkg_protobuffs_name	deps/ranch/erlang.mk	/^pkg_protobuffs_name = protobuffs$/;"	m
pkg_protobuffs_repo	deps/ranch/erlang.mk	/^pkg_protobuffs_repo = https:\/\/github.com\/basho\/erlang_protobuffs$/;"	m
pkg_psycho_commit	deps/ranch/erlang.mk	/^pkg_psycho_commit = master$/;"	m
pkg_psycho_description	deps/ranch/erlang.mk	/^pkg_psycho_description = HTTP server that provides a WSGI-like interface for applications and middleware.$/;"	m
pkg_psycho_fetch	deps/ranch/erlang.mk	/^pkg_psycho_fetch = git$/;"	m
pkg_psycho_homepage	deps/ranch/erlang.mk	/^pkg_psycho_homepage = https:\/\/github.com\/gar1t\/psycho$/;"	m
pkg_psycho_name	deps/ranch/erlang.mk	/^pkg_psycho_name = psycho$/;"	m
pkg_psycho_repo	deps/ranch/erlang.mk	/^pkg_psycho_repo = https:\/\/github.com\/gar1t\/psycho$/;"	m
pkg_purity_commit	deps/ranch/erlang.mk	/^pkg_purity_commit = master$/;"	m
pkg_purity_description	deps/ranch/erlang.mk	/^pkg_purity_description = A side-effect analyzer for Erlang$/;"	m
pkg_purity_fetch	deps/ranch/erlang.mk	/^pkg_purity_fetch = git$/;"	m
pkg_purity_homepage	deps/ranch/erlang.mk	/^pkg_purity_homepage = https:\/\/github.com\/mpitid\/purity$/;"	m
pkg_purity_name	deps/ranch/erlang.mk	/^pkg_purity_name = purity$/;"	m
pkg_purity_repo	deps/ranch/erlang.mk	/^pkg_purity_repo = https:\/\/github.com\/mpitid\/purity$/;"	m
pkg_push_service_commit	deps/ranch/erlang.mk	/^pkg_push_service_commit = master$/;"	m
pkg_push_service_description	deps/ranch/erlang.mk	/^pkg_push_service_description = Push service$/;"	m
pkg_push_service_fetch	deps/ranch/erlang.mk	/^pkg_push_service_fetch = git$/;"	m
pkg_push_service_homepage	deps/ranch/erlang.mk	/^pkg_push_service_homepage = https:\/\/github.com\/hairyhum\/push_service$/;"	m
pkg_push_service_name	deps/ranch/erlang.mk	/^pkg_push_service_name = push_service$/;"	m
pkg_push_service_repo	deps/ranch/erlang.mk	/^pkg_push_service_repo = https:\/\/github.com\/hairyhum\/push_service$/;"	m
pkg_qdate_commit	deps/ranch/erlang.mk	/^pkg_qdate_commit = master$/;"	m
pkg_qdate_description	deps/ranch/erlang.mk	/^pkg_qdate_description = Date, time, and timezone parsing, formatting, and conversion for Erlang.$/;"	m
pkg_qdate_fetch	deps/ranch/erlang.mk	/^pkg_qdate_fetch = git$/;"	m
pkg_qdate_homepage	deps/ranch/erlang.mk	/^pkg_qdate_homepage = https:\/\/github.com\/choptastic\/qdate$/;"	m
pkg_qdate_name	deps/ranch/erlang.mk	/^pkg_qdate_name = qdate$/;"	m
pkg_qdate_repo	deps/ranch/erlang.mk	/^pkg_qdate_repo = https:\/\/github.com\/choptastic\/qdate$/;"	m
pkg_qrcode_commit	deps/ranch/erlang.mk	/^pkg_qrcode_commit = master$/;"	m
pkg_qrcode_description	deps/ranch/erlang.mk	/^pkg_qrcode_description = QR Code encoder in Erlang$/;"	m
pkg_qrcode_fetch	deps/ranch/erlang.mk	/^pkg_qrcode_fetch = git$/;"	m
pkg_qrcode_homepage	deps/ranch/erlang.mk	/^pkg_qrcode_homepage = https:\/\/github.com\/komone\/qrcode$/;"	m
pkg_qrcode_name	deps/ranch/erlang.mk	/^pkg_qrcode_name = qrcode$/;"	m
pkg_qrcode_repo	deps/ranch/erlang.mk	/^pkg_qrcode_repo = https:\/\/github.com\/komone\/qrcode$/;"	m
pkg_quest_commit	deps/ranch/erlang.mk	/^pkg_quest_commit = master$/;"	m
pkg_quest_description	deps/ranch/erlang.mk	/^pkg_quest_description = Learn Erlang through this set of challenges. An interactive system for getting to know Erlang.$/;"	m
pkg_quest_fetch	deps/ranch/erlang.mk	/^pkg_quest_fetch = git$/;"	m
pkg_quest_homepage	deps/ranch/erlang.mk	/^pkg_quest_homepage = https:\/\/github.com\/eriksoe\/ErlangQuest$/;"	m
pkg_quest_name	deps/ranch/erlang.mk	/^pkg_quest_name = quest$/;"	m
pkg_quest_repo	deps/ranch/erlang.mk	/^pkg_quest_repo = https:\/\/github.com\/eriksoe\/ErlangQuest$/;"	m
pkg_quickrand_commit	deps/ranch/erlang.mk	/^pkg_quickrand_commit = master$/;"	m
pkg_quickrand_description	deps/ranch/erlang.mk	/^pkg_quickrand_description = Quick Erlang Random Number Generation$/;"	m
pkg_quickrand_fetch	deps/ranch/erlang.mk	/^pkg_quickrand_fetch = git$/;"	m
pkg_quickrand_homepage	deps/ranch/erlang.mk	/^pkg_quickrand_homepage = https:\/\/github.com\/okeuday\/quickrand$/;"	m
pkg_quickrand_name	deps/ranch/erlang.mk	/^pkg_quickrand_name = quickrand$/;"	m
pkg_quickrand_repo	deps/ranch/erlang.mk	/^pkg_quickrand_repo = https:\/\/github.com\/okeuday\/quickrand$/;"	m
pkg_rabbit_commit	deps/ranch/erlang.mk	/^pkg_rabbit_commit = master$/;"	m
pkg_rabbit_description	deps/ranch/erlang.mk	/^pkg_rabbit_description = RabbitMQ Server$/;"	m
pkg_rabbit_exchange_type_riak_commit	deps/ranch/erlang.mk	/^pkg_rabbit_exchange_type_riak_commit = master$/;"	m
pkg_rabbit_exchange_type_riak_description	deps/ranch/erlang.mk	/^pkg_rabbit_exchange_type_riak_description = Custom RabbitMQ exchange type for sticking messages in Riak$/;"	m
pkg_rabbit_exchange_type_riak_fetch	deps/ranch/erlang.mk	/^pkg_rabbit_exchange_type_riak_fetch = git$/;"	m
pkg_rabbit_exchange_type_riak_homepage	deps/ranch/erlang.mk	/^pkg_rabbit_exchange_type_riak_homepage = https:\/\/github.com\/jbrisbin\/riak-exchange$/;"	m
pkg_rabbit_exchange_type_riak_name	deps/ranch/erlang.mk	/^pkg_rabbit_exchange_type_riak_name = rabbit_exchange_type_riak$/;"	m
pkg_rabbit_exchange_type_riak_repo	deps/ranch/erlang.mk	/^pkg_rabbit_exchange_type_riak_repo = https:\/\/github.com\/jbrisbin\/riak-exchange$/;"	m
pkg_rabbit_fetch	deps/ranch/erlang.mk	/^pkg_rabbit_fetch = git$/;"	m
pkg_rabbit_homepage	deps/ranch/erlang.mk	/^pkg_rabbit_homepage = https:\/\/www.rabbitmq.com\/$/;"	m
pkg_rabbit_name	deps/ranch/erlang.mk	/^pkg_rabbit_name = rabbit$/;"	m
pkg_rabbit_repo	deps/ranch/erlang.mk	/^pkg_rabbit_repo = https:\/\/github.com\/rabbitmq\/rabbitmq-server.git$/;"	m
pkg_rack_commit	deps/ranch/erlang.mk	/^pkg_rack_commit = master$/;"	m
pkg_rack_description	deps/ranch/erlang.mk	/^pkg_rack_description = Rack handler for erlang$/;"	m
pkg_rack_fetch	deps/ranch/erlang.mk	/^pkg_rack_fetch = git$/;"	m
pkg_rack_homepage	deps/ranch/erlang.mk	/^pkg_rack_homepage = https:\/\/github.com\/erlyvideo\/rack$/;"	m
pkg_rack_name	deps/ranch/erlang.mk	/^pkg_rack_name = rack$/;"	m
pkg_rack_repo	deps/ranch/erlang.mk	/^pkg_rack_repo = https:\/\/github.com\/erlyvideo\/rack$/;"	m
pkg_radierl_commit	deps/ranch/erlang.mk	/^pkg_radierl_commit = master$/;"	m
pkg_radierl_description	deps/ranch/erlang.mk	/^pkg_radierl_description = RADIUS protocol stack implemented in Erlang.$/;"	m
pkg_radierl_fetch	deps/ranch/erlang.mk	/^pkg_radierl_fetch = git$/;"	m
pkg_radierl_homepage	deps/ranch/erlang.mk	/^pkg_radierl_homepage = https:\/\/github.com\/vances\/radierl$/;"	m
pkg_radierl_name	deps/ranch/erlang.mk	/^pkg_radierl_name = radierl$/;"	m
pkg_radierl_repo	deps/ranch/erlang.mk	/^pkg_radierl_repo = https:\/\/github.com\/vances\/radierl$/;"	m
pkg_rafter_commit	deps/ranch/erlang.mk	/^pkg_rafter_commit = master$/;"	m
pkg_rafter_description	deps/ranch/erlang.mk	/^pkg_rafter_description = An Erlang library application which implements the Raft consensus protocol$/;"	m
pkg_rafter_fetch	deps/ranch/erlang.mk	/^pkg_rafter_fetch = git$/;"	m
pkg_rafter_homepage	deps/ranch/erlang.mk	/^pkg_rafter_homepage = https:\/\/github.com\/andrewjstone\/rafter$/;"	m
pkg_rafter_name	deps/ranch/erlang.mk	/^pkg_rafter_name = rafter$/;"	m
pkg_rafter_repo	deps/ranch/erlang.mk	/^pkg_rafter_repo = https:\/\/github.com\/andrewjstone\/rafter$/;"	m
pkg_ranch_commit	deps/ranch/erlang.mk	/^pkg_ranch_commit = 1.2.1$/;"	m
pkg_ranch_description	deps/ranch/erlang.mk	/^pkg_ranch_description = Socket acceptor pool for TCP protocols.$/;"	m
pkg_ranch_fetch	deps/ranch/erlang.mk	/^pkg_ranch_fetch = git$/;"	m
pkg_ranch_homepage	deps/ranch/erlang.mk	/^pkg_ranch_homepage = http:\/\/ninenines.eu$/;"	m
pkg_ranch_name	deps/ranch/erlang.mk	/^pkg_ranch_name = ranch$/;"	m
pkg_ranch_repo	deps/ranch/erlang.mk	/^pkg_ranch_repo = https:\/\/github.com\/ninenines\/ranch$/;"	m
pkg_rbeacon_commit	deps/ranch/erlang.mk	/^pkg_rbeacon_commit = master$/;"	m
pkg_rbeacon_description	deps/ranch/erlang.mk	/^pkg_rbeacon_description = LAN discovery and presence in Erlang.$/;"	m
pkg_rbeacon_fetch	deps/ranch/erlang.mk	/^pkg_rbeacon_fetch = git$/;"	m
pkg_rbeacon_homepage	deps/ranch/erlang.mk	/^pkg_rbeacon_homepage = https:\/\/github.com\/refuge\/rbeacon$/;"	m
pkg_rbeacon_name	deps/ranch/erlang.mk	/^pkg_rbeacon_name = rbeacon$/;"	m
pkg_rbeacon_repo	deps/ranch/erlang.mk	/^pkg_rbeacon_repo = https:\/\/github.com\/refuge\/rbeacon$/;"	m
pkg_rebar_commit	deps/ranch/erlang.mk	/^pkg_rebar_commit = master$/;"	m
pkg_rebar_description	deps/ranch/erlang.mk	/^pkg_rebar_description = Erlang build tool that makes it easy to compile and test Erlang applications, port drivers and releases.$/;"	m
pkg_rebar_fetch	deps/ranch/erlang.mk	/^pkg_rebar_fetch = git$/;"	m
pkg_rebar_homepage	deps/ranch/erlang.mk	/^pkg_rebar_homepage = http:\/\/www.rebar3.org$/;"	m
pkg_rebar_name	deps/ranch/erlang.mk	/^pkg_rebar_name = rebar$/;"	m
pkg_rebar_repo	deps/ranch/erlang.mk	/^pkg_rebar_repo = https:\/\/github.com\/rebar\/rebar3$/;"	m
pkg_rebus_commit	deps/ranch/erlang.mk	/^pkg_rebus_commit = master$/;"	m
pkg_rebus_description	deps/ranch/erlang.mk	/^pkg_rebus_description = A stupid simple, internal, pub\/sub event bus written in- and for Erlang.$/;"	m
pkg_rebus_fetch	deps/ranch/erlang.mk	/^pkg_rebus_fetch = git$/;"	m
pkg_rebus_homepage	deps/ranch/erlang.mk	/^pkg_rebus_homepage = https:\/\/github.com\/olle\/rebus$/;"	m
pkg_rebus_name	deps/ranch/erlang.mk	/^pkg_rebus_name = rebus$/;"	m
pkg_rebus_repo	deps/ranch/erlang.mk	/^pkg_rebus_repo = https:\/\/github.com\/olle\/rebus$/;"	m
pkg_rec2json_commit	deps/ranch/erlang.mk	/^pkg_rec2json_commit = master$/;"	m
pkg_rec2json_description	deps/ranch/erlang.mk	/^pkg_rec2json_description = Compile erlang record definitions into modules to convert them to\/from json easily.$/;"	m
pkg_rec2json_fetch	deps/ranch/erlang.mk	/^pkg_rec2json_fetch = git$/;"	m
pkg_rec2json_homepage	deps/ranch/erlang.mk	/^pkg_rec2json_homepage = https:\/\/github.com\/lordnull\/rec2json$/;"	m
pkg_rec2json_name	deps/ranch/erlang.mk	/^pkg_rec2json_name = rec2json$/;"	m
pkg_rec2json_repo	deps/ranch/erlang.mk	/^pkg_rec2json_repo = https:\/\/github.com\/lordnull\/rec2json$/;"	m
pkg_recon_commit	deps/ranch/erlang.mk	/^pkg_recon_commit = master$/;"	m
pkg_recon_description	deps/ranch/erlang.mk	/^pkg_recon_description = Collection of functions and scripts to debug Erlang in production.$/;"	m
pkg_recon_fetch	deps/ranch/erlang.mk	/^pkg_recon_fetch = git$/;"	m
pkg_recon_homepage	deps/ranch/erlang.mk	/^pkg_recon_homepage = https:\/\/github.com\/ferd\/recon$/;"	m
pkg_recon_name	deps/ranch/erlang.mk	/^pkg_recon_name = recon$/;"	m
pkg_recon_repo	deps/ranch/erlang.mk	/^pkg_recon_repo = https:\/\/github.com\/ferd\/recon$/;"	m
pkg_record_info_commit	deps/ranch/erlang.mk	/^pkg_record_info_commit = master$/;"	m
pkg_record_info_description	deps/ranch/erlang.mk	/^pkg_record_info_description = Convert between record and proplist$/;"	m
pkg_record_info_fetch	deps/ranch/erlang.mk	/^pkg_record_info_fetch = git$/;"	m
pkg_record_info_homepage	deps/ranch/erlang.mk	/^pkg_record_info_homepage = https:\/\/github.com\/bipthelin\/erlang-record_info$/;"	m
pkg_record_info_name	deps/ranch/erlang.mk	/^pkg_record_info_name = record_info$/;"	m
pkg_record_info_repo	deps/ranch/erlang.mk	/^pkg_record_info_repo = https:\/\/github.com\/bipthelin\/erlang-record_info$/;"	m
pkg_redgrid_commit	deps/ranch/erlang.mk	/^pkg_redgrid_commit = master$/;"	m
pkg_redgrid_description	deps/ranch/erlang.mk	/^pkg_redgrid_description = automatic Erlang node discovery via redis$/;"	m
pkg_redgrid_fetch	deps/ranch/erlang.mk	/^pkg_redgrid_fetch = git$/;"	m
pkg_redgrid_homepage	deps/ranch/erlang.mk	/^pkg_redgrid_homepage = https:\/\/github.com\/jkvor\/redgrid$/;"	m
pkg_redgrid_name	deps/ranch/erlang.mk	/^pkg_redgrid_name = redgrid$/;"	m
pkg_redgrid_repo	deps/ranch/erlang.mk	/^pkg_redgrid_repo = https:\/\/github.com\/jkvor\/redgrid$/;"	m
pkg_redo_commit	deps/ranch/erlang.mk	/^pkg_redo_commit = master$/;"	m
pkg_redo_description	deps/ranch/erlang.mk	/^pkg_redo_description = pipelined erlang redis client$/;"	m
pkg_redo_fetch	deps/ranch/erlang.mk	/^pkg_redo_fetch = git$/;"	m
pkg_redo_homepage	deps/ranch/erlang.mk	/^pkg_redo_homepage = https:\/\/github.com\/jkvor\/redo$/;"	m
pkg_redo_name	deps/ranch/erlang.mk	/^pkg_redo_name = redo$/;"	m
pkg_redo_repo	deps/ranch/erlang.mk	/^pkg_redo_repo = https:\/\/github.com\/jkvor\/redo$/;"	m
pkg_reload_mk_commit	deps/ranch/erlang.mk	/^pkg_reload_mk_commit = master$/;"	m
pkg_reload_mk_description	deps/ranch/erlang.mk	/^pkg_reload_mk_description = Live reload plugin for erlang.mk.$/;"	m
pkg_reload_mk_fetch	deps/ranch/erlang.mk	/^pkg_reload_mk_fetch = git$/;"	m
pkg_reload_mk_homepage	deps/ranch/erlang.mk	/^pkg_reload_mk_homepage = https:\/\/github.com\/bullno1\/reload.mk$/;"	m
pkg_reload_mk_name	deps/ranch/erlang.mk	/^pkg_reload_mk_name = reload_mk$/;"	m
pkg_reload_mk_repo	deps/ranch/erlang.mk	/^pkg_reload_mk_repo = https:\/\/github.com\/bullno1\/reload.mk$/;"	m
pkg_reltool_util_commit	deps/ranch/erlang.mk	/^pkg_reltool_util_commit = master$/;"	m
pkg_reltool_util_description	deps/ranch/erlang.mk	/^pkg_reltool_util_description = Erlang reltool utility functionality application$/;"	m
pkg_reltool_util_fetch	deps/ranch/erlang.mk	/^pkg_reltool_util_fetch = git$/;"	m
pkg_reltool_util_homepage	deps/ranch/erlang.mk	/^pkg_reltool_util_homepage = https:\/\/github.com\/okeuday\/reltool_util$/;"	m
pkg_reltool_util_name	deps/ranch/erlang.mk	/^pkg_reltool_util_name = reltool_util$/;"	m
pkg_reltool_util_repo	deps/ranch/erlang.mk	/^pkg_reltool_util_repo = https:\/\/github.com\/okeuday\/reltool_util$/;"	m
pkg_relx_commit	deps/ranch/erlang.mk	/^pkg_relx_commit = master$/;"	m
pkg_relx_description	deps/ranch/erlang.mk	/^pkg_relx_description = Sane, simple release creation for Erlang$/;"	m
pkg_relx_fetch	deps/ranch/erlang.mk	/^pkg_relx_fetch = git$/;"	m
pkg_relx_homepage	deps/ranch/erlang.mk	/^pkg_relx_homepage = https:\/\/github.com\/erlware\/relx$/;"	m
pkg_relx_name	deps/ranch/erlang.mk	/^pkg_relx_name = relx$/;"	m
pkg_relx_repo	deps/ranch/erlang.mk	/^pkg_relx_repo = https:\/\/github.com\/erlware\/relx$/;"	m
pkg_resource_discovery_commit	deps/ranch/erlang.mk	/^pkg_resource_discovery_commit = master$/;"	m
pkg_resource_discovery_description	deps/ranch/erlang.mk	/^pkg_resource_discovery_description = An application used to dynamically discover resources present in an Erlang node cluster.$/;"	m
pkg_resource_discovery_fetch	deps/ranch/erlang.mk	/^pkg_resource_discovery_fetch = git$/;"	m
pkg_resource_discovery_homepage	deps/ranch/erlang.mk	/^pkg_resource_discovery_homepage = http:\/\/erlware.org\/$/;"	m
pkg_resource_discovery_name	deps/ranch/erlang.mk	/^pkg_resource_discovery_name = resource_discovery$/;"	m
pkg_resource_discovery_repo	deps/ranch/erlang.mk	/^pkg_resource_discovery_repo = https:\/\/github.com\/erlware\/resource_discovery$/;"	m
pkg_restc_commit	deps/ranch/erlang.mk	/^pkg_restc_commit = master$/;"	m
pkg_restc_description	deps/ranch/erlang.mk	/^pkg_restc_description = Erlang Rest Client$/;"	m
pkg_restc_fetch	deps/ranch/erlang.mk	/^pkg_restc_fetch = git$/;"	m
pkg_restc_homepage	deps/ranch/erlang.mk	/^pkg_restc_homepage = https:\/\/github.com\/kivra\/restclient$/;"	m
pkg_restc_name	deps/ranch/erlang.mk	/^pkg_restc_name = restc$/;"	m
pkg_restc_repo	deps/ranch/erlang.mk	/^pkg_restc_repo = https:\/\/github.com\/kivra\/restclient$/;"	m
pkg_rfc4627_jsonrpc_commit	deps/ranch/erlang.mk	/^pkg_rfc4627_jsonrpc_commit = master$/;"	m
pkg_rfc4627_jsonrpc_description	deps/ranch/erlang.mk	/^pkg_rfc4627_jsonrpc_description = Erlang RFC4627 (JSON) codec and JSON-RPC server implementation.$/;"	m
pkg_rfc4627_jsonrpc_fetch	deps/ranch/erlang.mk	/^pkg_rfc4627_jsonrpc_fetch = git$/;"	m
pkg_rfc4627_jsonrpc_homepage	deps/ranch/erlang.mk	/^pkg_rfc4627_jsonrpc_homepage = https:\/\/github.com\/tonyg\/erlang-rfc4627$/;"	m
pkg_rfc4627_jsonrpc_name	deps/ranch/erlang.mk	/^pkg_rfc4627_jsonrpc_name = rfc4627_jsonrpc$/;"	m
pkg_rfc4627_jsonrpc_repo	deps/ranch/erlang.mk	/^pkg_rfc4627_jsonrpc_repo = https:\/\/github.com\/tonyg\/erlang-rfc4627$/;"	m
pkg_riak_control_commit	deps/ranch/erlang.mk	/^pkg_riak_control_commit = master$/;"	m
pkg_riak_control_description	deps/ranch/erlang.mk	/^pkg_riak_control_description = Webmachine-based administration interface for Riak.$/;"	m
pkg_riak_control_fetch	deps/ranch/erlang.mk	/^pkg_riak_control_fetch = git$/;"	m
pkg_riak_control_homepage	deps/ranch/erlang.mk	/^pkg_riak_control_homepage = https:\/\/github.com\/basho\/riak_control$/;"	m
pkg_riak_control_name	deps/ranch/erlang.mk	/^pkg_riak_control_name = riak_control$/;"	m
pkg_riak_control_repo	deps/ranch/erlang.mk	/^pkg_riak_control_repo = https:\/\/github.com\/basho\/riak_control$/;"	m
pkg_riak_core_commit	deps/ranch/erlang.mk	/^pkg_riak_core_commit = master$/;"	m
pkg_riak_core_description	deps/ranch/erlang.mk	/^pkg_riak_core_description = Distributed systems infrastructure used by Riak.$/;"	m
pkg_riak_core_fetch	deps/ranch/erlang.mk	/^pkg_riak_core_fetch = git$/;"	m
pkg_riak_core_homepage	deps/ranch/erlang.mk	/^pkg_riak_core_homepage = https:\/\/github.com\/basho\/riak_core$/;"	m
pkg_riak_core_name	deps/ranch/erlang.mk	/^pkg_riak_core_name = riak_core$/;"	m
pkg_riak_core_repo	deps/ranch/erlang.mk	/^pkg_riak_core_repo = https:\/\/github.com\/basho\/riak_core$/;"	m
pkg_riak_dt_commit	deps/ranch/erlang.mk	/^pkg_riak_dt_commit = master$/;"	m
pkg_riak_dt_description	deps/ranch/erlang.mk	/^pkg_riak_dt_description = Convergent replicated datatypes in Erlang$/;"	m
pkg_riak_dt_fetch	deps/ranch/erlang.mk	/^pkg_riak_dt_fetch = git$/;"	m
pkg_riak_dt_homepage	deps/ranch/erlang.mk	/^pkg_riak_dt_homepage = https:\/\/github.com\/basho\/riak_dt$/;"	m
pkg_riak_dt_name	deps/ranch/erlang.mk	/^pkg_riak_dt_name = riak_dt$/;"	m
pkg_riak_dt_repo	deps/ranch/erlang.mk	/^pkg_riak_dt_repo = https:\/\/github.com\/basho\/riak_dt$/;"	m
pkg_riak_ensemble_commit	deps/ranch/erlang.mk	/^pkg_riak_ensemble_commit = master$/;"	m
pkg_riak_ensemble_description	deps/ranch/erlang.mk	/^pkg_riak_ensemble_description = Multi-Paxos framework in Erlang$/;"	m
pkg_riak_ensemble_fetch	deps/ranch/erlang.mk	/^pkg_riak_ensemble_fetch = git$/;"	m
pkg_riak_ensemble_homepage	deps/ranch/erlang.mk	/^pkg_riak_ensemble_homepage = https:\/\/github.com\/basho\/riak_ensemble$/;"	m
pkg_riak_ensemble_name	deps/ranch/erlang.mk	/^pkg_riak_ensemble_name = riak_ensemble$/;"	m
pkg_riak_ensemble_repo	deps/ranch/erlang.mk	/^pkg_riak_ensemble_repo = https:\/\/github.com\/basho\/riak_ensemble$/;"	m
pkg_riak_kv_commit	deps/ranch/erlang.mk	/^pkg_riak_kv_commit = master$/;"	m
pkg_riak_kv_description	deps/ranch/erlang.mk	/^pkg_riak_kv_description = Riak Key\/Value Store$/;"	m
pkg_riak_kv_fetch	deps/ranch/erlang.mk	/^pkg_riak_kv_fetch = git$/;"	m
pkg_riak_kv_homepage	deps/ranch/erlang.mk	/^pkg_riak_kv_homepage = https:\/\/github.com\/basho\/riak_kv$/;"	m
pkg_riak_kv_name	deps/ranch/erlang.mk	/^pkg_riak_kv_name = riak_kv$/;"	m
pkg_riak_kv_repo	deps/ranch/erlang.mk	/^pkg_riak_kv_repo = https:\/\/github.com\/basho\/riak_kv$/;"	m
pkg_riak_pg_commit	deps/ranch/erlang.mk	/^pkg_riak_pg_commit = master$/;"	m
pkg_riak_pg_description	deps/ranch/erlang.mk	/^pkg_riak_pg_description = Distributed process groups with riak_core.$/;"	m
pkg_riak_pg_fetch	deps/ranch/erlang.mk	/^pkg_riak_pg_fetch = git$/;"	m
pkg_riak_pg_homepage	deps/ranch/erlang.mk	/^pkg_riak_pg_homepage = https:\/\/github.com\/cmeiklejohn\/riak_pg$/;"	m
pkg_riak_pg_name	deps/ranch/erlang.mk	/^pkg_riak_pg_name = riak_pg$/;"	m
pkg_riak_pg_repo	deps/ranch/erlang.mk	/^pkg_riak_pg_repo = https:\/\/github.com\/cmeiklejohn\/riak_pg$/;"	m
pkg_riak_pipe_commit	deps/ranch/erlang.mk	/^pkg_riak_pipe_commit = master$/;"	m
pkg_riak_pipe_description	deps/ranch/erlang.mk	/^pkg_riak_pipe_description = Riak Pipelines$/;"	m
pkg_riak_pipe_fetch	deps/ranch/erlang.mk	/^pkg_riak_pipe_fetch = git$/;"	m
pkg_riak_pipe_homepage	deps/ranch/erlang.mk	/^pkg_riak_pipe_homepage = https:\/\/github.com\/basho\/riak_pipe$/;"	m
pkg_riak_pipe_name	deps/ranch/erlang.mk	/^pkg_riak_pipe_name = riak_pipe$/;"	m
pkg_riak_pipe_repo	deps/ranch/erlang.mk	/^pkg_riak_pipe_repo = https:\/\/github.com\/basho\/riak_pipe$/;"	m
pkg_riak_sysmon_commit	deps/ranch/erlang.mk	/^pkg_riak_sysmon_commit = master$/;"	m
pkg_riak_sysmon_description	deps/ranch/erlang.mk	/^pkg_riak_sysmon_description = Simple OTP app for managing Erlang VM system_monitor event messages$/;"	m
pkg_riak_sysmon_fetch	deps/ranch/erlang.mk	/^pkg_riak_sysmon_fetch = git$/;"	m
pkg_riak_sysmon_homepage	deps/ranch/erlang.mk	/^pkg_riak_sysmon_homepage = https:\/\/github.com\/basho\/riak_sysmon$/;"	m
pkg_riak_sysmon_name	deps/ranch/erlang.mk	/^pkg_riak_sysmon_name = riak_sysmon$/;"	m
pkg_riak_sysmon_repo	deps/ranch/erlang.mk	/^pkg_riak_sysmon_repo = https:\/\/github.com\/basho\/riak_sysmon$/;"	m
pkg_riak_test_commit	deps/ranch/erlang.mk	/^pkg_riak_test_commit = master$/;"	m
pkg_riak_test_description	deps/ranch/erlang.mk	/^pkg_riak_test_description = I'm in your cluster, testing your riaks$/;"	m
pkg_riak_test_fetch	deps/ranch/erlang.mk	/^pkg_riak_test_fetch = git$/;"	m
pkg_riak_test_homepage	deps/ranch/erlang.mk	/^pkg_riak_test_homepage = https:\/\/github.com\/basho\/riak_test$/;"	m
pkg_riak_test_name	deps/ranch/erlang.mk	/^pkg_riak_test_name = riak_test$/;"	m
pkg_riak_test_repo	deps/ranch/erlang.mk	/^pkg_riak_test_repo = https:\/\/github.com\/basho\/riak_test$/;"	m
pkg_riakc_commit	deps/ranch/erlang.mk	/^pkg_riakc_commit = master$/;"	m
pkg_riakc_description	deps/ranch/erlang.mk	/^pkg_riakc_description = Erlang clients for Riak.$/;"	m
pkg_riakc_fetch	deps/ranch/erlang.mk	/^pkg_riakc_fetch = git$/;"	m
pkg_riakc_homepage	deps/ranch/erlang.mk	/^pkg_riakc_homepage = https:\/\/github.com\/basho\/riak-erlang-client$/;"	m
pkg_riakc_name	deps/ranch/erlang.mk	/^pkg_riakc_name = riakc$/;"	m
pkg_riakc_repo	deps/ranch/erlang.mk	/^pkg_riakc_repo = https:\/\/github.com\/basho\/riak-erlang-client$/;"	m
pkg_riakhttpc_commit	deps/ranch/erlang.mk	/^pkg_riakhttpc_commit = master$/;"	m
pkg_riakhttpc_description	deps/ranch/erlang.mk	/^pkg_riakhttpc_description = Riak Erlang client using the HTTP interface$/;"	m
pkg_riakhttpc_fetch	deps/ranch/erlang.mk	/^pkg_riakhttpc_fetch = git$/;"	m
pkg_riakhttpc_homepage	deps/ranch/erlang.mk	/^pkg_riakhttpc_homepage = https:\/\/github.com\/basho\/riak-erlang-http-client$/;"	m
pkg_riakhttpc_name	deps/ranch/erlang.mk	/^pkg_riakhttpc_name = riakhttpc$/;"	m
pkg_riakhttpc_repo	deps/ranch/erlang.mk	/^pkg_riakhttpc_repo = https:\/\/github.com\/basho\/riak-erlang-http-client$/;"	m
pkg_riaknostic_commit	deps/ranch/erlang.mk	/^pkg_riaknostic_commit = master$/;"	m
pkg_riaknostic_description	deps/ranch/erlang.mk	/^pkg_riaknostic_description = A diagnostic tool for Riak installations, to find common errors asap$/;"	m
pkg_riaknostic_fetch	deps/ranch/erlang.mk	/^pkg_riaknostic_fetch = git$/;"	m
pkg_riaknostic_homepage	deps/ranch/erlang.mk	/^pkg_riaknostic_homepage = https:\/\/github.com\/basho\/riaknostic$/;"	m
pkg_riaknostic_name	deps/ranch/erlang.mk	/^pkg_riaknostic_name = riaknostic$/;"	m
pkg_riaknostic_repo	deps/ranch/erlang.mk	/^pkg_riaknostic_repo = https:\/\/github.com\/basho\/riaknostic$/;"	m
pkg_riakpool_commit	deps/ranch/erlang.mk	/^pkg_riakpool_commit = master$/;"	m
pkg_riakpool_description	deps/ranch/erlang.mk	/^pkg_riakpool_description = erlang riak client pool$/;"	m
pkg_riakpool_fetch	deps/ranch/erlang.mk	/^pkg_riakpool_fetch = git$/;"	m
pkg_riakpool_homepage	deps/ranch/erlang.mk	/^pkg_riakpool_homepage = https:\/\/github.com\/dweldon\/riakpool$/;"	m
pkg_riakpool_name	deps/ranch/erlang.mk	/^pkg_riakpool_name = riakpool$/;"	m
pkg_riakpool_repo	deps/ranch/erlang.mk	/^pkg_riakpool_repo = https:\/\/github.com\/dweldon\/riakpool$/;"	m
pkg_rivus_cep_commit	deps/ranch/erlang.mk	/^pkg_rivus_cep_commit = master$/;"	m
pkg_rivus_cep_description	deps/ranch/erlang.mk	/^pkg_rivus_cep_description = Complex event processing in Erlang$/;"	m
pkg_rivus_cep_fetch	deps/ranch/erlang.mk	/^pkg_rivus_cep_fetch = git$/;"	m
pkg_rivus_cep_homepage	deps/ranch/erlang.mk	/^pkg_rivus_cep_homepage = https:\/\/github.com\/vascokk\/rivus_cep$/;"	m
pkg_rivus_cep_name	deps/ranch/erlang.mk	/^pkg_rivus_cep_name = rivus_cep$/;"	m
pkg_rivus_cep_repo	deps/ranch/erlang.mk	/^pkg_rivus_cep_repo = https:\/\/github.com\/vascokk\/rivus_cep$/;"	m
pkg_rlimit_commit	deps/ranch/erlang.mk	/^pkg_rlimit_commit = master$/;"	m
pkg_rlimit_description	deps/ranch/erlang.mk	/^pkg_rlimit_description = Magnus Klaar's rate limiter code from etorrent$/;"	m
pkg_rlimit_fetch	deps/ranch/erlang.mk	/^pkg_rlimit_fetch = git$/;"	m
pkg_rlimit_homepage	deps/ranch/erlang.mk	/^pkg_rlimit_homepage = https:\/\/github.com\/jlouis\/rlimit$/;"	m
pkg_rlimit_name	deps/ranch/erlang.mk	/^pkg_rlimit_name = rlimit$/;"	m
pkg_rlimit_repo	deps/ranch/erlang.mk	/^pkg_rlimit_repo = https:\/\/github.com\/jlouis\/rlimit$/;"	m
pkg_rust_mk_commit	deps/ranch/erlang.mk	/^pkg_rust_mk_commit = master$/;"	m
pkg_rust_mk_description	deps/ranch/erlang.mk	/^pkg_rust_mk_description = Build Rust crates in an Erlang application$/;"	m
pkg_rust_mk_fetch	deps/ranch/erlang.mk	/^pkg_rust_mk_fetch = git$/;"	m
pkg_rust_mk_homepage	deps/ranch/erlang.mk	/^pkg_rust_mk_homepage = https:\/\/github.com\/goertzenator\/rust.mk$/;"	m
pkg_rust_mk_name	deps/ranch/erlang.mk	/^pkg_rust_mk_name = rust_mk$/;"	m
pkg_rust_mk_repo	deps/ranch/erlang.mk	/^pkg_rust_mk_repo = https:\/\/github.com\/goertzenator\/rust.mk$/;"	m
pkg_safetyvalve_commit	deps/ranch/erlang.mk	/^pkg_safetyvalve_commit = master$/;"	m
pkg_safetyvalve_description	deps/ranch/erlang.mk	/^pkg_safetyvalve_description = A safety valve for your erlang node$/;"	m
pkg_safetyvalve_fetch	deps/ranch/erlang.mk	/^pkg_safetyvalve_fetch = git$/;"	m
pkg_safetyvalve_homepage	deps/ranch/erlang.mk	/^pkg_safetyvalve_homepage = https:\/\/github.com\/jlouis\/safetyvalve$/;"	m
pkg_safetyvalve_name	deps/ranch/erlang.mk	/^pkg_safetyvalve_name = safetyvalve$/;"	m
pkg_safetyvalve_repo	deps/ranch/erlang.mk	/^pkg_safetyvalve_repo = https:\/\/github.com\/jlouis\/safetyvalve$/;"	m
pkg_seestar_commit	deps/ranch/erlang.mk	/^pkg_seestar_commit = master$/;"	m
pkg_seestar_description	deps/ranch/erlang.mk	/^pkg_seestar_description = The Erlang client for Cassandra 1.2+ binary protocol$/;"	m
pkg_seestar_fetch	deps/ranch/erlang.mk	/^pkg_seestar_fetch = git$/;"	m
pkg_seestar_homepage	deps/ranch/erlang.mk	/^pkg_seestar_homepage = https:\/\/github.com\/iamaleksey\/seestar$/;"	m
pkg_seestar_name	deps/ranch/erlang.mk	/^pkg_seestar_name = seestar$/;"	m
pkg_seestar_repo	deps/ranch/erlang.mk	/^pkg_seestar_repo = https:\/\/github.com\/iamaleksey\/seestar$/;"	m
pkg_service_commit	deps/ranch/erlang.mk	/^pkg_service_commit = master$/;"	m
pkg_service_description	deps/ranch/erlang.mk	/^pkg_service_description = A minimal Erlang behavior for creating CloudI internal services$/;"	m
pkg_service_fetch	deps/ranch/erlang.mk	/^pkg_service_fetch = git$/;"	m
pkg_service_homepage	deps/ranch/erlang.mk	/^pkg_service_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_service_name	deps/ranch/erlang.mk	/^pkg_service_name = service$/;"	m
pkg_service_repo	deps/ranch/erlang.mk	/^pkg_service_repo = https:\/\/github.com\/CloudI\/service$/;"	m
pkg_setup_commit	deps/ranch/erlang.mk	/^pkg_setup_commit = master$/;"	m
pkg_setup_description	deps/ranch/erlang.mk	/^pkg_setup_description = Generic setup utility for Erlang-based systems$/;"	m
pkg_setup_fetch	deps/ranch/erlang.mk	/^pkg_setup_fetch = git$/;"	m
pkg_setup_homepage	deps/ranch/erlang.mk	/^pkg_setup_homepage = https:\/\/github.com\/uwiger\/setup$/;"	m
pkg_setup_name	deps/ranch/erlang.mk	/^pkg_setup_name = setup$/;"	m
pkg_setup_repo	deps/ranch/erlang.mk	/^pkg_setup_repo = https:\/\/github.com\/uwiger\/setup$/;"	m
pkg_sext_commit	deps/ranch/erlang.mk	/^pkg_sext_commit = master$/;"	m
pkg_sext_description	deps/ranch/erlang.mk	/^pkg_sext_description = Sortable Erlang Term Serialization$/;"	m
pkg_sext_fetch	deps/ranch/erlang.mk	/^pkg_sext_fetch = git$/;"	m
pkg_sext_homepage	deps/ranch/erlang.mk	/^pkg_sext_homepage = https:\/\/github.com\/uwiger\/sext$/;"	m
pkg_sext_name	deps/ranch/erlang.mk	/^pkg_sext_name = sext$/;"	m
pkg_sext_repo	deps/ranch/erlang.mk	/^pkg_sext_repo = https:\/\/github.com\/uwiger\/sext$/;"	m
pkg_sfmt_commit	deps/ranch/erlang.mk	/^pkg_sfmt_commit = master$/;"	m
pkg_sfmt_description	deps/ranch/erlang.mk	/^pkg_sfmt_description = SFMT pseudo random number generator for Erlang.$/;"	m
pkg_sfmt_fetch	deps/ranch/erlang.mk	/^pkg_sfmt_fetch = git$/;"	m
pkg_sfmt_homepage	deps/ranch/erlang.mk	/^pkg_sfmt_homepage = https:\/\/github.com\/jj1bdx\/sfmt-erlang$/;"	m
pkg_sfmt_name	deps/ranch/erlang.mk	/^pkg_sfmt_name = sfmt$/;"	m
pkg_sfmt_repo	deps/ranch/erlang.mk	/^pkg_sfmt_repo = https:\/\/github.com\/jj1bdx\/sfmt-erlang$/;"	m
pkg_sgte_commit	deps/ranch/erlang.mk	/^pkg_sgte_commit = master$/;"	m
pkg_sgte_description	deps/ranch/erlang.mk	/^pkg_sgte_description = A simple Erlang Template Engine$/;"	m
pkg_sgte_fetch	deps/ranch/erlang.mk	/^pkg_sgte_fetch = git$/;"	m
pkg_sgte_homepage	deps/ranch/erlang.mk	/^pkg_sgte_homepage = https:\/\/github.com\/filippo\/sgte$/;"	m
pkg_sgte_name	deps/ranch/erlang.mk	/^pkg_sgte_name = sgte$/;"	m
pkg_sgte_repo	deps/ranch/erlang.mk	/^pkg_sgte_repo = https:\/\/github.com\/filippo\/sgte$/;"	m
pkg_sheriff_commit	deps/ranch/erlang.mk	/^pkg_sheriff_commit = master$/;"	m
pkg_sheriff_description	deps/ranch/erlang.mk	/^pkg_sheriff_description = Parse transform for type based validation.$/;"	m
pkg_sheriff_fetch	deps/ranch/erlang.mk	/^pkg_sheriff_fetch = git$/;"	m
pkg_sheriff_homepage	deps/ranch/erlang.mk	/^pkg_sheriff_homepage = http:\/\/ninenines.eu$/;"	m
pkg_sheriff_name	deps/ranch/erlang.mk	/^pkg_sheriff_name = sheriff$/;"	m
pkg_sheriff_repo	deps/ranch/erlang.mk	/^pkg_sheriff_repo = https:\/\/github.com\/extend\/sheriff$/;"	m
pkg_shotgun_commit	deps/ranch/erlang.mk	/^pkg_shotgun_commit = master$/;"	m
pkg_shotgun_description	deps/ranch/erlang.mk	/^pkg_shotgun_description = better than just a gun$/;"	m
pkg_shotgun_fetch	deps/ranch/erlang.mk	/^pkg_shotgun_fetch = git$/;"	m
pkg_shotgun_homepage	deps/ranch/erlang.mk	/^pkg_shotgun_homepage = https:\/\/github.com\/inaka\/shotgun$/;"	m
pkg_shotgun_name	deps/ranch/erlang.mk	/^pkg_shotgun_name = shotgun$/;"	m
pkg_shotgun_repo	deps/ranch/erlang.mk	/^pkg_shotgun_repo = https:\/\/github.com\/inaka\/shotgun$/;"	m
pkg_sidejob_commit	deps/ranch/erlang.mk	/^pkg_sidejob_commit = master$/;"	m
pkg_sidejob_description	deps/ranch/erlang.mk	/^pkg_sidejob_description = Parallel worker and capacity limiting library for Erlang$/;"	m
pkg_sidejob_fetch	deps/ranch/erlang.mk	/^pkg_sidejob_fetch = git$/;"	m
pkg_sidejob_homepage	deps/ranch/erlang.mk	/^pkg_sidejob_homepage = https:\/\/github.com\/basho\/sidejob$/;"	m
pkg_sidejob_name	deps/ranch/erlang.mk	/^pkg_sidejob_name = sidejob$/;"	m
pkg_sidejob_repo	deps/ranch/erlang.mk	/^pkg_sidejob_repo = https:\/\/github.com\/basho\/sidejob$/;"	m
pkg_sieve_commit	deps/ranch/erlang.mk	/^pkg_sieve_commit = master$/;"	m
pkg_sieve_description	deps/ranch/erlang.mk	/^pkg_sieve_description = sieve is a simple TCP routing proxy (layer 7) in erlang$/;"	m
pkg_sieve_fetch	deps/ranch/erlang.mk	/^pkg_sieve_fetch = git$/;"	m
pkg_sieve_homepage	deps/ranch/erlang.mk	/^pkg_sieve_homepage = https:\/\/github.com\/benoitc\/sieve$/;"	m
pkg_sieve_name	deps/ranch/erlang.mk	/^pkg_sieve_name = sieve$/;"	m
pkg_sieve_repo	deps/ranch/erlang.mk	/^pkg_sieve_repo = https:\/\/github.com\/benoitc\/sieve$/;"	m
pkg_sighandler_commit	deps/ranch/erlang.mk	/^pkg_sighandler_commit = master$/;"	m
pkg_sighandler_description	deps/ranch/erlang.mk	/^pkg_sighandler_description = Handle UNIX signals in Er    lang$/;"	m
pkg_sighandler_fetch	deps/ranch/erlang.mk	/^pkg_sighandler_fetch = git$/;"	m
pkg_sighandler_homepage	deps/ranch/erlang.mk	/^pkg_sighandler_homepage = https:\/\/github.com\/jkingsbery\/sighandler$/;"	m
pkg_sighandler_name	deps/ranch/erlang.mk	/^pkg_sighandler_name = sighandler$/;"	m
pkg_sighandler_repo	deps/ranch/erlang.mk	/^pkg_sighandler_repo = https:\/\/github.com\/jkingsbery\/sighandler$/;"	m
pkg_simhash_commit	deps/ranch/erlang.mk	/^pkg_simhash_commit = master$/;"	m
pkg_simhash_description	deps/ranch/erlang.mk	/^pkg_simhash_description = Simhashing for Erlang -- hashing algorithm to find near-duplicates in binary data.$/;"	m
pkg_simhash_fetch	deps/ranch/erlang.mk	/^pkg_simhash_fetch = git$/;"	m
pkg_simhash_homepage	deps/ranch/erlang.mk	/^pkg_simhash_homepage = https:\/\/github.com\/ferd\/simhash$/;"	m
pkg_simhash_name	deps/ranch/erlang.mk	/^pkg_simhash_name = simhash$/;"	m
pkg_simhash_repo	deps/ranch/erlang.mk	/^pkg_simhash_repo = https:\/\/github.com\/ferd\/simhash$/;"	m
pkg_simple_bridge_commit	deps/ranch/erlang.mk	/^pkg_simple_bridge_commit = master$/;"	m
pkg_simple_bridge_description	deps/ranch/erlang.mk	/^pkg_simple_bridge_description = A simple, standardized interface library to Erlang HTTP Servers.$/;"	m
pkg_simple_bridge_fetch	deps/ranch/erlang.mk	/^pkg_simple_bridge_fetch = git$/;"	m
pkg_simple_bridge_homepage	deps/ranch/erlang.mk	/^pkg_simple_bridge_homepage = https:\/\/github.com\/nitrogen\/simple_bridge$/;"	m
pkg_simple_bridge_name	deps/ranch/erlang.mk	/^pkg_simple_bridge_name = simple_bridge$/;"	m
pkg_simple_bridge_repo	deps/ranch/erlang.mk	/^pkg_simple_bridge_repo = https:\/\/github.com\/nitrogen\/simple_bridge$/;"	m
pkg_simple_oauth2_commit	deps/ranch/erlang.mk	/^pkg_simple_oauth2_commit = master$/;"	m
pkg_simple_oauth2_description	deps/ranch/erlang.mk	/^pkg_simple_oauth2_description = Simple erlang OAuth2 client module for any http server framework (Google, Facebook, Yandex, Vkontakte are preconfigured)$/;"	m
pkg_simple_oauth2_fetch	deps/ranch/erlang.mk	/^pkg_simple_oauth2_fetch = git$/;"	m
pkg_simple_oauth2_homepage	deps/ranch/erlang.mk	/^pkg_simple_oauth2_homepage = https:\/\/github.com\/virtan\/simple_oauth2$/;"	m
pkg_simple_oauth2_name	deps/ranch/erlang.mk	/^pkg_simple_oauth2_name = simple_oauth2$/;"	m
pkg_simple_oauth2_repo	deps/ranch/erlang.mk	/^pkg_simple_oauth2_repo = https:\/\/github.com\/virtan\/simple_oauth2$/;"	m
pkg_skel_commit	deps/ranch/erlang.mk	/^pkg_skel_commit = master$/;"	m
pkg_skel_description	deps/ranch/erlang.mk	/^pkg_skel_description = A Streaming Process-based Skeleton Library for Erlang$/;"	m
pkg_skel_fetch	deps/ranch/erlang.mk	/^pkg_skel_fetch = git$/;"	m
pkg_skel_homepage	deps/ranch/erlang.mk	/^pkg_skel_homepage = https:\/\/github.com\/ParaPhrase\/skel$/;"	m
pkg_skel_name	deps/ranch/erlang.mk	/^pkg_skel_name = skel$/;"	m
pkg_skel_repo	deps/ranch/erlang.mk	/^pkg_skel_repo = https:\/\/github.com\/ParaPhrase\/skel$/;"	m
pkg_slack_commit	deps/ranch/erlang.mk	/^pkg_slack_commit = master$/;"	m
pkg_slack_description	deps/ranch/erlang.mk	/^pkg_slack_description = Minimal slack notification OTP library.$/;"	m
pkg_slack_fetch	deps/ranch/erlang.mk	/^pkg_slack_fetch = git$/;"	m
pkg_slack_homepage	deps/ranch/erlang.mk	/^pkg_slack_homepage = https:\/\/github.com\/DonBranson\/slack$/;"	m
pkg_slack_name	deps/ranch/erlang.mk	/^pkg_slack_name = slack$/;"	m
pkg_slack_repo	deps/ranch/erlang.mk	/^pkg_slack_repo = https:\/\/github.com\/DonBranson\/slack.git$/;"	m
pkg_smother_commit	deps/ranch/erlang.mk	/^pkg_smother_commit = master$/;"	m
pkg_smother_description	deps/ranch/erlang.mk	/^pkg_smother_description = Extended code coverage metrics for Erlang.$/;"	m
pkg_smother_fetch	deps/ranch/erlang.mk	/^pkg_smother_fetch = git$/;"	m
pkg_smother_homepage	deps/ranch/erlang.mk	/^pkg_smother_homepage = https:\/\/ramsay-t.github.io\/Smother\/$/;"	m
pkg_smother_name	deps/ranch/erlang.mk	/^pkg_smother_name = smother$/;"	m
pkg_smother_repo	deps/ranch/erlang.mk	/^pkg_smother_repo = https:\/\/github.com\/ramsay-t\/Smother$/;"	m
pkg_snappyer_commit	deps/ranch/erlang.mk	/^pkg_snappyer_commit = master$/;"	m
pkg_snappyer_description	deps/ranch/erlang.mk	/^pkg_snappyer_description = Snappy as nif for Erlang$/;"	m
pkg_snappyer_fetch	deps/ranch/erlang.mk	/^pkg_snappyer_fetch = git$/;"	m
pkg_snappyer_homepage	deps/ranch/erlang.mk	/^pkg_snappyer_homepage = https:\/\/github.com\/zmstone\/snappyer$/;"	m
pkg_snappyer_name	deps/ranch/erlang.mk	/^pkg_snappyer_name = snappyer$/;"	m
pkg_snappyer_repo	deps/ranch/erlang.mk	/^pkg_snappyer_repo = https:\/\/github.com\/zmstone\/snappyer.git$/;"	m
pkg_social_commit	deps/ranch/erlang.mk	/^pkg_social_commit = master$/;"	m
pkg_social_description	deps/ranch/erlang.mk	/^pkg_social_description = Cowboy handler for social login via OAuth2 providers$/;"	m
pkg_social_fetch	deps/ranch/erlang.mk	/^pkg_social_fetch = git$/;"	m
pkg_social_homepage	deps/ranch/erlang.mk	/^pkg_social_homepage = https:\/\/github.com\/dvv\/social$/;"	m
pkg_social_name	deps/ranch/erlang.mk	/^pkg_social_name = social$/;"	m
pkg_social_repo	deps/ranch/erlang.mk	/^pkg_social_repo = https:\/\/github.com\/dvv\/social$/;"	m
pkg_spapi_router_commit	deps/ranch/erlang.mk	/^pkg_spapi_router_commit = master$/;"	m
pkg_spapi_router_description	deps/ranch/erlang.mk	/^pkg_spapi_router_description = Partially-connected Erlang clustering$/;"	m
pkg_spapi_router_fetch	deps/ranch/erlang.mk	/^pkg_spapi_router_fetch = git$/;"	m
pkg_spapi_router_homepage	deps/ranch/erlang.mk	/^pkg_spapi_router_homepage = https:\/\/github.com\/spilgames\/spapi-router$/;"	m
pkg_spapi_router_name	deps/ranch/erlang.mk	/^pkg_spapi_router_name = spapi_router$/;"	m
pkg_spapi_router_repo	deps/ranch/erlang.mk	/^pkg_spapi_router_repo = https:\/\/github.com\/spilgames\/spapi-router$/;"	m
pkg_sqerl_commit	deps/ranch/erlang.mk	/^pkg_sqerl_commit = master$/;"	m
pkg_sqerl_description	deps/ranch/erlang.mk	/^pkg_sqerl_description = An Erlang-flavoured SQL DSL$/;"	m
pkg_sqerl_fetch	deps/ranch/erlang.mk	/^pkg_sqerl_fetch = git$/;"	m
pkg_sqerl_homepage	deps/ranch/erlang.mk	/^pkg_sqerl_homepage = https:\/\/github.com\/hairyhum\/sqerl$/;"	m
pkg_sqerl_name	deps/ranch/erlang.mk	/^pkg_sqerl_name = sqerl$/;"	m
pkg_sqerl_repo	deps/ranch/erlang.mk	/^pkg_sqerl_repo = https:\/\/github.com\/hairyhum\/sqerl$/;"	m
pkg_srly_commit	deps/ranch/erlang.mk	/^pkg_srly_commit = master$/;"	m
pkg_srly_description	deps/ranch/erlang.mk	/^pkg_srly_description = Native Erlang Unix serial interface$/;"	m
pkg_srly_fetch	deps/ranch/erlang.mk	/^pkg_srly_fetch = git$/;"	m
pkg_srly_homepage	deps/ranch/erlang.mk	/^pkg_srly_homepage = https:\/\/github.com\/msantos\/srly$/;"	m
pkg_srly_name	deps/ranch/erlang.mk	/^pkg_srly_name = srly$/;"	m
pkg_srly_repo	deps/ranch/erlang.mk	/^pkg_srly_repo = https:\/\/github.com\/msantos\/srly$/;"	m
pkg_sshrpc_commit	deps/ranch/erlang.mk	/^pkg_sshrpc_commit = master$/;"	m
pkg_sshrpc_description	deps/ranch/erlang.mk	/^pkg_sshrpc_description = Erlang SSH RPC module (experimental)$/;"	m
pkg_sshrpc_fetch	deps/ranch/erlang.mk	/^pkg_sshrpc_fetch = git$/;"	m
pkg_sshrpc_homepage	deps/ranch/erlang.mk	/^pkg_sshrpc_homepage = https:\/\/github.com\/jj1bdx\/sshrpc$/;"	m
pkg_sshrpc_name	deps/ranch/erlang.mk	/^pkg_sshrpc_name = sshrpc$/;"	m
pkg_sshrpc_repo	deps/ranch/erlang.mk	/^pkg_sshrpc_repo = https:\/\/github.com\/jj1bdx\/sshrpc$/;"	m
pkg_stable_commit	deps/ranch/erlang.mk	/^pkg_stable_commit = master$/;"	m
pkg_stable_description	deps/ranch/erlang.mk	/^pkg_stable_description = Library of assorted helpers for Cowboy web server.$/;"	m
pkg_stable_fetch	deps/ranch/erlang.mk	/^pkg_stable_fetch = git$/;"	m
pkg_stable_homepage	deps/ranch/erlang.mk	/^pkg_stable_homepage = https:\/\/github.com\/dvv\/stable$/;"	m
pkg_stable_name	deps/ranch/erlang.mk	/^pkg_stable_name = stable$/;"	m
pkg_stable_repo	deps/ranch/erlang.mk	/^pkg_stable_repo = https:\/\/github.com\/dvv\/stable$/;"	m
pkg_statebox_commit	deps/ranch/erlang.mk	/^pkg_statebox_commit = master$/;"	m
pkg_statebox_description	deps/ranch/erlang.mk	/^pkg_statebox_description = Erlang state monad with merge\/conflict-resolution capabilities. Useful for Riak.$/;"	m
pkg_statebox_fetch	deps/ranch/erlang.mk	/^pkg_statebox_fetch = git$/;"	m
pkg_statebox_homepage	deps/ranch/erlang.mk	/^pkg_statebox_homepage = https:\/\/github.com\/mochi\/statebox$/;"	m
pkg_statebox_name	deps/ranch/erlang.mk	/^pkg_statebox_name = statebox$/;"	m
pkg_statebox_repo	deps/ranch/erlang.mk	/^pkg_statebox_repo = https:\/\/github.com\/mochi\/statebox$/;"	m
pkg_statebox_riak_commit	deps/ranch/erlang.mk	/^pkg_statebox_riak_commit = master$/;"	m
pkg_statebox_riak_description	deps/ranch/erlang.mk	/^pkg_statebox_riak_description = Convenience library that makes it easier to use statebox with riak, extracted from best practices in our production code at Mochi Media.$/;"	m
pkg_statebox_riak_fetch	deps/ranch/erlang.mk	/^pkg_statebox_riak_fetch = git$/;"	m
pkg_statebox_riak_homepage	deps/ranch/erlang.mk	/^pkg_statebox_riak_homepage = https:\/\/github.com\/mochi\/statebox_riak$/;"	m
pkg_statebox_riak_name	deps/ranch/erlang.mk	/^pkg_statebox_riak_name = statebox_riak$/;"	m
pkg_statebox_riak_repo	deps/ranch/erlang.mk	/^pkg_statebox_riak_repo = https:\/\/github.com\/mochi\/statebox_riak$/;"	m
pkg_statman_commit	deps/ranch/erlang.mk	/^pkg_statman_commit = master$/;"	m
pkg_statman_description	deps/ranch/erlang.mk	/^pkg_statman_description = Efficiently collect massive volumes of metrics inside the Erlang VM$/;"	m
pkg_statman_fetch	deps/ranch/erlang.mk	/^pkg_statman_fetch = git$/;"	m
pkg_statman_homepage	deps/ranch/erlang.mk	/^pkg_statman_homepage = https:\/\/github.com\/knutin\/statman$/;"	m
pkg_statman_name	deps/ranch/erlang.mk	/^pkg_statman_name = statman$/;"	m
pkg_statman_repo	deps/ranch/erlang.mk	/^pkg_statman_repo = https:\/\/github.com\/knutin\/statman$/;"	m
pkg_statsderl_commit	deps/ranch/erlang.mk	/^pkg_statsderl_commit = master$/;"	m
pkg_statsderl_description	deps/ranch/erlang.mk	/^pkg_statsderl_description = StatsD client (erlang)$/;"	m
pkg_statsderl_fetch	deps/ranch/erlang.mk	/^pkg_statsderl_fetch = git$/;"	m
pkg_statsderl_homepage	deps/ranch/erlang.mk	/^pkg_statsderl_homepage = https:\/\/github.com\/lpgauth\/statsderl$/;"	m
pkg_statsderl_name	deps/ranch/erlang.mk	/^pkg_statsderl_name = statsderl$/;"	m
pkg_statsderl_repo	deps/ranch/erlang.mk	/^pkg_statsderl_repo = https:\/\/github.com\/lpgauth\/statsderl$/;"	m
pkg_stdinout_pool_commit	deps/ranch/erlang.mk	/^pkg_stdinout_pool_commit = master$/;"	m
pkg_stdinout_pool_description	deps/ranch/erlang.mk	/^pkg_stdinout_pool_description = stdinout_pool    : stuff goes in, stuff goes out. there's never any miscommunication.$/;"	m
pkg_stdinout_pool_fetch	deps/ranch/erlang.mk	/^pkg_stdinout_pool_fetch = git$/;"	m
pkg_stdinout_pool_homepage	deps/ranch/erlang.mk	/^pkg_stdinout_pool_homepage = https:\/\/github.com\/mattsta\/erlang-stdinout-pool$/;"	m
pkg_stdinout_pool_name	deps/ranch/erlang.mk	/^pkg_stdinout_pool_name = stdinout_pool$/;"	m
pkg_stdinout_pool_repo	deps/ranch/erlang.mk	/^pkg_stdinout_pool_repo = https:\/\/github.com\/mattsta\/erlang-stdinout-pool$/;"	m
pkg_stockdb_commit	deps/ranch/erlang.mk	/^pkg_stockdb_commit = master$/;"	m
pkg_stockdb_description	deps/ranch/erlang.mk	/^pkg_stockdb_description = Database for storing Stock Exchange quotes in erlang$/;"	m
pkg_stockdb_fetch	deps/ranch/erlang.mk	/^pkg_stockdb_fetch = git$/;"	m
pkg_stockdb_homepage	deps/ranch/erlang.mk	/^pkg_stockdb_homepage = https:\/\/github.com\/maxlapshin\/stockdb$/;"	m
pkg_stockdb_name	deps/ranch/erlang.mk	/^pkg_stockdb_name = stockdb$/;"	m
pkg_stockdb_repo	deps/ranch/erlang.mk	/^pkg_stockdb_repo = https:\/\/github.com\/maxlapshin\/stockdb$/;"	m
pkg_stripe_commit	deps/ranch/erlang.mk	/^pkg_stripe_commit = v1$/;"	m
pkg_stripe_description	deps/ranch/erlang.mk	/^pkg_stripe_description = Erlang interface to the stripe.com API$/;"	m
pkg_stripe_fetch	deps/ranch/erlang.mk	/^pkg_stripe_fetch = git$/;"	m
pkg_stripe_homepage	deps/ranch/erlang.mk	/^pkg_stripe_homepage = https:\/\/github.com\/mattsta\/stripe-erlang$/;"	m
pkg_stripe_name	deps/ranch/erlang.mk	/^pkg_stripe_name = stripe$/;"	m
pkg_stripe_repo	deps/ranch/erlang.mk	/^pkg_stripe_repo = https:\/\/github.com\/mattsta\/stripe-erlang$/;"	m
pkg_supervisor3_commit	deps/ranch/erlang.mk	/^pkg_supervisor3_commit = master$/;"	m
pkg_supervisor3_description	deps/ranch/erlang.mk	/^pkg_supervisor3_description = OTP supervisor with additional strategies$/;"	m
pkg_supervisor3_fetch	deps/ranch/erlang.mk	/^pkg_supervisor3_fetch = git$/;"	m
pkg_supervisor3_homepage	deps/ranch/erlang.mk	/^pkg_supervisor3_homepage = https:\/\/github.com\/klarna\/supervisor3$/;"	m
pkg_supervisor3_name	deps/ranch/erlang.mk	/^pkg_supervisor3_name = supervisor3$/;"	m
pkg_supervisor3_repo	deps/ranch/erlang.mk	/^pkg_supervisor3_repo = https:\/\/github.com\/klarna\/supervisor3.git$/;"	m
pkg_surrogate_commit	deps/ranch/erlang.mk	/^pkg_surrogate_commit = master$/;"	m
pkg_surrogate_description	deps/ranch/erlang.mk	/^pkg_surrogate_description = Proxy server written in erlang. Supports reverse proxy load balancing and forward proxy with http (including CONNECT), socks4, socks5, and transparent proxy modes.$/;"	m
pkg_surrogate_fetch	deps/ranch/erlang.mk	/^pkg_surrogate_fetch = git$/;"	m
pkg_surrogate_homepage	deps/ranch/erlang.mk	/^pkg_surrogate_homepage = https:\/\/github.com\/skruger\/Surrogate$/;"	m
pkg_surrogate_name	deps/ranch/erlang.mk	/^pkg_surrogate_name = surrogate$/;"	m
pkg_surrogate_repo	deps/ranch/erlang.mk	/^pkg_surrogate_repo = https:\/\/github.com\/skruger\/Surrogate$/;"	m
pkg_swab_commit	deps/ranch/erlang.mk	/^pkg_swab_commit = master$/;"	m
pkg_swab_description	deps/ranch/erlang.mk	/^pkg_swab_description = General purpose buffer handling module$/;"	m
pkg_swab_fetch	deps/ranch/erlang.mk	/^pkg_swab_fetch = git$/;"	m
pkg_swab_homepage	deps/ranch/erlang.mk	/^pkg_swab_homepage = https:\/\/github.com\/crownedgrouse\/swab$/;"	m
pkg_swab_name	deps/ranch/erlang.mk	/^pkg_swab_name = swab$/;"	m
pkg_swab_repo	deps/ranch/erlang.mk	/^pkg_swab_repo = https:\/\/github.com\/crownedgrouse\/swab$/;"	m
pkg_swarm_commit	deps/ranch/erlang.mk	/^pkg_swarm_commit = master$/;"	m
pkg_swarm_description	deps/ranch/erlang.mk	/^pkg_swarm_description = Fast and simple acceptor pool for Erlang$/;"	m
pkg_swarm_fetch	deps/ranch/erlang.mk	/^pkg_swarm_fetch = git$/;"	m
pkg_swarm_homepage	deps/ranch/erlang.mk	/^pkg_swarm_homepage = https:\/\/github.com\/jeremey\/swarm$/;"	m
pkg_swarm_name	deps/ranch/erlang.mk	/^pkg_swarm_name = swarm$/;"	m
pkg_swarm_repo	deps/ranch/erlang.mk	/^pkg_swarm_repo = https:\/\/github.com\/jeremey\/swarm$/;"	m
pkg_switchboard_commit	deps/ranch/erlang.mk	/^pkg_switchboard_commit = master$/;"	m
pkg_switchboard_description	deps/ranch/erlang.mk	/^pkg_switchboard_description = A framework for processing email using worker plugins.$/;"	m
pkg_switchboard_fetch	deps/ranch/erlang.mk	/^pkg_switchboard_fetch = git$/;"	m
pkg_switchboard_homepage	deps/ranch/erlang.mk	/^pkg_switchboard_homepage = https:\/\/github.com\/thusfresh\/switchboard$/;"	m
pkg_switchboard_name	deps/ranch/erlang.mk	/^pkg_switchboard_name = switchboard$/;"	m
pkg_switchboard_repo	deps/ranch/erlang.mk	/^pkg_switchboard_repo = https:\/\/github.com\/thusfresh\/switchboard$/;"	m
pkg_syn_commit	deps/ranch/erlang.mk	/^pkg_syn_commit = master$/;"	m
pkg_syn_description	deps/ranch/erlang.mk	/^pkg_syn_description = A global Process Registry and Process Group manager for Erlang.$/;"	m
pkg_syn_fetch	deps/ranch/erlang.mk	/^pkg_syn_fetch = git$/;"	m
pkg_syn_homepage	deps/ranch/erlang.mk	/^pkg_syn_homepage = https:\/\/github.com\/ostinelli\/syn$/;"	m
pkg_syn_name	deps/ranch/erlang.mk	/^pkg_syn_name = syn$/;"	m
pkg_syn_repo	deps/ranch/erlang.mk	/^pkg_syn_repo = https:\/\/github.com\/ostinelli\/syn$/;"	m
pkg_sync_commit	deps/ranch/erlang.mk	/^pkg_sync_commit = master$/;"	m
pkg_sync_description	deps/ranch/erlang.mk	/^pkg_sync_description = On-the-fly recompiling and reloading in Erlang.$/;"	m
pkg_sync_fetch	deps/ranch/erlang.mk	/^pkg_sync_fetch = git$/;"	m
pkg_sync_homepage	deps/ranch/erlang.mk	/^pkg_sync_homepage = https:\/\/github.com\/rustyio\/sync$/;"	m
pkg_sync_name	deps/ranch/erlang.mk	/^pkg_sync_name = sync$/;"	m
pkg_sync_repo	deps/ranch/erlang.mk	/^pkg_sync_repo = https:\/\/github.com\/rustyio\/sync$/;"	m
pkg_syntaxerl_commit	deps/ranch/erlang.mk	/^pkg_syntaxerl_commit = master$/;"	m
pkg_syntaxerl_description	deps/ranch/erlang.mk	/^pkg_syntaxerl_description = Syntax checker for Erlang$/;"	m
pkg_syntaxerl_fetch	deps/ranch/erlang.mk	/^pkg_syntaxerl_fetch = git$/;"	m
pkg_syntaxerl_homepage	deps/ranch/erlang.mk	/^pkg_syntaxerl_homepage = https:\/\/github.com\/ten0s\/syntaxerl$/;"	m
pkg_syntaxerl_name	deps/ranch/erlang.mk	/^pkg_syntaxerl_name = syntaxerl$/;"	m
pkg_syntaxerl_repo	deps/ranch/erlang.mk	/^pkg_syntaxerl_repo = https:\/\/github.com\/ten0s\/syntaxerl$/;"	m
pkg_syslog_commit	deps/ranch/erlang.mk	/^pkg_syslog_commit = master$/;"	m
pkg_syslog_description	deps/ranch/erlang.mk	/^pkg_syslog_description = Erlang port driver for interacting with syslog via syslog(3)$/;"	m
pkg_syslog_fetch	deps/ranch/erlang.mk	/^pkg_syslog_fetch = git$/;"	m
pkg_syslog_homepage	deps/ranch/erlang.mk	/^pkg_syslog_homepage = https:\/\/github.com\/Vagabond\/erlang-syslog$/;"	m
pkg_syslog_name	deps/ranch/erlang.mk	/^pkg_syslog_name = syslog$/;"	m
pkg_syslog_repo	deps/ranch/erlang.mk	/^pkg_syslog_repo = https:\/\/github.com\/Vagabond\/erlang-syslog$/;"	m
pkg_taskforce_commit	deps/ranch/erlang.mk	/^pkg_taskforce_commit = master$/;"	m
pkg_taskforce_description	deps/ranch/erlang.mk	/^pkg_taskforce_description = Erlang worker pools for controlled parallelisation of arbitrary tasks.$/;"	m
pkg_taskforce_fetch	deps/ranch/erlang.mk	/^pkg_taskforce_fetch = git$/;"	m
pkg_taskforce_homepage	deps/ranch/erlang.mk	/^pkg_taskforce_homepage = https:\/\/github.com\/g-andrade\/taskforce$/;"	m
pkg_taskforce_name	deps/ranch/erlang.mk	/^pkg_taskforce_name = taskforce$/;"	m
pkg_taskforce_repo	deps/ranch/erlang.mk	/^pkg_taskforce_repo = https:\/\/github.com\/g-andrade\/taskforce$/;"	m
pkg_tddreloader_commit	deps/ranch/erlang.mk	/^pkg_tddreloader_commit = master$/;"	m
pkg_tddreloader_description	deps/ranch/erlang.mk	/^pkg_tddreloader_description = Shell utility for recompiling, reloading, and testing code as it changes$/;"	m
pkg_tddreloader_fetch	deps/ranch/erlang.mk	/^pkg_tddreloader_fetch = git$/;"	m
pkg_tddreloader_homepage	deps/ranch/erlang.mk	/^pkg_tddreloader_homepage = https:\/\/github.com\/version2beta\/tddreloader$/;"	m
pkg_tddreloader_name	deps/ranch/erlang.mk	/^pkg_tddreloader_name = tddreloader$/;"	m
pkg_tddreloader_repo	deps/ranch/erlang.mk	/^pkg_tddreloader_repo = https:\/\/github.com\/version2beta\/tddreloader$/;"	m
pkg_tempo_commit	deps/ranch/erlang.mk	/^pkg_tempo_commit = master$/;"	m
pkg_tempo_description	deps/ranch/erlang.mk	/^pkg_tempo_description = NIF-based date and time parsing and formatting for Erlang.$/;"	m
pkg_tempo_fetch	deps/ranch/erlang.mk	/^pkg_tempo_fetch = git$/;"	m
pkg_tempo_homepage	deps/ranch/erlang.mk	/^pkg_tempo_homepage = https:\/\/github.com\/selectel\/tempo$/;"	m
pkg_tempo_name	deps/ranch/erlang.mk	/^pkg_tempo_name = tempo$/;"	m
pkg_tempo_repo	deps/ranch/erlang.mk	/^pkg_tempo_repo = https:\/\/github.com\/selectel\/tempo$/;"	m
pkg_ticktick_commit	deps/ranch/erlang.mk	/^pkg_ticktick_commit = master$/;"	m
pkg_ticktick_description	deps/ranch/erlang.mk	/^pkg_ticktick_description = Ticktick is an id generator for message service.$/;"	m
pkg_ticktick_fetch	deps/ranch/erlang.mk	/^pkg_ticktick_fetch = git$/;"	m
pkg_ticktick_homepage	deps/ranch/erlang.mk	/^pkg_ticktick_homepage = https:\/\/github.com\/ericliang\/ticktick$/;"	m
pkg_ticktick_name	deps/ranch/erlang.mk	/^pkg_ticktick_name = ticktick$/;"	m
pkg_ticktick_repo	deps/ranch/erlang.mk	/^pkg_ticktick_repo = https:\/\/github.com\/ericliang\/ticktick$/;"	m
pkg_tinymq_commit	deps/ranch/erlang.mk	/^pkg_tinymq_commit = master$/;"	m
pkg_tinymq_description	deps/ranch/erlang.mk	/^pkg_tinymq_description = TinyMQ - a diminutive, in-memory message queue$/;"	m
pkg_tinymq_fetch	deps/ranch/erlang.mk	/^pkg_tinymq_fetch = git$/;"	m
pkg_tinymq_homepage	deps/ranch/erlang.mk	/^pkg_tinymq_homepage = https:\/\/github.com\/ChicagoBoss\/tinymq$/;"	m
pkg_tinymq_name	deps/ranch/erlang.mk	/^pkg_tinymq_name = tinymq$/;"	m
pkg_tinymq_repo	deps/ranch/erlang.mk	/^pkg_tinymq_repo = https:\/\/github.com\/ChicagoBoss\/tinymq$/;"	m
pkg_tinymt_commit	deps/ranch/erlang.mk	/^pkg_tinymt_commit = master$/;"	m
pkg_tinymt_description	deps/ranch/erlang.mk	/^pkg_tinymt_description = TinyMT pseudo random number generator for Erlang.$/;"	m
pkg_tinymt_fetch	deps/ranch/erlang.mk	/^pkg_tinymt_fetch = git$/;"	m
pkg_tinymt_homepage	deps/ranch/erlang.mk	/^pkg_tinymt_homepage = https:\/\/github.com\/jj1bdx\/tinymt-erlang$/;"	m
pkg_tinymt_name	deps/ranch/erlang.mk	/^pkg_tinymt_name = tinymt$/;"	m
pkg_tinymt_repo	deps/ranch/erlang.mk	/^pkg_tinymt_repo = https:\/\/github.com\/jj1bdx\/tinymt-erlang$/;"	m
pkg_tirerl_commit	deps/ranch/erlang.mk	/^pkg_tirerl_commit = master$/;"	m
pkg_tirerl_description	deps/ranch/erlang.mk	/^pkg_tirerl_description = Erlang interface to Elastic Search$/;"	m
pkg_tirerl_fetch	deps/ranch/erlang.mk	/^pkg_tirerl_fetch = git$/;"	m
pkg_tirerl_homepage	deps/ranch/erlang.mk	/^pkg_tirerl_homepage = https:\/\/github.com\/inaka\/tirerl$/;"	m
pkg_tirerl_name	deps/ranch/erlang.mk	/^pkg_tirerl_name = tirerl$/;"	m
pkg_tirerl_repo	deps/ranch/erlang.mk	/^pkg_tirerl_repo = https:\/\/github.com\/inaka\/tirerl$/;"	m
pkg_traffic_tools_commit	deps/ranch/erlang.mk	/^pkg_traffic_tools_commit = master$/;"	m
pkg_traffic_tools_description	deps/ranch/erlang.mk	/^pkg_traffic_tools_description = Simple traffic limiting library$/;"	m
pkg_traffic_tools_fetch	deps/ranch/erlang.mk	/^pkg_traffic_tools_fetch = git$/;"	m
pkg_traffic_tools_homepage	deps/ranch/erlang.mk	/^pkg_traffic_tools_homepage = https:\/\/github.com\/systra\/traffic_tools$/;"	m
pkg_traffic_tools_name	deps/ranch/erlang.mk	/^pkg_traffic_tools_name = traffic_tools$/;"	m
pkg_traffic_tools_repo	deps/ranch/erlang.mk	/^pkg_traffic_tools_repo = https:\/\/github.com\/systra\/traffic_tools$/;"	m
pkg_trails_commit	deps/ranch/erlang.mk	/^pkg_trails_commit = master$/;"	m
pkg_trails_description	deps/ranch/erlang.mk	/^pkg_trails_description = A couple of improvements over Cowboy Routes$/;"	m
pkg_trails_fetch	deps/ranch/erlang.mk	/^pkg_trails_fetch = git$/;"	m
pkg_trails_homepage	deps/ranch/erlang.mk	/^pkg_trails_homepage = http:\/\/inaka.github.io\/cowboy-trails\/$/;"	m
pkg_trails_name	deps/ranch/erlang.mk	/^pkg_trails_name = trails$/;"	m
pkg_trails_repo	deps/ranch/erlang.mk	/^pkg_trails_repo = https:\/\/github.com\/inaka\/cowboy-trails$/;"	m
pkg_trane_commit	deps/ranch/erlang.mk	/^pkg_trane_commit = master$/;"	m
pkg_trane_description	deps/ranch/erlang.mk	/^pkg_trane_description = SAX style broken HTML parser in Erlang$/;"	m
pkg_trane_fetch	deps/ranch/erlang.mk	/^pkg_trane_fetch = git$/;"	m
pkg_trane_homepage	deps/ranch/erlang.mk	/^pkg_trane_homepage = https:\/\/github.com\/massemanet\/trane$/;"	m
pkg_trane_name	deps/ranch/erlang.mk	/^pkg_trane_name = trane$/;"	m
pkg_trane_repo	deps/ranch/erlang.mk	/^pkg_trane_repo = https:\/\/github.com\/massemanet\/trane$/;"	m
pkg_transit_commit	deps/ranch/erlang.mk	/^pkg_transit_commit = master$/;"	m
pkg_transit_description	deps/ranch/erlang.mk	/^pkg_transit_description = transit format for erlang$/;"	m
pkg_transit_fetch	deps/ranch/erlang.mk	/^pkg_transit_fetch = git$/;"	m
pkg_transit_homepage	deps/ranch/erlang.mk	/^pkg_transit_homepage = https:\/\/github.com\/isaiah\/transit-erlang$/;"	m
pkg_transit_name	deps/ranch/erlang.mk	/^pkg_transit_name = transit$/;"	m
pkg_transit_repo	deps/ranch/erlang.mk	/^pkg_transit_repo = https:\/\/github.com\/isaiah\/transit-erlang$/;"	m
pkg_trie_commit	deps/ranch/erlang.mk	/^pkg_trie_commit = master$/;"	m
pkg_trie_description	deps/ranch/erlang.mk	/^pkg_trie_description = Erlang Trie Implementation$/;"	m
pkg_trie_fetch	deps/ranch/erlang.mk	/^pkg_trie_fetch = git$/;"	m
pkg_trie_homepage	deps/ranch/erlang.mk	/^pkg_trie_homepage = https:\/\/github.com\/okeuday\/trie$/;"	m
pkg_trie_name	deps/ranch/erlang.mk	/^pkg_trie_name = trie$/;"	m
pkg_trie_repo	deps/ranch/erlang.mk	/^pkg_trie_repo = https:\/\/github.com\/okeuday\/trie$/;"	m
pkg_triq_commit	deps/ranch/erlang.mk	/^pkg_triq_commit = master$/;"	m
pkg_triq_description	deps/ranch/erlang.mk	/^pkg_triq_description = Trifork QuickCheck$/;"	m
pkg_triq_fetch	deps/ranch/erlang.mk	/^pkg_triq_fetch = git$/;"	m
pkg_triq_homepage	deps/ranch/erlang.mk	/^pkg_triq_homepage = https:\/\/github.com\/krestenkrab\/triq$/;"	m
pkg_triq_name	deps/ranch/erlang.mk	/^pkg_triq_name = triq$/;"	m
pkg_triq_repo	deps/ranch/erlang.mk	/^pkg_triq_repo = https:\/\/github.com\/krestenkrab\/triq$/;"	m
pkg_tunctl_commit	deps/ranch/erlang.mk	/^pkg_tunctl_commit = master$/;"	m
pkg_tunctl_description	deps/ranch/erlang.mk	/^pkg_tunctl_description = Erlang TUN\/TAP interface$/;"	m
pkg_tunctl_fetch	deps/ranch/erlang.mk	/^pkg_tunctl_fetch = git$/;"	m
pkg_tunctl_homepage	deps/ranch/erlang.mk	/^pkg_tunctl_homepage = https:\/\/github.com\/msantos\/tunctl$/;"	m
pkg_tunctl_name	deps/ranch/erlang.mk	/^pkg_tunctl_name = tunctl$/;"	m
pkg_tunctl_repo	deps/ranch/erlang.mk	/^pkg_tunctl_repo = https:\/\/github.com\/msantos\/tunctl$/;"	m
pkg_twerl_commit	deps/ranch/erlang.mk	/^pkg_twerl_commit = oauth$/;"	m
pkg_twerl_description	deps/ranch/erlang.mk	/^pkg_twerl_description = Erlang client for the Twitter Streaming API$/;"	m
pkg_twerl_fetch	deps/ranch/erlang.mk	/^pkg_twerl_fetch = git$/;"	m
pkg_twerl_homepage	deps/ranch/erlang.mk	/^pkg_twerl_homepage = https:\/\/github.com\/lucaspiller\/twerl$/;"	m
pkg_twerl_name	deps/ranch/erlang.mk	/^pkg_twerl_name = twerl$/;"	m
pkg_twerl_repo	deps/ranch/erlang.mk	/^pkg_twerl_repo = https:\/\/github.com\/lucaspiller\/twerl$/;"	m
pkg_twitter_erlang_commit	deps/ranch/erlang.mk	/^pkg_twitter_erlang_commit = master$/;"	m
pkg_twitter_erlang_description	deps/ranch/erlang.mk	/^pkg_twitter_erlang_description = An Erlang twitter client$/;"	m
pkg_twitter_erlang_fetch	deps/ranch/erlang.mk	/^pkg_twitter_erlang_fetch = git$/;"	m
pkg_twitter_erlang_homepage	deps/ranch/erlang.mk	/^pkg_twitter_erlang_homepage = https:\/\/github.com\/ngerakines\/erlang_twitter$/;"	m
pkg_twitter_erlang_name	deps/ranch/erlang.mk	/^pkg_twitter_erlang_name = twitter_erlang$/;"	m
pkg_twitter_erlang_repo	deps/ranch/erlang.mk	/^pkg_twitter_erlang_repo = https:\/\/github.com\/ngerakines\/erlang_twitter$/;"	m
pkg_ucol_nif_commit	deps/ranch/erlang.mk	/^pkg_ucol_nif_commit = master$/;"	m
pkg_ucol_nif_description	deps/ranch/erlang.mk	/^pkg_ucol_nif_description = ICU based collation Erlang module$/;"	m
pkg_ucol_nif_fetch	deps/ranch/erlang.mk	/^pkg_ucol_nif_fetch = git$/;"	m
pkg_ucol_nif_homepage	deps/ranch/erlang.mk	/^pkg_ucol_nif_homepage = https:\/\/github.com\/refuge\/ucol_nif$/;"	m
pkg_ucol_nif_name	deps/ranch/erlang.mk	/^pkg_ucol_nif_name = ucol_nif$/;"	m
pkg_ucol_nif_repo	deps/ranch/erlang.mk	/^pkg_ucol_nif_repo = https:\/\/github.com\/refuge\/ucol_nif$/;"	m
pkg_unicorn_commit	deps/ranch/erlang.mk	/^pkg_unicorn_commit = master$/;"	m
pkg_unicorn_description	deps/ranch/erlang.mk	/^pkg_unicorn_description = Generic configuration server$/;"	m
pkg_unicorn_fetch	deps/ranch/erlang.mk	/^pkg_unicorn_fetch = git$/;"	m
pkg_unicorn_homepage	deps/ranch/erlang.mk	/^pkg_unicorn_homepage = https:\/\/github.com\/shizzard\/unicorn$/;"	m
pkg_unicorn_name	deps/ranch/erlang.mk	/^pkg_unicorn_name = unicorn$/;"	m
pkg_unicorn_repo	deps/ranch/erlang.mk	/^pkg_unicorn_repo = https:\/\/github.com\/shizzard\/unicorn$/;"	m
pkg_unsplit_commit	deps/ranch/erlang.mk	/^pkg_unsplit_commit = master$/;"	m
pkg_unsplit_description	deps/ranch/erlang.mk	/^pkg_unsplit_description = Resolves conflicts in Mnesia after network splits$/;"	m
pkg_unsplit_fetch	deps/ranch/erlang.mk	/^pkg_unsplit_fetch = git$/;"	m
pkg_unsplit_homepage	deps/ranch/erlang.mk	/^pkg_unsplit_homepage = https:\/\/github.com\/uwiger\/unsplit$/;"	m
pkg_unsplit_name	deps/ranch/erlang.mk	/^pkg_unsplit_name = unsplit$/;"	m
pkg_unsplit_repo	deps/ranch/erlang.mk	/^pkg_unsplit_repo = https:\/\/github.com\/uwiger\/unsplit$/;"	m
pkg_uuid_commit	deps/ranch/erlang.mk	/^pkg_uuid_commit = master$/;"	m
pkg_uuid_description	deps/ranch/erlang.mk	/^pkg_uuid_description = Erlang UUID Implementation$/;"	m
pkg_uuid_fetch	deps/ranch/erlang.mk	/^pkg_uuid_fetch = git$/;"	m
pkg_uuid_homepage	deps/ranch/erlang.mk	/^pkg_uuid_homepage = https:\/\/github.com\/okeuday\/uuid$/;"	m
pkg_uuid_name	deps/ranch/erlang.mk	/^pkg_uuid_name = uuid$/;"	m
pkg_uuid_repo	deps/ranch/erlang.mk	/^pkg_uuid_repo = https:\/\/github.com\/okeuday\/uuid$/;"	m
pkg_ux_commit	deps/ranch/erlang.mk	/^pkg_ux_commit = master$/;"	m
pkg_ux_description	deps/ranch/erlang.mk	/^pkg_ux_description = Unicode eXtention for Erlang (Strings, Collation)$/;"	m
pkg_ux_fetch	deps/ranch/erlang.mk	/^pkg_ux_fetch = git$/;"	m
pkg_ux_homepage	deps/ranch/erlang.mk	/^pkg_ux_homepage = https:\/\/github.com\/erlang-unicode\/ux$/;"	m
pkg_ux_name	deps/ranch/erlang.mk	/^pkg_ux_name = ux$/;"	m
pkg_ux_repo	deps/ranch/erlang.mk	/^pkg_ux_repo = https:\/\/github.com\/erlang-unicode\/ux$/;"	m
pkg_vert_commit	deps/ranch/erlang.mk	/^pkg_vert_commit = master$/;"	m
pkg_vert_description	deps/ranch/erlang.mk	/^pkg_vert_description = Erlang binding to libvirt virtualization API$/;"	m
pkg_vert_fetch	deps/ranch/erlang.mk	/^pkg_vert_fetch = git$/;"	m
pkg_vert_homepage	deps/ranch/erlang.mk	/^pkg_vert_homepage = https:\/\/github.com\/msantos\/erlang-libvirt$/;"	m
pkg_vert_name	deps/ranch/erlang.mk	/^pkg_vert_name = vert$/;"	m
pkg_vert_repo	deps/ranch/erlang.mk	/^pkg_vert_repo = https:\/\/github.com\/msantos\/erlang-libvirt$/;"	m
pkg_verx_commit	deps/ranch/erlang.mk	/^pkg_verx_commit = master$/;"	m
pkg_verx_description	deps/ranch/erlang.mk	/^pkg_verx_description = Erlang implementation of the libvirtd remote protocol$/;"	m
pkg_verx_fetch	deps/ranch/erlang.mk	/^pkg_verx_fetch = git$/;"	m
pkg_verx_homepage	deps/ranch/erlang.mk	/^pkg_verx_homepage = https:\/\/github.com\/msantos\/verx$/;"	m
pkg_verx_name	deps/ranch/erlang.mk	/^pkg_verx_name = verx$/;"	m
pkg_verx_repo	deps/ranch/erlang.mk	/^pkg_verx_repo = https:\/\/github.com\/msantos\/verx$/;"	m
pkg_vmq_acl_commit	deps/ranch/erlang.mk	/^pkg_vmq_acl_commit = master$/;"	m
pkg_vmq_acl_description	deps/ranch/erlang.mk	/^pkg_vmq_acl_description = Component of VerneMQ: A distributed MQTT message broker$/;"	m
pkg_vmq_acl_fetch	deps/ranch/erlang.mk	/^pkg_vmq_acl_fetch = git$/;"	m
pkg_vmq_acl_homepage	deps/ranch/erlang.mk	/^pkg_vmq_acl_homepage = https:\/\/verne.mq\/$/;"	m
pkg_vmq_acl_name	deps/ranch/erlang.mk	/^pkg_vmq_acl_name = vmq_acl$/;"	m
pkg_vmq_acl_repo	deps/ranch/erlang.mk	/^pkg_vmq_acl_repo = https:\/\/github.com\/erlio\/vmq_acl$/;"	m
pkg_vmq_bridge_commit	deps/ranch/erlang.mk	/^pkg_vmq_bridge_commit = master$/;"	m
pkg_vmq_bridge_description	deps/ranch/erlang.mk	/^pkg_vmq_bridge_description = Component of VerneMQ: A distributed MQTT message broker$/;"	m
pkg_vmq_bridge_fetch	deps/ranch/erlang.mk	/^pkg_vmq_bridge_fetch = git$/;"	m
pkg_vmq_bridge_homepage	deps/ranch/erlang.mk	/^pkg_vmq_bridge_homepage = https:\/\/verne.mq\/$/;"	m
pkg_vmq_bridge_name	deps/ranch/erlang.mk	/^pkg_vmq_bridge_name = vmq_bridge$/;"	m
pkg_vmq_bridge_repo	deps/ranch/erlang.mk	/^pkg_vmq_bridge_repo = https:\/\/github.com\/erlio\/vmq_bridge$/;"	m
pkg_vmq_graphite_commit	deps/ranch/erlang.mk	/^pkg_vmq_graphite_commit = master$/;"	m
pkg_vmq_graphite_description	deps/ranch/erlang.mk	/^pkg_vmq_graphite_description = Component of VerneMQ: A distributed MQTT message broker$/;"	m
pkg_vmq_graphite_fetch	deps/ranch/erlang.mk	/^pkg_vmq_graphite_fetch = git$/;"	m
pkg_vmq_graphite_homepage	deps/ranch/erlang.mk	/^pkg_vmq_graphite_homepage = https:\/\/verne.mq\/$/;"	m
pkg_vmq_graphite_name	deps/ranch/erlang.mk	/^pkg_vmq_graphite_name = vmq_graphite$/;"	m
pkg_vmq_graphite_repo	deps/ranch/erlang.mk	/^pkg_vmq_graphite_repo = https:\/\/github.com\/erlio\/vmq_graphite$/;"	m
pkg_vmq_passwd_commit	deps/ranch/erlang.mk	/^pkg_vmq_passwd_commit = master$/;"	m
pkg_vmq_passwd_description	deps/ranch/erlang.mk	/^pkg_vmq_passwd_description = Component of VerneMQ: A distributed MQTT message broker$/;"	m
pkg_vmq_passwd_fetch	deps/ranch/erlang.mk	/^pkg_vmq_passwd_fetch = git$/;"	m
pkg_vmq_passwd_homepage	deps/ranch/erlang.mk	/^pkg_vmq_passwd_homepage = https:\/\/verne.mq\/$/;"	m
pkg_vmq_passwd_name	deps/ranch/erlang.mk	/^pkg_vmq_passwd_name = vmq_passwd$/;"	m
pkg_vmq_passwd_repo	deps/ranch/erlang.mk	/^pkg_vmq_passwd_repo = https:\/\/github.com\/erlio\/vmq_passwd$/;"	m
pkg_vmq_server_commit	deps/ranch/erlang.mk	/^pkg_vmq_server_commit = master$/;"	m
pkg_vmq_server_description	deps/ranch/erlang.mk	/^pkg_vmq_server_description = Component of VerneMQ: A distributed MQTT message broker$/;"	m
pkg_vmq_server_fetch	deps/ranch/erlang.mk	/^pkg_vmq_server_fetch = git$/;"	m
pkg_vmq_server_homepage	deps/ranch/erlang.mk	/^pkg_vmq_server_homepage = https:\/\/verne.mq\/$/;"	m
pkg_vmq_server_name	deps/ranch/erlang.mk	/^pkg_vmq_server_name = vmq_server$/;"	m
pkg_vmq_server_repo	deps/ranch/erlang.mk	/^pkg_vmq_server_repo = https:\/\/github.com\/erlio\/vmq_server$/;"	m
pkg_vmq_snmp_commit	deps/ranch/erlang.mk	/^pkg_vmq_snmp_commit = master$/;"	m
pkg_vmq_snmp_description	deps/ranch/erlang.mk	/^pkg_vmq_snmp_description = Component of VerneMQ: A distributed MQTT message broker$/;"	m
pkg_vmq_snmp_fetch	deps/ranch/erlang.mk	/^pkg_vmq_snmp_fetch = git$/;"	m
pkg_vmq_snmp_homepage	deps/ranch/erlang.mk	/^pkg_vmq_snmp_homepage = https:\/\/verne.mq\/$/;"	m
pkg_vmq_snmp_name	deps/ranch/erlang.mk	/^pkg_vmq_snmp_name = vmq_snmp$/;"	m
pkg_vmq_snmp_repo	deps/ranch/erlang.mk	/^pkg_vmq_snmp_repo = https:\/\/github.com\/erlio\/vmq_snmp$/;"	m
pkg_vmq_systree_commit	deps/ranch/erlang.mk	/^pkg_vmq_systree_commit = master$/;"	m
pkg_vmq_systree_description	deps/ranch/erlang.mk	/^pkg_vmq_systree_description = Component of VerneMQ: A distributed MQTT message broker$/;"	m
pkg_vmq_systree_fetch	deps/ranch/erlang.mk	/^pkg_vmq_systree_fetch = git$/;"	m
pkg_vmq_systree_homepage	deps/ranch/erlang.mk	/^pkg_vmq_systree_homepage = https:\/\/verne.mq\/$/;"	m
pkg_vmq_systree_name	deps/ranch/erlang.mk	/^pkg_vmq_systree_name = vmq_systree$/;"	m
pkg_vmq_systree_repo	deps/ranch/erlang.mk	/^pkg_vmq_systree_repo = https:\/\/github.com\/erlio\/vmq_systree$/;"	m
pkg_vmstats_commit	deps/ranch/erlang.mk	/^pkg_vmstats_commit = master$/;"	m
pkg_vmstats_description	deps/ranch/erlang.mk	/^pkg_vmstats_description = tiny Erlang app that works in conjunction with statsderl in order to generate information on the Erlang VM for graphite logs.$/;"	m
pkg_vmstats_fetch	deps/ranch/erlang.mk	/^pkg_vmstats_fetch = git$/;"	m
pkg_vmstats_homepage	deps/ranch/erlang.mk	/^pkg_vmstats_homepage = https:\/\/github.com\/ferd\/vmstats$/;"	m
pkg_vmstats_name	deps/ranch/erlang.mk	/^pkg_vmstats_name = vmstats$/;"	m
pkg_vmstats_repo	deps/ranch/erlang.mk	/^pkg_vmstats_repo = https:\/\/github.com\/ferd\/vmstats$/;"	m
pkg_walrus_commit	deps/ranch/erlang.mk	/^pkg_walrus_commit = master$/;"	m
pkg_walrus_description	deps/ranch/erlang.mk	/^pkg_walrus_description = Walrus - Mustache-like Templating$/;"	m
pkg_walrus_fetch	deps/ranch/erlang.mk	/^pkg_walrus_fetch = git$/;"	m
pkg_walrus_homepage	deps/ranch/erlang.mk	/^pkg_walrus_homepage = https:\/\/github.com\/devinus\/walrus$/;"	m
pkg_walrus_name	deps/ranch/erlang.mk	/^pkg_walrus_name = walrus$/;"	m
pkg_walrus_repo	deps/ranch/erlang.mk	/^pkg_walrus_repo = https:\/\/github.com\/devinus\/walrus$/;"	m
pkg_webmachine_commit	deps/ranch/erlang.mk	/^pkg_webmachine_commit = master$/;"	m
pkg_webmachine_description	deps/ranch/erlang.mk	/^pkg_webmachine_description = A REST-based system for building web applications.$/;"	m
pkg_webmachine_fetch	deps/ranch/erlang.mk	/^pkg_webmachine_fetch = git$/;"	m
pkg_webmachine_homepage	deps/ranch/erlang.mk	/^pkg_webmachine_homepage = https:\/\/github.com\/basho\/webmachine$/;"	m
pkg_webmachine_name	deps/ranch/erlang.mk	/^pkg_webmachine_name = webmachine$/;"	m
pkg_webmachine_repo	deps/ranch/erlang.mk	/^pkg_webmachine_repo = https:\/\/github.com\/basho\/webmachine$/;"	m
pkg_websocket_client_commit	deps/ranch/erlang.mk	/^pkg_websocket_client_commit = master$/;"	m
pkg_websocket_client_description	deps/ranch/erlang.mk	/^pkg_websocket_client_description = Erlang websocket client (ws and wss supported)$/;"	m
pkg_websocket_client_fetch	deps/ranch/erlang.mk	/^pkg_websocket_client_fetch = git$/;"	m
pkg_websocket_client_homepage	deps/ranch/erlang.mk	/^pkg_websocket_client_homepage = https:\/\/github.com\/jeremyong\/websocket_client$/;"	m
pkg_websocket_client_name	deps/ranch/erlang.mk	/^pkg_websocket_client_name = websocket_client$/;"	m
pkg_websocket_client_repo	deps/ranch/erlang.mk	/^pkg_websocket_client_repo = https:\/\/github.com\/jeremyong\/websocket_client$/;"	m
pkg_worker_pool_commit	deps/ranch/erlang.mk	/^pkg_worker_pool_commit = master$/;"	m
pkg_worker_pool_description	deps/ranch/erlang.mk	/^pkg_worker_pool_description = a simple erlang worker pool$/;"	m
pkg_worker_pool_fetch	deps/ranch/erlang.mk	/^pkg_worker_pool_fetch = git$/;"	m
pkg_worker_pool_homepage	deps/ranch/erlang.mk	/^pkg_worker_pool_homepage = https:\/\/github.com\/inaka\/worker_pool$/;"	m
pkg_worker_pool_name	deps/ranch/erlang.mk	/^pkg_worker_pool_name = worker_pool$/;"	m
pkg_worker_pool_repo	deps/ranch/erlang.mk	/^pkg_worker_pool_repo = https:\/\/github.com\/inaka\/worker_pool$/;"	m
pkg_wrangler_commit	deps/ranch/erlang.mk	/^pkg_wrangler_commit = master$/;"	m
pkg_wrangler_description	deps/ranch/erlang.mk	/^pkg_wrangler_description = Import of the Wrangler svn repository.$/;"	m
pkg_wrangler_fetch	deps/ranch/erlang.mk	/^pkg_wrangler_fetch = git$/;"	m
pkg_wrangler_homepage	deps/ranch/erlang.mk	/^pkg_wrangler_homepage = http:\/\/www.cs.kent.ac.uk\/projects\/wrangler\/Home.html$/;"	m
pkg_wrangler_name	deps/ranch/erlang.mk	/^pkg_wrangler_name = wrangler$/;"	m
pkg_wrangler_repo	deps/ranch/erlang.mk	/^pkg_wrangler_repo = https:\/\/github.com\/RefactoringTools\/wrangler$/;"	m
pkg_wsock_commit	deps/ranch/erlang.mk	/^pkg_wsock_commit = master$/;"	m
pkg_wsock_description	deps/ranch/erlang.mk	/^pkg_wsock_description = Erlang library to build WebSocket clients and servers$/;"	m
pkg_wsock_fetch	deps/ranch/erlang.mk	/^pkg_wsock_fetch = git$/;"	m
pkg_wsock_homepage	deps/ranch/erlang.mk	/^pkg_wsock_homepage = https:\/\/github.com\/madtrick\/wsock$/;"	m
pkg_wsock_name	deps/ranch/erlang.mk	/^pkg_wsock_name = wsock$/;"	m
pkg_wsock_repo	deps/ranch/erlang.mk	/^pkg_wsock_repo = https:\/\/github.com\/madtrick\/wsock$/;"	m
pkg_xhttpc_commit	deps/ranch/erlang.mk	/^pkg_xhttpc_commit = master$/;"	m
pkg_xhttpc_description	deps/ranch/erlang.mk	/^pkg_xhttpc_description = Extensible HTTP Client for Erlang$/;"	m
pkg_xhttpc_fetch	deps/ranch/erlang.mk	/^pkg_xhttpc_fetch = git$/;"	m
pkg_xhttpc_homepage	deps/ranch/erlang.mk	/^pkg_xhttpc_homepage = https:\/\/github.com\/seriyps\/xhttpc$/;"	m
pkg_xhttpc_name	deps/ranch/erlang.mk	/^pkg_xhttpc_name = xhttpc$/;"	m
pkg_xhttpc_repo	deps/ranch/erlang.mk	/^pkg_xhttpc_repo = https:\/\/github.com\/seriyps\/xhttpc$/;"	m
pkg_xref_runner_commit	deps/ranch/erlang.mk	/^pkg_xref_runner_commit = master$/;"	m
pkg_xref_runner_description	deps/ranch/erlang.mk	/^pkg_xref_runner_description = Erlang Xref Runner (inspired in rebar xref)$/;"	m
pkg_xref_runner_fetch	deps/ranch/erlang.mk	/^pkg_xref_runner_fetch = git$/;"	m
pkg_xref_runner_homepage	deps/ranch/erlang.mk	/^pkg_xref_runner_homepage = https:\/\/github.com\/inaka\/xref_runner$/;"	m
pkg_xref_runner_name	deps/ranch/erlang.mk	/^pkg_xref_runner_name = xref_runner$/;"	m
pkg_xref_runner_repo	deps/ranch/erlang.mk	/^pkg_xref_runner_repo = https:\/\/github.com\/inaka\/xref_runner$/;"	m
pkg_yamerl_commit	deps/ranch/erlang.mk	/^pkg_yamerl_commit = master$/;"	m
pkg_yamerl_description	deps/ranch/erlang.mk	/^pkg_yamerl_description = YAML 1.2 parser in pure Erlang$/;"	m
pkg_yamerl_fetch	deps/ranch/erlang.mk	/^pkg_yamerl_fetch = git$/;"	m
pkg_yamerl_homepage	deps/ranch/erlang.mk	/^pkg_yamerl_homepage = https:\/\/github.com\/yakaz\/yamerl$/;"	m
pkg_yamerl_name	deps/ranch/erlang.mk	/^pkg_yamerl_name = yamerl$/;"	m
pkg_yamerl_repo	deps/ranch/erlang.mk	/^pkg_yamerl_repo = https:\/\/github.com\/yakaz\/yamerl$/;"	m
pkg_yamler_commit	deps/ranch/erlang.mk	/^pkg_yamler_commit = master$/;"	m
pkg_yamler_description	deps/ranch/erlang.mk	/^pkg_yamler_description = libyaml-based yaml loader for Erlang$/;"	m
pkg_yamler_fetch	deps/ranch/erlang.mk	/^pkg_yamler_fetch = git$/;"	m
pkg_yamler_homepage	deps/ranch/erlang.mk	/^pkg_yamler_homepage = https:\/\/github.com\/goertzenator\/yamler$/;"	m
pkg_yamler_name	deps/ranch/erlang.mk	/^pkg_yamler_name = yamler$/;"	m
pkg_yamler_repo	deps/ranch/erlang.mk	/^pkg_yamler_repo = https:\/\/github.com\/goertzenator\/yamler$/;"	m
pkg_yaws_commit	deps/ranch/erlang.mk	/^pkg_yaws_commit = master$/;"	m
pkg_yaws_description	deps/ranch/erlang.mk	/^pkg_yaws_description = Yaws webserver$/;"	m
pkg_yaws_fetch	deps/ranch/erlang.mk	/^pkg_yaws_fetch = git$/;"	m
pkg_yaws_homepage	deps/ranch/erlang.mk	/^pkg_yaws_homepage = http:\/\/yaws.hyber.org$/;"	m
pkg_yaws_name	deps/ranch/erlang.mk	/^pkg_yaws_name = yaws$/;"	m
pkg_yaws_repo	deps/ranch/erlang.mk	/^pkg_yaws_repo = https:\/\/github.com\/klacke\/yaws$/;"	m
pkg_zab_engine_commit	deps/ranch/erlang.mk	/^pkg_zab_engine_commit = master$/;"	m
pkg_zab_engine_description	deps/ranch/erlang.mk	/^pkg_zab_engine_description = zab propotocol implement by erlang$/;"	m
pkg_zab_engine_fetch	deps/ranch/erlang.mk	/^pkg_zab_engine_fetch = git$/;"	m
pkg_zab_engine_homepage	deps/ranch/erlang.mk	/^pkg_zab_engine_homepage = https:\/\/github.com\/xinmingyao\/zab_engine$/;"	m
pkg_zab_engine_name	deps/ranch/erlang.mk	/^pkg_zab_engine_name = zab_engine$/;"	m
pkg_zab_engine_repo	deps/ranch/erlang.mk	/^pkg_zab_engine_repo = https:\/\/github.com\/xinmingyao\/zab_engine$/;"	m
pkg_zabbix_sender_commit	deps/ranch/erlang.mk	/^pkg_zabbix_sender_commit = master$/;"	m
pkg_zabbix_sender_description	deps/ranch/erlang.mk	/^pkg_zabbix_sender_description = Zabbix trapper for sending data to Zabbix in pure Erlang$/;"	m
pkg_zabbix_sender_fetch	deps/ranch/erlang.mk	/^pkg_zabbix_sender_fetch = git$/;"	m
pkg_zabbix_sender_homepage	deps/ranch/erlang.mk	/^pkg_zabbix_sender_homepage = https:\/\/github.com\/stalkermn\/zabbix_sender$/;"	m
pkg_zabbix_sender_name	deps/ranch/erlang.mk	/^pkg_zabbix_sender_name = zabbix_sender$/;"	m
pkg_zabbix_sender_repo	deps/ranch/erlang.mk	/^pkg_zabbix_sender_repo = https:\/\/github.com\/stalkermn\/zabbix_sender.git$/;"	m
pkg_zeta_commit	deps/ranch/erlang.mk	/^pkg_zeta_commit = master$/;"	m
pkg_zeta_description	deps/ranch/erlang.mk	/^pkg_zeta_description = HTTP access log parser in Erlang$/;"	m
pkg_zeta_fetch	deps/ranch/erlang.mk	/^pkg_zeta_fetch = git$/;"	m
pkg_zeta_homepage	deps/ranch/erlang.mk	/^pkg_zeta_homepage = https:\/\/github.com\/s1n4\/zeta$/;"	m
pkg_zeta_name	deps/ranch/erlang.mk	/^pkg_zeta_name = zeta$/;"	m
pkg_zeta_repo	deps/ranch/erlang.mk	/^pkg_zeta_repo = https:\/\/github.com\/s1n4\/zeta$/;"	m
pkg_zippers_commit	deps/ranch/erlang.mk	/^pkg_zippers_commit = master$/;"	m
pkg_zippers_description	deps/ranch/erlang.mk	/^pkg_zippers_description = A library for functional zipper data structures in Erlang. Read more on zippers$/;"	m
pkg_zippers_fetch	deps/ranch/erlang.mk	/^pkg_zippers_fetch = git$/;"	m
pkg_zippers_homepage	deps/ranch/erlang.mk	/^pkg_zippers_homepage = https:\/\/github.com\/ferd\/zippers$/;"	m
pkg_zippers_name	deps/ranch/erlang.mk	/^pkg_zippers_name = zippers$/;"	m
pkg_zippers_repo	deps/ranch/erlang.mk	/^pkg_zippers_repo = https:\/\/github.com\/ferd\/zippers$/;"	m
pkg_zlists_commit	deps/ranch/erlang.mk	/^pkg_zlists_commit = master$/;"	m
pkg_zlists_description	deps/ranch/erlang.mk	/^pkg_zlists_description = Erlang lazy lists library.$/;"	m
pkg_zlists_fetch	deps/ranch/erlang.mk	/^pkg_zlists_fetch = git$/;"	m
pkg_zlists_homepage	deps/ranch/erlang.mk	/^pkg_zlists_homepage = https:\/\/github.com\/vjache\/erlang-zlists$/;"	m
pkg_zlists_name	deps/ranch/erlang.mk	/^pkg_zlists_name = zlists$/;"	m
pkg_zlists_repo	deps/ranch/erlang.mk	/^pkg_zlists_repo = https:\/\/github.com\/vjache\/erlang-zlists$/;"	m
pkg_zraft_lib_commit	deps/ranch/erlang.mk	/^pkg_zraft_lib_commit = master$/;"	m
pkg_zraft_lib_description	deps/ranch/erlang.mk	/^pkg_zraft_lib_description = Erlang raft consensus protocol implementation$/;"	m
pkg_zraft_lib_fetch	deps/ranch/erlang.mk	/^pkg_zraft_lib_fetch = git$/;"	m
pkg_zraft_lib_homepage	deps/ranch/erlang.mk	/^pkg_zraft_lib_homepage = https:\/\/github.com\/dreyk\/zraft_lib$/;"	m
pkg_zraft_lib_name	deps/ranch/erlang.mk	/^pkg_zraft_lib_name = zraft_lib$/;"	m
pkg_zraft_lib_repo	deps/ranch/erlang.mk	/^pkg_zraft_lib_repo = https:\/\/github.com\/dreyk\/zraft_lib$/;"	m
pkg_zucchini_commit	deps/ranch/erlang.mk	/^pkg_zucchini_commit = master$/;"	m
pkg_zucchini_description	deps/ranch/erlang.mk	/^pkg_zucchini_description = An Erlang INI parser$/;"	m
pkg_zucchini_fetch	deps/ranch/erlang.mk	/^pkg_zucchini_fetch = git$/;"	m
pkg_zucchini_homepage	deps/ranch/erlang.mk	/^pkg_zucchini_homepage = https:\/\/github.com\/devinus\/zucchini$/;"	m
pkg_zucchini_name	deps/ranch/erlang.mk	/^pkg_zucchini_name = zucchini$/;"	m
pkg_zucchini_repo	deps/ranch/erlang.mk	/^pkg_zucchini_repo = https:\/\/github.com\/devinus\/zucchini$/;"	m
pop	deps/lager/test/lager_test_backend.erl	/^pop() ->$/;"	f	module:lager_test_backend
pop	deps/lager/test/lager_test_backend.erl	/^pop(Sink) ->$/;"	f	module:lager_test_backend
pop_until	deps/lager/src/lager_handler_watcher.erl	/^pop_until(String, Fun) ->$/;"	f	module:lager_handler_watcher
posix_error	deps/lager/src/lager.erl	/^posix_error(Error) ->$/;"	f	module:lager
posix_error	deps/lager/src/lager.erl	/^posix_error(Error) when is_atom(Error) ->$/;"	f	module:lager
pp_arguments	deps/lager/src/lager_stdlib.erl	/^pp_arguments(PF, As, I) ->$/;"	f	module:lager_stdlib
pp_fun	deps/lager/src/lager_stdlib.erl	/^pp_fun(FmtMaxBytes) ->$/;"	f	module:lager_stdlib
pr	deps/lager/src/lager.erl	/^pr(Record, Module) when is_tuple(Record), is_atom(element(1, Record)) ->$/;"	f	module:lager
pr	deps/lager/src/lager.erl	/^pr(Record, Module, Options) when is_tuple(Record), is_atom(element(1, Record)), is_list(Options) ->$/;"	f	module:lager
pr	deps/lager/src/lager.erl	/^pr(Record, _) ->$/;"	f	module:lager
pr	deps/lager/src/lager.erl	/^pr(Record, _, _) ->$/;"	f	module:lager
pr_nested_record_test	deps/lager/test/pr_nested_record_test.erl	/^-module(pr_nested_record_test).$/;"	m
pr_stacktrace	deps/lager/src/lager.erl	/^pr_stacktrace(Stacktrace) ->$/;"	f	module:lager
pr_stacktrace	deps/lager/src/lager.erl	/^pr_stacktrace(Stacktrace, {Class, Reason}) ->$/;"	f	module:lager
pr_stacktrace_bad_arg_test	deps/lager/test/pr_stacktrace_test.erl	/^pr_stacktrace_bad_arg_test() ->$/;"	f	module:pr_stacktrace_test
pr_stacktrace_bad_arity_test	deps/lager/test/pr_stacktrace_test.erl	/^pr_stacktrace_bad_arity_test() ->$/;"	f	module:pr_stacktrace_test
pr_stacktrace_test	deps/lager/test/pr_stacktrace_test.erl	/^-module(pr_stacktrace_test).$/;"	m
pr_stacktrace_throw_test	deps/lager/test/pr_stacktrace_test.erl	/^pr_stacktrace_throw_test() ->$/;"	f	module:pr_stacktrace_test
precision	deps/lager/src/lager_format.erl	/^precision(Fmt, Args) ->$/;"	f	module:lager_format
precision	deps/lager/src/lager_format.erl	/^precision([$.|Fmt], Args) ->$/;"	f	module:lager_format
prefixed_integer	deps/lager/src/lager_format.erl	/^prefixed_integer(Int, F, Adj, Base, Pad, Prefix, Lowercase)$/;"	f	module:lager_format
prepare_options	deps/lager/src/lager_trunc_io.erl	/^prepare_options([], Options) ->$/;"	f	module:lager_trunc_io
prepare_options	deps/lager/src/lager_trunc_io.erl	/^prepare_options([{depth, Depth}|T], Options) when is_integer(Depth) ->$/;"	f	module:lager_trunc_io
prepare_options	deps/lager/src/lager_trunc_io.erl	/^prepare_options([{force_strings, Bool}|T], Options) when is_boolean(Bool) ->$/;"	f	module:lager_trunc_io
prepare_options	deps/lager/src/lager_trunc_io.erl	/^prepare_options([{lists_as_strings, Bool}|T], Options) when is_boolean(Bool) ->$/;"	f	module:lager_trunc_io
print	deps/lager/src/lager_trunc_io.erl	/^print(<<>>, _Max, #print_options{depth=1}) ->$/;"	f	module:lager_trunc_io
print	deps/lager/src/lager_trunc_io.erl	/^print(<<>>, _Max, Options) ->$/;"	f	module:lager_trunc_io
print	deps/lager/src/lager_trunc_io.erl	/^print(Atom, _Max, #print_options{force_strings=NoQuote}) when is_atom(Atom) ->$/;"	f	module:lager_trunc_io
print	deps/lager/src/lager_trunc_io.erl	/^print(Bin, Max, _Options) when is_binary(Bin), Max < 2 ->$/;"	f	module:lager_trunc_io
print	deps/lager/src/lager_trunc_io.erl	/^print(Bin, _Max, #print_options{depth=1}) when is_binary(Bin) ->$/;"	f	module:lager_trunc_io
print	deps/lager/src/lager_trunc_io.erl	/^print(Binary, 0, _Options) when is_bitstring(Binary) ->$/;"	f	module:lager_trunc_io
print	deps/lager/src/lager_trunc_io.erl	/^print(Binary, Max, Options) when is_binary(Binary) ->$/;"	f	module:lager_trunc_io
print	deps/lager/src/lager_trunc_io.erl	/^print(BitString, Max, Options) when is_bitstring(BitString) ->$/;"	f	module:lager_trunc_io
print	deps/lager/src/lager_trunc_io.erl	/^print(Float, _Max, _Options) when is_float(Float) ->$/;"	f	module:lager_trunc_io
print	deps/lager/src/lager_trunc_io.erl	/^print(Fun, Max, _Options) when is_function(Fun) ->$/;"	f	module:lager_trunc_io
print	deps/lager/src/lager_trunc_io.erl	/^print(Integer, _Max, _Options) when is_integer(Integer) ->$/;"	f	module:lager_trunc_io
print	deps/lager/src/lager_trunc_io.erl	/^print(List, Max, Options) when is_list(List) ->$/;"	f	module:lager_trunc_io
print	deps/lager/src/lager_trunc_io.erl	/^print(Map, Max, Options) ->$/;"	f	module:lager_trunc_io
print	deps/lager/src/lager_trunc_io.erl	/^print(Pid, _Max, _Options) when is_pid(Pid) ->$/;"	f	module:lager_trunc_io
print	deps/lager/src/lager_trunc_io.erl	/^print(Port, _Max, _Options) when is_port(Port) ->$/;"	f	module:lager_trunc_io
print	deps/lager/src/lager_trunc_io.erl	/^print(Ref, _Max, _Options) when is_reference(Ref) ->$/;"	f	module:lager_trunc_io
print	deps/lager/src/lager_trunc_io.erl	/^print(Term, Max) ->$/;"	f	module:lager_trunc_io
print	deps/lager/src/lager_trunc_io.erl	/^print(Term, Max, Options) when is_list(Options) ->$/;"	f	module:lager_trunc_io
print	deps/lager/src/lager_trunc_io.erl	/^print(Term, _Max, #print_options{force_strings=true}) when not is_list(Term), not is_binary(Term), not is_atom(Term) ->$/;"	f	module:lager_trunc_io
print	deps/lager/src/lager_trunc_io.erl	/^print(Tuple, Max, Options) when is_tuple(Tuple) ->$/;"	f	module:lager_trunc_io
print	deps/lager/src/lager_trunc_io.erl	/^print(_, Max, _Options) when Max < 0 -> {"...", 3};$/;"	f	module:lager_trunc_io
print	deps/lager/src/lager_trunc_io.erl	/^print(_, _, #print_options{depth=0}) -> {"...", 3};$/;"	f	module:lager_trunc_io
print	deps/lager/src/lager_trunc_io.erl	/^print({'$lager_record', Name, Fields}, Max, Options) ->$/;"	f	module:lager_trunc_io
print	deps/lager/src/lager_trunc_io.erl	/^print({inline_bitstring, B}, _Max, _Options) when is_bitstring(B) ->$/;"	f	module:lager_trunc_io
print_bad_state	deps/lager/test/lager_test_backend.erl	/^print_bad_state() ->$/;"	f	module:lager_test_backend
print_bad_state	deps/lager/test/lager_test_backend.erl	/^print_bad_state(Sink) ->$/;"	f	module:lager_test_backend
print_options	deps/lager/src/lager_trunc_io.erl	/^-record(print_options, {$/;"	r
print_silly_list	deps/lager/src/error_logger_lager_h.erl	/^print_silly_list(L) ->$/;"	f	module:error_logger_lager_h
print_silly_list	deps/lager/src/error_logger_lager_h.erl	/^print_silly_list(L) when is_list(L) ->$/;"	f	module:error_logger_lager_h
print_silly_list	deps/lager/src/error_logger_lager_h.erl	/^print_silly_list([H|T], Fmt, Acc) ->$/;"	f	module:error_logger_lager_h
print_silly_list	deps/lager/src/error_logger_lager_h.erl	/^print_silly_list([], Fmt, Acc) ->$/;"	f	module:error_logger_lager_h
print_silly_list	deps/lager/src/error_logger_lager_h.erl	/^print_silly_list([{K,V}|T], Fmt, Acc) ->$/;"	f	module:error_logger_lager_h
print_state	deps/lager/test/lager_test_backend.erl	/^print_state() ->$/;"	f	module:lager_test_backend
print_state	deps/lager/test/lager_test_backend.erl	/^print_state(Sink) ->$/;"	f	module:lager_test_backend
print_terms_without_format_string_test	deps/lager/src/lager_trunc_io.erl	/^print_terms_without_format_string_test() ->$/;"	f	module:lager_trunc_io
print_val	deps/lager/src/error_logger_lager_h.erl	/^print_val(Val) ->$/;"	f	module:error_logger_lager_h
proc_lib_format	deps/lager/src/lager_stdlib.erl	/^proc_lib_format([OwnReport,LinkReport], FmtMaxBytes) ->$/;"	f	module:lager_stdlib
process_data	src/ecache_protocol.erl	/^process_data(Socket, Transport, Data, SockState) when is_binary(Data)->$/;"	f	module:ecache_protocol
process_data	src/ecache_protocol.erl	/^process_data(Socket, Transport, Data, SockState)->$/;"	f	module:ecache_protocol
procs	deps/ranch/src/ranch.erl	/^procs(Ref, acceptors) ->$/;"	f	module:ranch
procs	deps/ranch/src/ranch.erl	/^procs(Ref, connections) ->$/;"	f	module:ranch
procs1	deps/ranch/src/ranch.erl	/^procs1(Ref, Sup) ->$/;"	f	module:ranch
produce_n_error_logger_msgs	deps/lager/test/lager_test_backend.erl	/^produce_n_error_logger_msgs(N) ->$/;"	f	module:lager_test_backend
profile_output	deps/ranch/src/ranch_app.erl	/^profile_output() ->$/;"	f	module:ranch_app
prop_equivalence	deps/lager/test/trunc_io_eqc.erl	/^prop_equivalence() ->$/;"	f	module:trunc_io_eqc
prop_format	deps/lager/test/trunc_io_eqc.erl	/^prop_format() ->$/;"	f	module:trunc_io_eqc
prop_matches_returns_boolean	deps/goldrush/src/glc_lib.erl	/^prop_matches_returns_boolean() ->$/;"	f	module:glc_lib
prop_reduce_returns	deps/goldrush/src/glc_lib.erl	/^prop_reduce_returns() ->$/;"	f	module:glc_lib
proto_verbose	deps/ranch/erlang.mk	/^proto_verbose = $(proto_verbose_$(V))$/;"	m
proto_verbose_0	deps/ranch/erlang.mk	/^proto_verbose_0 = @echo " PROTO " $(filter %.proto,$(?F));$/;"	m
quote_strip_test	deps/lager/src/lager_trunc_io.erl	/^quote_strip_test() ->$/;"	f	module:lager_trunc_io
ranch	deps/ranch/src/ranch.erl	/^-module(ranch).$/;"	m
ranch_acceptor	deps/ranch/src/ranch_acceptor.erl	/^-module(ranch_acceptor).$/;"	m
ranch_acceptors_sup	deps/ranch/src/ranch_acceptors_sup.erl	/^-module(ranch_acceptors_sup).$/;"	m
ranch_app	deps/ranch/src/ranch_app.erl	/^-module(ranch_app).$/;"	m
ranch_conns_sup	deps/ranch/src/ranch_conns_sup.erl	/^-module(ranch_conns_sup).$/;"	m
ranch_ct_hook	deps/ranch/test/ranch_ct_hook.erl	/^-module(ranch_ct_hook).$/;"	m
ranch_listener_sup	deps/ranch/src/ranch_listener_sup.erl	/^-module(ranch_listener_sup).$/;"	m
ranch_protocol	deps/ranch/src/ranch_protocol.erl	/^-module(ranch_protocol).$/;"	m
ranch_server	deps/ranch/src/ranch_server.erl	/^-module(ranch_server).$/;"	m
ranch_ssl	deps/ranch/src/ranch_ssl.erl	/^-module(ranch_ssl).$/;"	m
ranch_sup	deps/ranch/src/ranch_sup.erl	/^-module(ranch_sup).$/;"	m
ranch_tcp	deps/ranch/src/ranch_tcp.erl	/^-module(ranch_tcp).$/;"	m
ranch_transport	deps/ranch/src/ranch_transport.erl	/^-module(ranch_transport).$/;"	m
rawfile	deps/ranch/test/sendfile_SUITE.erl	/^rawfile(Config) ->$/;"	f	module:sendfile_SUITE
rawfile_bytes_large	deps/ranch/test/sendfile_SUITE.erl	/^rawfile_bytes_large(Config) ->$/;"	f	module:sendfile_SUITE
rawfile_bytes_zero	deps/ranch/test/sendfile_SUITE.erl	/^rawfile_bytes_zero(Config) ->$/;"	f	module:sendfile_SUITE
rawfile_chunk_size_large	deps/ranch/test/sendfile_SUITE.erl	/^rawfile_chunk_size_large(Config) ->$/;"	f	module:sendfile_SUITE
rawfile_offset_large	deps/ranch/test/sendfile_SUITE.erl	/^rawfile_offset_large(Config) ->$/;"	f	module:sendfile_SUITE
rawfile_range_large	deps/ranch/test/sendfile_SUITE.erl	/^rawfile_range_large(Config) ->$/;"	f	module:sendfile_SUITE
rawfile_range_medium	deps/ranch/test/sendfile_SUITE.erl	/^rawfile_range_medium(Config) ->$/;"	f	module:sendfile_SUITE
rawfile_range_small	deps/ranch/test/sendfile_SUITE.erl	/^rawfile_range_small(Config) ->$/;"	f	module:sendfile_SUITE
read_size	deps/ranch/src/ranch_transport.erl	/^read_size(0, _Sent, ChunkSize) ->$/;"	f	module:ranch_transport
read_size	deps/ranch/src/ranch_transport.erl	/^read_size(Bytes, Sent, ChunkSize) ->$/;"	f	module:ranch_transport
receive_loop	deps/ranch/test/acceptor_SUITE.erl	/^receive_loop(Message, Timeout) ->$/;"	f	module:acceptor_SUITE
receive_loop	deps/ranch/test/acceptor_SUITE.erl	/^receive_loop(Message, Timeout, N) ->$/;"	f	module:acceptor_SUITE
record_field_name	deps/lager/src/lager_transform.erl	/^record_field_name({record_field, _, {atom, _, FieldName}, _Default}) ->$/;"	f	module:lager_transform
record_field_name	deps/lager/src/lager_transform.erl	/^record_field_name({record_field, _, {atom, _, FieldName}}) ->$/;"	f	module:lager_transform
record_field_name	deps/lager/src/lager_transform.erl	/^record_field_name({typed_record_field, Field, _Type}) ->$/;"	f	module:lager_transform
record_fields	deps/lager/src/lager_trunc_io.erl	/^record_fields([], _, _) ->$/;"	f	module:lager_trunc_io
record_fields	deps/lager/src/lager_trunc_io.erl	/^record_fields([{Field, Value}|T], Max, Options) ->$/;"	f	module:lager_trunc_io
record_fields	deps/lager/src/lager_trunc_io.erl	/^record_fields(_, Max, #print_options{depth=D}) when Max < 4; D == 0 ->$/;"	f	module:lager_trunc_io
recv	deps/ranch/src/ranch_ssl.erl	/^recv(Socket, Length, Timeout) ->$/;"	f	module:ranch_ssl
recv	deps/ranch/src/ranch_tcp.erl	/^recv(Socket, Length, Timeout) ->$/;"	f	module:ranch_tcp
recv	deps/ranch/test/sendfile_SUITE.erl	/^recv(Transport, Server, Size) ->$/;"	f	module:sendfile_SUITE
recv_send_trace	deps/ranch/test/sendfile_SUITE.erl	/^recv_send_trace([Size | Rest], Pid) ->$/;"	f	module:sendfile_SUITE
recv_send_trace	deps/ranch/test/sendfile_SUITE.erl	/^recv_send_trace([], _Pid) ->$/;"	f	module:sendfile_SUITE
reduce	deps/goldrush/src/glc_lib.erl	/^reduce(Query) ->$/;"	f	module:glc_lib
reduce_returns_test	deps/goldrush/src/glc_lib.erl	/^reduce_returns_test() ->$/;"	f	module:glc_lib
reg_name	deps/goldrush/src/glc.erl	/^reg_name(Module, Name) ->$/;"	f	module:glc
reinstall_on_initial_failure_test_	deps/lager/src/lager_handler_watcher.erl	/^reinstall_on_initial_failure_test_() ->$/;"	f	module:lager_handler_watcher
reinstall_on_runtime_failure_test_	deps/lager/src/lager_handler_watcher.erl	/^reinstall_on_runtime_failure_test_() ->$/;"	f	module:lager_handler_watcher
reload	src/reloader.erl	/^reload(Module) ->$/;"	f	module:reloader
reload_modules	src/reloader.erl	/^reload_modules(Modules) ->$/;"	f	module:reloader
reloader	src/reloader.erl	/^-module(reloader).$/;"	m
remove_conn_and_wait_protocol	deps/ranch/test/remove_conn_and_wait_protocol.erl	/^-module(remove_conn_and_wait_protocol).$/;"	m
remove_connection	deps/ranch/src/ranch.erl	/^remove_connection(Ref) ->$/;"	f	module:ranch
render_template	deps/ranch/erlang.mk	/^define render_template$/;"	m
repeat	deps/goldrush/src/glc_lib.erl	/^repeat(Query, Fun) ->$/;"	f	module:glc_lib
report_error	deps/ranch/src/ranch_conns_sup.erl	/^report_error(Ref, Protocol, Pid, Reason) ->$/;"	f	module:ranch_conns_sup
report_error	deps/ranch/src/ranch_conns_sup.erl	/^report_error(_, _, _, normal) ->$/;"	f	module:ranch_conns_sup
report_error	deps/ranch/src/ranch_conns_sup.erl	/^report_error(_, _, _, shutdown) ->$/;"	f	module:ranch_conns_sup
report_error	deps/ranch/src/ranch_conns_sup.erl	/^report_error(_, _, _, {shutdown, _}) ->$/;"	f	module:ranch_conns_sup
require	deps/ranch/src/ranch.erl	/^require([App|Tail]) ->$/;"	f	module:ranch
require	deps/ranch/src/ranch.erl	/^require([]) ->$/;"	f	module:ranch
required	deps/goldrush/src/glc_lib.erl	/^required(Other) ->$/;"	f	module:glc_lib
required	deps/goldrush/src/glc_lib.erl	/^required([H|T], Acc) ->$/;"	f	module:glc_lib
required	deps/goldrush/src/glc_lib.erl	/^required([], []) ->$/;"	f	module:glc_lib
required	deps/goldrush/src/glc_lib.erl	/^required([], [_|_]=Req) ->$/;"	f	module:glc_lib
required	deps/goldrush/src/glc_lib.erl	/^required([{all, Conds}|T], Acc) ->$/;"	f	module:glc_lib
required	deps/goldrush/src/glc_lib.erl	/^required([{any, _}|_]=Cond, Acc) ->$/;"	f	module:glc_lib
required	deps/goldrush/src/glc_lib.erl	/^required({all, Conds}) ->$/;"	f	module:glc_lib
required	deps/goldrush/src/glc_lib.erl	/^required({any, [H|_]=Conds}) ->$/;"	f	module:glc_lib
reset_counters	deps/goldrush/src/glc.erl	/^reset_counters(Module) ->$/;"	f	module:glc
reset_counters	deps/goldrush/src/glc.erl	/^reset_counters(Module, Counter) ->$/;"	f	module:glc
reset_counters	deps/goldrush/src/gr_counter.erl	/^reset_counters(Server, Counter) ->$/;"	f	module:gr_counter
result	deps/ranch/test/sendfile_SUITE.erl	/^result(Ref) ->$/;"	f	module:sendfile_SUITE
returns	deps/goldrush/src/glc_lib.erl	/^returns(Fun) ->$/;"	f	module:glc_lib
reverse_binary	deps/ranch/examples/tcp_reverse/src/reverse_protocol.erl	/^reverse_binary(B) when is_binary(B) ->$/;"	f	module:reverse_protocol
reverse_binary	src/ecache_protocol.erl	/^reverse_binary(B) ->$/;"	f	module:ecache_protocol
reverse_binary	src/ecache_protocol.erl	/^reverse_binary(B) when is_binary(B) ->$/;"	f	module:ecache_protocol
reverse_protocol	deps/ranch/examples/tcp_reverse/src/reverse_protocol.erl	/^-module(reverse_protocol).$/;"	m
rotate_all	deps/lager/src/lager.erl	/^rotate_all() -> $/;"	f	module:lager
rotate_file_fail_test	deps/lager/src/lager_util.erl	/^rotate_file_fail_test() ->$/;"	f	module:lager_util
rotate_file_test	deps/lager/src/lager_util.erl	/^rotate_file_test() ->$/;"	f	module:lager_util
rotate_handler	deps/lager/src/lager.erl	/^rotate_handler(Handler) ->$/;"	f	module:lager
rotate_handler	deps/lager/src/lager.erl	/^rotate_handler(Handler, Sink) ->$/;"	f	module:lager
rotate_handlers	deps/lager/src/lager.erl	/^rotate_handlers(Handlers) ->$/;"	f	module:lager
rotate_logfile	deps/lager/src/lager_util.erl	/^rotate_logfile(File, 0) ->$/;"	f	module:lager_util
rotate_logfile	deps/lager/src/lager_util.erl	/^rotate_logfile(File, 1) ->$/;"	f	module:lager_util
rotate_logfile	deps/lager/src/lager_util.erl	/^rotate_logfile(File, Count) ->$/;"	f	module:lager_util
rotate_sink	deps/lager/src/lager.erl	/^rotate_sink(Sink) ->$/;"	f	module:lager
rotate_test_	deps/lager/test/lager_rotate.erl	/^rotate_test_() ->$/;"	f	module:lager_rotate
rotation_calculation_test	deps/lager/src/lager_util.erl	/^rotation_calculation_test() ->$/;"	f	module:lager_util
rotation_test_	deps/lager/src/lager_file_backend.erl	/^rotation_test_() ->$/;"	f	module:lager_file_backend
run	deps/goldrush/src/glc.erl	/^run(Module, Fun, Event) ->$/;"	f	module:glc
run	deps/goldrush/src/glc.erl	/^run(Module, Fun, Event) when is_list(Event) ->$/;"	f	module:glc
safe	deps/lager/src/lager_trunc_io.erl	/^safe(What, Len) ->$/;"	f	module:lager_trunc_io
safe_format	deps/lager/src/lager.erl	/^safe_format(Fmt, Args, Limit) ->$/;"	f	module:lager
safe_format	deps/lager/src/lager.erl	/^safe_format(Fmt, Args, Limit, Options) ->$/;"	f	module:lager
safe_format_chop	deps/lager/src/lager.erl	/^safe_format_chop(Fmt, Args, Limit) ->$/;"	f	module:lager
safe_format_test	deps/lager/test/lager_test_backend.erl	/^safe_format_test() ->$/;"	f	module:lager_test_backend
sane_float_printing_test	deps/lager/src/lager_trunc_io.erl	/^sane_float_printing_test() ->$/;"	f	module:lager_trunc_io
sasl_limited_str	deps/lager/src/lager_crash_log.erl	/^sasl_limited_str(crash_report, Report, FmtMaxBytes) ->$/;"	f	module:lager_crash_log
sasl_limited_str	deps/lager/src/lager_crash_log.erl	/^sasl_limited_str(progress, Report, FmtMaxBytes) ->$/;"	f	module:lager_crash_log
sasl_limited_str	deps/lager/src/lager_crash_log.erl	/^sasl_limited_str(supervisor_report, Report, FmtMaxBytes) ->$/;"	f	module:lager_crash_log
sasl_type_to_report_head	deps/lager/src/lager_crash_log.erl	/^sasl_type_to_report_head(crash_report) ->$/;"	f	module:lager_crash_log
sasl_type_to_report_head	deps/lager/src/lager_crash_log.erl	/^sasl_type_to_report_head(progress) ->$/;"	f	module:lager_crash_log
sasl_type_to_report_head	deps/lager/src/lager_crash_log.erl	/^sasl_type_to_report_head(supervisor_report) ->$/;"	f	module:lager_crash_log
schedule_rotation	deps/lager/src/lager_crash_log.erl	/^schedule_rotation(Date) ->$/;"	f	module:lager_crash_log
schedule_rotation	deps/lager/src/lager_crash_log.erl	/^schedule_rotation(undefined) ->$/;"	f	module:lager_crash_log
schedule_rotation	deps/lager/src/lager_file_backend.erl	/^schedule_rotation(Name, Date) ->$/;"	f	module:lager_file_backend
schedule_rotation	deps/lager/src/lager_file_backend.erl	/^schedule_rotation(_, undefined) ->$/;"	f	module:lager_file_backend
secure	deps/ranch/src/ranch_ssl.erl	/^secure() ->$/;"	f	module:ranch_ssl
secure	deps/ranch/src/ranch_tcp.erl	/^secure() ->$/;"	f	module:ranch_tcp
send	deps/ranch/src/ranch_ssl.erl	/^send(Socket, Packet) ->$/;"	f	module:ranch_ssl
send	deps/ranch/src/ranch_tcp.erl	/^send(Socket, Packet) ->$/;"	f	module:ranch_tcp
send	src/tcp_client.erl	/^send() ->$/;"	f	module:tcp_client
send	src/tcp_client.erl	/^send(ClientId, Msg) ->$/;"	f	module:tcp_client
send	src/tcp_client.erl	/^send(ClientId, Msg) when is_list(Msg) ->$/;"	f	module:tcp_client
send_message	src/tcp_client.erl	/^send_message(ClientId, Msg) ->$/;"	f	module:tcp_client
sendfile	deps/ranch/src/ranch_ssl.erl	/^sendfile(Socket, File, Offset, Bytes) ->$/;"	f	module:ranch_ssl
sendfile	deps/ranch/src/ranch_ssl.erl	/^sendfile(Socket, File, Offset, Bytes, Opts) ->$/;"	f	module:ranch_ssl
sendfile	deps/ranch/src/ranch_ssl.erl	/^sendfile(Socket, Filename) ->$/;"	f	module:ranch_ssl
sendfile	deps/ranch/src/ranch_tcp.erl	/^sendfile(Socket, File, Offset, Bytes) ->$/;"	f	module:ranch_tcp
sendfile	deps/ranch/src/ranch_tcp.erl	/^sendfile(Socket, Filename) ->$/;"	f	module:ranch_tcp
sendfile	deps/ranch/src/ranch_tcp.erl	/^sendfile(Socket, Filename, Offset, Bytes, Opts)$/;"	f	module:ranch_tcp
sendfile	deps/ranch/src/ranch_tcp.erl	/^sendfile(Socket, RawFile, Offset, Bytes, Opts) ->$/;"	f	module:ranch_tcp
sendfile	deps/ranch/src/ranch_transport.erl	/^sendfile(Transport, Socket, Filename, Offset, Bytes, Opts)$/;"	f	module:ranch_transport
sendfile	deps/ranch/src/ranch_transport.erl	/^sendfile(Transport, Socket, RawFile, Offset, Bytes, Opts) ->$/;"	f	module:ranch_transport
sendfile_SUITE	deps/ranch/test/sendfile_SUITE.erl	/^-module(sendfile_SUITE).$/;"	m
sendfile_loop	deps/ranch/src/ranch_transport.erl	/^sendfile_loop(Transport, Socket, RawFile, Bytes, Sent, ChunkSize) ->$/;"	f	module:ranch_transport
sendfile_loop	deps/ranch/src/ranch_transport.erl	/^sendfile_loop(_Transport, _Socket, _RawFile, Sent, Sent, _ChunkSize)$/;"	f	module:ranch_transport
sep	deps/lager/src/lager_stdlib.erl	/^sep(1, S) -> S;$/;"	f	module:lager_stdlib
sep	deps/lager/src/lager_stdlib.erl	/^sep(_, S) -> [$\\n | S].$/;"	f	module:lager_stdlib
set	deps/lager/src/lager_config.erl	/^set(Key, Value) ->$/;"	f	module:lager_config
set	deps/lager/src/lager_config.erl	/^set({Sink, Key}, Value) ->$/;"	f	module:lager_config
set_addr	deps/ranch/src/ranch_server.erl	/^set_addr(Ref, Addr) ->$/;"	f	module:ranch_server
set_connections_sup	deps/ranch/src/ranch_server.erl	/^set_connections_sup(Ref, Pid) ->$/;"	f	module:ranch_server
set_high_water	deps/lager/src/error_logger_lager_h.erl	/^set_high_water(N) ->$/;"	f	module:error_logger_lager_h
set_loghwm	deps/lager/src/lager.erl	/^set_loghwm(Handler, Hwm) when is_integer(Hwm) ->$/;"	f	module:lager
set_loghwm	deps/lager/src/lager.erl	/^set_loghwm(Sink, Handler, Hwm) when is_integer(Hwm) ->$/;"	f	module:lager
set_loghwm	deps/lager/src/lager.erl	/^set_loghwm(Sink, Handler, Ident, Hwm) when is_integer(Hwm) ->$/;"	f	module:lager
set_loglevel	deps/lager/src/lager.erl	/^set_loglevel(Handler, Ident, Level) when is_atom(Level) ->$/;"	f	module:lager
set_loglevel	deps/lager/src/lager.erl	/^set_loglevel(Handler, Level) when is_atom(Level) ->$/;"	f	module:lager
set_loglevel	deps/lager/src/lager.erl	/^set_loglevel(Sink, Handler, Ident, Level) when is_atom(Level) ->$/;"	f	module:lager
set_loglevel_test_	deps/lager/src/lager_console_backend.erl	/^set_loglevel_test_() ->$/;"	f	module:lager_console_backend
set_max_connections	deps/ranch/src/ranch.erl	/^set_max_connections(Ref, MaxConnections) ->$/;"	f	module:ranch
set_max_connections	deps/ranch/src/ranch_server.erl	/^set_max_connections(Ref, MaxConnections) ->$/;"	f	module:ranch_server
set_new_listener_opts	deps/ranch/src/ranch_server.erl	/^set_new_listener_opts(Ref, MaxConns, Opts) ->$/;"	f	module:ranch_server
set_option_default	deps/ranch/src/ranch.erl	/^set_option_default(Opts, Key, Value) ->$/;"	f	module:ranch
set_protocol_options	deps/ranch/src/ranch.erl	/^set_protocol_options(Ref, Opts) ->$/;"	f	module:ranch
set_protocol_options	deps/ranch/src/ranch_server.erl	/^set_protocol_options(Ref, ProtoOpts) ->$/;"	f	module:ranch_server
setopts	deps/ranch/src/ranch_ssl.erl	/^setopts(Socket, Opts) ->$/;"	f	module:ranch_ssl
setopts	deps/ranch/src/ranch_tcp.erl	/^setopts(Socket, Opts) ->$/;"	f	module:ranch_tcp
setup	deps/goldrush/src/gr_manager.erl	/^setup(Name, Data) ->$/;"	f	module:gr_manager
setup	deps/lager/test/lager_test_backend.erl	/^setup() ->$/;"	f	module:lager_test_backend
setup_query	deps/goldrush/src/glc.erl	/^setup_query(Module, Query) ->$/;"	f	module:glc
setup_query	deps/goldrush/src/glc.erl	/^setup_query(Module, Query, Store) ->$/;"	f	module:glc
setup_sink	deps/lager/test/lager_test_backend.erl	/^setup_sink() ->$/;"	f	module:lager_test_backend
severity	deps/lager/src/lager_msg.erl	/^severity(Msg) ->$/;"	f	module:lager_msg
severity_as_int	deps/lager/src/lager_msg.erl	/^severity_as_int(Msg) ->$/;"	f	module:lager_msg
sfx_stub	deps/ranch/erlang.mk	/^define sfx_stub$/;"	m
shoot	deps/ranch/src/ranch_conns_sup.erl	/^shoot(State=#state{ref=Ref, transport=Transport, ack_timeout=AckTimeout, max_conns=MaxConns},$/;"	f	module:ranch_conns_sup
shutdown	deps/ranch/src/ranch_ssl.erl	/^shutdown(Socket, How) ->$/;"	f	module:ranch_ssl
shutdown	deps/ranch/src/ranch_tcp.erl	/^shutdown(Socket, How) ->$/;"	f	module:ranch_tcp
shutdown_SUITE	deps/ranch/test/shutdown_SUITE.erl	/^-module(shutdown_SUITE).$/;"	m
shutdown_children	deps/ranch/src/ranch_conns_sup.erl	/^shutdown_children(Pids) ->$/;"	f	module:ranch_conns_sup
sink_name_test_	deps/lager/src/lager_util.erl	/^sink_name_test_() ->$/;"	f	module:lager_util
sock_state	src/ecache_protocol.erl	/^-record(sock_state, {socket, transport, auth, state}).$/;"	r
sockets	deps/ranch/test/sendfile_SUITE.erl	/^sockets(Config) ->$/;"	f	module:sendfile_SUITE
sockname	deps/ranch/src/ranch_ssl.erl	/^sockname(Socket) ->$/;"	f	module:ranch_ssl
sockname	deps/ranch/src/ranch_tcp.erl	/^sockname(Socket) ->$/;"	f	module:ranch_tcp
space	deps/ranch/erlang.mk	/^space := $(empty) $(empty)$/;"	m
special_process	deps/lager/test/special_process.erl	/^-module(special_process).$/;"	m
ssl_accept_error	deps/ranch/test/acceptor_SUITE.erl	/^ssl_accept_error(_) ->$/;"	f	module:acceptor_SUITE
ssl_accept_socket	deps/ranch/test/acceptor_SUITE.erl	/^ssl_accept_socket(_) ->$/;"	f	module:acceptor_SUITE
ssl_active_echo	deps/ranch/test/acceptor_SUITE.erl	/^ssl_active_echo(_) ->$/;"	f	module:acceptor_SUITE
ssl_chunk_size	deps/ranch/test/sendfile_SUITE.erl	/^ssl_chunk_size(Config) ->$/;"	f	module:sendfile_SUITE
ssl_echo	deps/ranch/test/acceptor_SUITE.erl	/^ssl_echo(_) ->$/;"	f	module:acceptor_SUITE
ssl_error_eacces	deps/ranch/test/acceptor_SUITE.erl	/^ssl_error_eacces(_) ->$/;"	f	module:acceptor_SUITE
ssl_error_eaddrinuse	deps/ranch/test/acceptor_SUITE.erl	/^ssl_error_eaddrinuse(_) ->$/;"	f	module:acceptor_SUITE
ssl_error_no_cert	deps/ranch/test/acceptor_SUITE.erl	/^ssl_error_no_cert(_) ->$/;"	f	module:acceptor_SUITE
ssl_sni_echo	deps/ranch/test/acceptor_SUITE.erl	/^ssl_sni_echo(_) ->$/;"	f	module:acceptor_SUITE
ssl_sni_fail	deps/ranch/test/acceptor_SUITE.erl	/^ssl_sni_fail(_) ->$/;"	f	module:acceptor_SUITE
stamp	src/reloader.erl	/^stamp() ->$/;"	f	module:reloader
start	deps/goldrush/src/glc.erl	/^start() ->$/;"	f	module:glc
start	deps/goldrush/src/gr_app.erl	/^start(_Type, _Args) ->$/;"	f	module:gr_app
start	deps/lager/src/lager.erl	/^start() -> start(lager).$/;"	f	module:lager
start	deps/lager/src/lager.erl	/^start(App) ->$/;"	f	module:lager
start	deps/lager/src/lager_app.erl	/^start() ->$/;"	f	module:lager_app
start	deps/lager/src/lager_app.erl	/^start(_StartType, _StartArgs) ->$/;"	f	module:lager_app
start	deps/lager/src/lager_crash_log.erl	/^start(Filename, MaxBytes, Size, Date, Count) ->$/;"	f	module:lager_crash_log
start	deps/lager/src/lager_handler_watcher.erl	/^start(Sink, Module, Config) ->$/;"	f	module:lager_handler_watcher
start	deps/lager/test/crash.erl	/^start() ->$/;"	f	module:crash
start	deps/lager/test/special_process.erl	/^start() ->$/;"	f	module:special_process
start	deps/ranch/examples/tcp_echo/src/tcp_echo_app.erl	/^start(_Type, _Args) ->$/;"	f	module:tcp_echo_app
start	deps/ranch/examples/tcp_reverse/src/tcp_reverse_app.erl	/^start(_Type, _Args) ->$/;"	f	module:tcp_reverse_app
start	deps/ranch/src/ranch_app.erl	/^start(_, _) ->$/;"	f	module:ranch_app
start	src/ecache_app.erl	/^start(_StartType, _StartArgs) ->$/;"	f	module:ecache_app
start	src/reloader.erl	/^start() ->$/;"	f	module:reloader
start	src/tcp_client.erl	/^start() ->$/;"	f	module:tcp_client
start_configured_trace	deps/lager/src/lager_app.erl	/^start_configured_trace({Handler, Filter, Level}) when is_atom(Level) ->$/;"	f	module:lager_app
start_configured_trace	deps/lager/src/lager_app.erl	/^start_configured_trace({Handler, Filter}) ->$/;"	f	module:lager_app
start_error	deps/ranch/src/ranch.erl	/^start_error(E=eacces, _) -> {error, E};$/;"	f	module:ranch
start_error	deps/ranch/src/ranch.erl	/^start_error(E=eaddrinuse, _) -> {error, E};$/;"	f	module:ranch
start_error	deps/ranch/src/ranch.erl	/^start_error(E=no_cert, _) -> {error, E};$/;"	f	module:ranch
start_error	deps/ranch/src/ranch.erl	/^start_error(_, Error) -> Error.$/;"	f	module:ranch
start_error_logger_handler	deps/lager/src/lager_app.erl	/^start_error_logger_handler(false, _HWM, _Whitelist) ->$/;"	f	module:lager_app
start_error_logger_handler	deps/lager/src/lager_app.erl	/^start_error_logger_handler(true, HWM, WhiteList) ->$/;"	f	module:lager_app
start_handler	deps/lager/src/lager_app.erl	/^start_handler(Sink, Module, Config) ->$/;"	f	module:lager_app
start_handlers	deps/lager/src/lager_app.erl	/^start_handlers(Sink, Handlers) ->$/;"	f	module:lager_app
start_handlers	deps/lager/src/lager_app.erl	/^start_handlers(_Sink, Handlers) when not is_list(Handlers) ->$/;"	f	module:lager_app
start_handlers	deps/lager/src/lager_app.erl	/^start_handlers(_Sink, undefined) ->$/;"	f	module:lager_app
start_link	deps/goldrush/src/gr_counter.erl	/^start_link(Name) ->$/;"	f	module:gr_counter
start_link	deps/goldrush/src/gr_counter_sup.erl	/^start_link() ->$/;"	f	module:gr_counter_sup
start_link	deps/goldrush/src/gr_manager.erl	/^start_link(Name, Managee, Data) ->$/;"	f	module:gr_manager
start_link	deps/goldrush/src/gr_manager_sup.erl	/^start_link() ->$/;"	f	module:gr_manager_sup
start_link	deps/goldrush/src/gr_param.erl	/^start_link(Name) ->$/;"	f	module:gr_param
start_link	deps/goldrush/src/gr_param_sup.erl	/^start_link() ->$/;"	f	module:gr_param_sup
start_link	deps/goldrush/src/gr_sup.erl	/^start_link() ->$/;"	f	module:gr_sup
start_link	deps/lager/src/lager_crash_log.erl	/^start_link(Filename, MaxBytes, Size, Date, Count) ->$/;"	f	module:lager_crash_log
start_link	deps/lager/src/lager_handler_watcher.erl	/^start_link(Sink, Module, Config) ->$/;"	f	module:lager_handler_watcher
start_link	deps/lager/src/lager_handler_watcher_sup.erl	/^start_link() ->$/;"	f	module:lager_handler_watcher_sup
start_link	deps/lager/src/lager_sup.erl	/^start_link() ->$/;"	f	module:lager_sup
start_link	deps/ranch/examples/tcp_echo/src/echo_protocol.erl	/^start_link(Ref, Socket, Transport, Opts) ->$/;"	f	module:echo_protocol
start_link	deps/ranch/examples/tcp_echo/src/tcp_echo_sup.erl	/^start_link() ->$/;"	f	module:tcp_echo_sup
start_link	deps/ranch/examples/tcp_reverse/src/reverse_protocol.erl	/^start_link(Ref, Socket, Transport, Opts) ->$/;"	f	module:reverse_protocol
start_link	deps/ranch/examples/tcp_reverse/src/tcp_reverse_sup.erl	/^start_link() ->$/;"	f	module:tcp_reverse_sup
start_link	deps/ranch/src/ranch_acceptor.erl	/^start_link(LSocket, Transport, ConnsSup) ->$/;"	f	module:ranch_acceptor
start_link	deps/ranch/src/ranch_acceptors_sup.erl	/^start_link(Ref, NumAcceptors, Transport, TransOpts) ->$/;"	f	module:ranch_acceptors_sup
start_link	deps/ranch/src/ranch_conns_sup.erl	/^start_link(Ref, ConnType, Shutdown, Transport, AckTimeout, Protocol) ->$/;"	f	module:ranch_conns_sup
start_link	deps/ranch/src/ranch_listener_sup.erl	/^start_link(Ref, NumAcceptors, Transport, TransOpts, Protocol, ProtoOpts) ->$/;"	f	module:ranch_listener_sup
start_link	deps/ranch/src/ranch_server.erl	/^start_link() ->$/;"	f	module:ranch_server
start_link	deps/ranch/src/ranch_sup.erl	/^start_link() ->$/;"	f	module:ranch_sup
start_link	deps/ranch/test/active_echo_protocol.erl	/^start_link(Ref, Socket, Transport, Opts) ->$/;"	f	module:active_echo_protocol
start_link	deps/ranch/test/check_tcp_options.erl	/^start_link(_, Socket, _, [{pid, TestPid}|TcpOptions]) ->$/;"	f	module:check_tcp_options
start_link	deps/ranch/test/crash_protocol.erl	/^start_link(_, _, _, _) ->$/;"	f	module:crash_protocol
start_link	deps/ranch/test/echo_protocol.erl	/^start_link(Ref, Socket, Transport, Opts) ->$/;"	f	module:echo_protocol
start_link	deps/ranch/test/notify_and_wait_protocol.erl	/^start_link(_, _, _, [{msg, Msg}, {pid, TestPid}]) ->$/;"	f	module:notify_and_wait_protocol
start_link	deps/ranch/test/remove_conn_and_wait_protocol.erl	/^start_link(Ref, _, _, [{remove, MaybeRemove, Timeout}]) ->$/;"	f	module:remove_conn_and_wait_protocol
start_link	deps/ranch/test/supervisor_separate.erl	/^start_link(Ref, Socket, Transport, Opts) ->$/;"	f	module:supervisor_separate
start_link	deps/ranch/test/trap_exit_protocol.erl	/^start_link(Ref, Socket, Transport, Opts) ->$/;"	f	module:trap_exit_protocol
start_link	src/ecache_protocol.erl	/^start_link(Ref, Socket, Transport, Opts) ->$/;"	f	module:ecache_protocol
start_link	src/ecache_sup.erl	/^start_link() ->$/;"	f	module:ecache_sup
start_link	src/reloader.erl	/^start_link() ->$/;"	f	module:reloader
start_listener	deps/ranch/src/ranch.erl	/^start_listener(Ref, NumAcceptors, Transport, TransOpts, Protocol, ProtoOpts)$/;"	f	module:ranch
start_listener	deps/ranch/src/ranch.erl	/^start_listener(Ref, Transport, TransOpts, Protocol, ProtoOpts) ->$/;"	f	module:ranch
start_ok	deps/lager/src/lager.erl	/^start_ok(App, {error, Reason}) ->$/;"	f	module:lager
start_ok	deps/lager/src/lager.erl	/^start_ok(App, {error, {not_started, Dep}}) ->$/;"	f	module:lager
start_ok	deps/lager/src/lager.erl	/^start_ok(_App, ok) -> ok;$/;"	f	module:lager
start_ok	deps/lager/src/lager.erl	/^start_ok(_App, {error, {already_started, _App}}) -> ok;$/;"	f	module:lager
start_protocol	deps/ranch/src/ranch_conns_sup.erl	/^start_protocol(SupPid, Socket) ->$/;"	f	module:ranch_conns_sup
start_throttle	deps/lager/src/lager_app.erl	/^start_throttle(Sink, Threshold, Window) ->$/;"	f	module:lager_app
stash_record	deps/lager/src/lager_transform.erl	/^stash_record(Record) ->$/;"	f	module:lager_transform
state	deps/goldrush/src/glc_code.erl	/^-record(state, {$/;"	r
state	deps/goldrush/src/gr_counter.erl	/^-record(state, {table_id, waiting=[]}).$/;"	r
state	deps/goldrush/src/gr_manager.erl	/^-record(state, {table_id :: ets:tab(), managee :: atom()}).$/;"	r
state	deps/goldrush/src/gr_param.erl	/^-record(state, {table_id, waiting=[]}).$/;"	r
state	deps/lager/src/error_logger_lager_h.erl	/^-record(state, { $/;"	r
state	deps/lager/src/lager_backend_throttle.erl	/^-record(state, {$/;"	r
state	deps/lager/src/lager_common_test_backend.erl	/^-record(state, {level :: {mask, integer()},$/;"	r
state	deps/lager/src/lager_console_backend.erl	/^-record(state, {level :: {'mask', integer()},$/;"	r
state	deps/lager/src/lager_crash_log.erl	/^-record(state, {$/;"	r
state	deps/lager/src/lager_file_backend.erl	/^-record(state, {$/;"	r
state	deps/lager/src/lager_handler_watcher.erl	/^-record(state, {$/;"	r
state	deps/lager/src/lager_manager_killer.erl	/^-record(state, {$/;"	r
state	deps/lager/test/crash.erl	/^-record(state, {$/;"	r
state	deps/lager/test/lager_slow_backend.erl	/^-record(state, {$/;"	r
state	deps/lager/test/lager_test_backend.erl	/^-record(state, {level :: list(), buffer :: list(), ignored :: term()}).$/;"	r
state	deps/ranch/examples/tcp_reverse/src/reverse_protocol.erl	/^-record(state, {socket, transport}).$/;"	r
state	deps/ranch/src/ranch_conns_sup.erl	/^-record(state, {$/;"	r
state	deps/ranch/src/ranch_server.erl	/^-record(state, {$/;"	r
state	src/reloader.erl	/^-record(state, {last, tref}).$/;"	r
status	deps/lager/src/lager.erl	/^status() ->$/;"	f	module:lager
stop	deps/goldrush/src/gr_app.erl	/^stop(_State) ->$/;"	f	module:gr_app
stop	deps/lager/src/lager_app.erl	/^stop(Handlers) ->$/;"	f	module:lager_app
stop	deps/ranch/examples/tcp_echo/src/tcp_echo_app.erl	/^stop(_State) ->$/;"	f	module:tcp_echo_app
stop	deps/ranch/examples/tcp_reverse/src/tcp_reverse_app.erl	/^stop(_State) ->$/;"	f	module:tcp_reverse_app
stop	deps/ranch/src/ranch_app.erl	/^stop(_) ->$/;"	f	module:ranch_app
stop	src/ecache_app.erl	/^stop(_State) ->$/;"	f	module:ecache_app
stop	src/reloader.erl	/^stop() ->$/;"	f	module:reloader
stop_listener	deps/ranch/src/ranch.erl	/^stop_listener(Ref) ->$/;"	f	module:ranch
stop_trace	deps/lager/src/lager.erl	/^stop_trace(Backend, Filter, Level) ->$/;"	f	module:lager
stop_trace	deps/lager/src/lager.erl	/^stop_trace({Backend, Filter, Level}) ->$/;"	f	module:lager
stop_trace_int	deps/lager/src/lager.erl	/^stop_trace_int({_Filter, _Level, Backend} = Trace, Sink) ->$/;"	f	module:lager
string	deps/lager/src/lager_format.erl	/^string(S, F, Adj, P, Pad) when F >= P ->$/;"	f	module:lager_format
string	deps/lager/src/lager_format.erl	/^string(S, F, Adj, none, Pad) ->$/;"	f	module:lager_format
string	deps/lager/src/lager_format.erl	/^string(S, none, _Adj, P, Pad) ->$/;"	f	module:lager_format
string	deps/lager/src/lager_format.erl	/^string(S, none, _Adj, none, _Pad) -> S;$/;"	f	module:lager_format
string_field	deps/lager/src/lager_format.erl	/^string_field(S, F, Adj, N, Pad) when N < F ->$/;"	f	module:lager_format
string_field	deps/lager/src/lager_format.erl	/^string_field(S, F, _Adj, N, _Pad) when N > F ->$/;"	f	module:lager_format
string_field	deps/lager/src/lager_format.erl	/^string_field(S, _, _, _, _) -> % N == F$/;"	f	module:lager_format
string_p	deps/lager/src/lager_stdlib.erl	/^string_p(Term) ->$/;"	f	module:lager_stdlib
string_p	deps/lager/src/lager_stdlib.erl	/^string_p([]) ->$/;"	f	module:lager_stdlib
string_p1	deps/lager/src/lager_stdlib.erl	/^string_p1([$\\b|T]) -> string_p1(T);$/;"	f	module:lager_stdlib
string_p1	deps/lager/src/lager_stdlib.erl	/^string_p1([$\\e|T]) -> string_p1(T);$/;"	f	module:lager_stdlib
string_p1	deps/lager/src/lager_stdlib.erl	/^string_p1([$\\f|T]) -> string_p1(T);$/;"	f	module:lager_stdlib
string_p1	deps/lager/src/lager_stdlib.erl	/^string_p1([$\\n|T]) -> string_p1(T);$/;"	f	module:lager_stdlib
string_p1	deps/lager/src/lager_stdlib.erl	/^string_p1([$\\r|T]) -> string_p1(T);$/;"	f	module:lager_stdlib
string_p1	deps/lager/src/lager_stdlib.erl	/^string_p1([$\\t|T]) -> string_p1(T);$/;"	f	module:lager_stdlib
string_p1	deps/lager/src/lager_stdlib.erl	/^string_p1([$\\v|T]) -> string_p1(T);$/;"	f	module:lager_stdlib
string_p1	deps/lager/src/lager_stdlib.erl	/^string_p1([H|T]) when is_integer(H), H >= $\\s, H < 256 ->$/;"	f	module:lager_stdlib
string_p1	deps/lager/src/lager_stdlib.erl	/^string_p1([H|T]) when is_list(H) ->$/;"	f	module:lager_stdlib
string_p1	deps/lager/src/lager_stdlib.erl	/^string_p1([]) -> true;$/;"	f	module:lager_stdlib
string_p1	deps/lager/src/lager_stdlib.erl	/^string_p1(_) ->  false.$/;"	f	module:lager_stdlib
suite	deps/ranch/test/sendfile_SUITE.erl	/^suite() ->$/;"	f	module:sendfile_SUITE
sup_get	deps/lager/src/lager_stdlib.erl	/^sup_get(Tag, Report) ->$/;"	f	module:lager_stdlib
supervisor_clean_child_restart	deps/ranch/test/acceptor_SUITE.erl	/^supervisor_clean_child_restart(_) ->$/;"	f	module:acceptor_SUITE
supervisor_clean_conns_sup_restart	deps/ranch/test/acceptor_SUITE.erl	/^supervisor_clean_conns_sup_restart(_) ->$/;"	f	module:acceptor_SUITE
supervisor_clean_restart	deps/ranch/test/acceptor_SUITE.erl	/^supervisor_clean_restart(_) ->$/;"	f	module:acceptor_SUITE
supervisor_conns_alive	deps/ranch/test/acceptor_SUITE.erl	/^supervisor_conns_alive(_) ->$/;"	f	module:acceptor_SUITE
supervisor_name	deps/lager/src/error_logger_lager_h.erl	/^supervisor_name(Name) -> Name.$/;"	f	module:error_logger_lager_h
supervisor_name	deps/lager/src/error_logger_lager_h.erl	/^supervisor_name({local, Name}) -> Name;$/;"	f	module:error_logger_lager_h
supervisor_protocol_start_link_crash	deps/ranch/test/acceptor_SUITE.erl	/^supervisor_protocol_start_link_crash(_) ->$/;"	f	module:acceptor_SUITE
supervisor_separate	deps/ranch/test/supervisor_separate.erl	/^-module(supervisor_separate).$/;"	m
supervisor_server_recover_state	deps/ranch/test/acceptor_SUITE.erl	/^supervisor_server_recover_state(_) ->$/;"	f	module:acceptor_SUITE
sync_error_logger	deps/lager/test/sync_error_logger.erl	/^-module(sync_error_logger).$/;"	m
system_code_change	deps/ranch/src/ranch_conns_sup.erl	/^system_code_change(Misc, _, _, _) ->$/;"	f	module:ranch_conns_sup
system_continue	deps/ranch/src/ranch_conns_sup.erl	/^system_continue(_, _, {State, CurConns, NbChildren, Sleepers}) ->$/;"	f	module:ranch_conns_sup
system_terminate	deps/ranch/src/ranch_conns_sup.erl	/^system_terminate(Reason, _, _, {State, _, NbChildren, _}) ->$/;"	f	module:ranch_conns_sup
t	deps/lager/src/lager_stdlib.erl	/^t(X) when is_integer(X) ->$/;"	f	module:lager_stdlib
t	deps/lager/src/lager_stdlib.erl	/^t(_) ->$/;"	f	module:lager_stdlib
t1	deps/lager/src/lager_stdlib.erl	/^t1(X)   -> X.$/;"	f	module:lager_stdlib
t1	deps/lager/src/lager_stdlib.erl	/^t1([X]) -> [$0,X];$/;"	f	module:lager_stdlib
t_words	deps/ranch/erlang.mk	/^t_words = $(subst :, ,$t)$/;"	m
tab	deps/ranch/erlang.mk	/^tab := $(empty)	$(empty)$/;"	m
tcp_accept_socket	deps/ranch/test/acceptor_SUITE.erl	/^tcp_accept_socket(_) ->$/;"	f	module:acceptor_SUITE
tcp_active_echo	deps/ranch/test/acceptor_SUITE.erl	/^tcp_active_echo(_) ->$/;"	f	module:acceptor_SUITE
tcp_client	src/tcp_client.erl	/^-module(tcp_client).$/;"	m
tcp_echo	deps/ranch/test/acceptor_SUITE.erl	/^tcp_echo(_) ->$/;"	f	module:acceptor_SUITE
tcp_echo_app	deps/ranch/examples/tcp_echo/src/tcp_echo_app.erl	/^-module(tcp_echo_app).$/;"	m
tcp_echo_sup	deps/ranch/examples/tcp_echo/src/tcp_echo_sup.erl	/^-module(tcp_echo_sup).$/;"	m
tcp_error_eacces	deps/ranch/test/acceptor_SUITE.erl	/^tcp_error_eacces(_) ->$/;"	f	module:acceptor_SUITE
tcp_error_eaddrinuse	deps/ranch/test/acceptor_SUITE.erl	/^tcp_error_eaddrinuse(_) ->$/;"	f	module:acceptor_SUITE
tcp_inherit_options	deps/ranch/test/acceptor_SUITE.erl	/^tcp_inherit_options(_) ->$/;"	f	module:acceptor_SUITE
tcp_max_connections	deps/ranch/test/acceptor_SUITE.erl	/^tcp_max_connections(_) ->$/;"	f	module:acceptor_SUITE
tcp_max_connections_and_beyond	deps/ranch/test/acceptor_SUITE.erl	/^tcp_max_connections_and_beyond(_) ->$/;"	f	module:acceptor_SUITE
tcp_max_connections_infinity	deps/ranch/test/acceptor_SUITE.erl	/^tcp_max_connections_infinity(_) ->$/;"	f	module:acceptor_SUITE
tcp_remove_connections	deps/ranch/test/acceptor_SUITE.erl	/^tcp_remove_connections(_) ->$/;"	f	module:acceptor_SUITE
tcp_reverse_app	deps/ranch/examples/tcp_reverse/src/tcp_reverse_app.erl	/^-module(tcp_reverse_app).$/;"	m
tcp_reverse_sup	deps/ranch/examples/tcp_reverse/src/tcp_reverse_sup.erl	/^-module(tcp_reverse_sup).$/;"	m
tcp_set_max_connections	deps/ranch/test/acceptor_SUITE.erl	/^tcp_set_max_connections(_) ->$/;"	f	module:acceptor_SUITE
tcp_set_max_connections_clean	deps/ranch/test/acceptor_SUITE.erl	/^tcp_set_max_connections_clean(_) ->$/;"	f	module:acceptor_SUITE
tcp_upgrade	deps/ranch/test/acceptor_SUITE.erl	/^tcp_upgrade(_) ->$/;"	f	module:acceptor_SUITE
term	deps/lager/src/lager_format.erl	/^term(T, F, Adj, P0, Pad) ->$/;"	f	module:lager_format
term	deps/lager/src/lager_format.erl	/^term(T, none, Adj, P, Pad) -> term(T, P, Adj, P, Pad);$/;"	f	module:lager_format
term	deps/lager/src/lager_format.erl	/^term(T, none, _Adj, none, _Pad) -> T;$/;"	f	module:lager_format
terminate	deps/goldrush/src/gr_counter.erl	/^terminate(_Reason, _State) ->$/;"	f	module:gr_counter
terminate	deps/goldrush/src/gr_manager.erl	/^terminate(_Reason, _State) ->$/;"	f	module:gr_manager
terminate	deps/goldrush/src/gr_param.erl	/^terminate(_Reason, _State) ->$/;"	f	module:gr_param
terminate	deps/lager/src/error_logger_lager_h.erl	/^terminate(_Reason, _State) ->$/;"	f	module:error_logger_lager_h
terminate	deps/lager/src/lager_backend_throttle.erl	/^terminate(_Reason, _State) ->$/;"	f	module:lager_backend_throttle
terminate	deps/lager/src/lager_common_test_backend.erl	/^terminate(_Reason, #state{log=Logs}) ->$/;"	f	module:lager_common_test_backend
terminate	deps/lager/src/lager_console_backend.erl	/^terminate(_Reason, _State) ->$/;"	f	module:lager_console_backend
terminate	deps/lager/src/lager_crash_log.erl	/^terminate(_Reason, _State) ->$/;"	f	module:lager_crash_log
terminate	deps/lager/src/lager_file_backend.erl	/^terminate(_Reason, State) ->$/;"	f	module:lager_file_backend
terminate	deps/lager/src/lager_handler_watcher.erl	/^terminate(_Reason, _State) ->$/;"	f	module:lager_handler_watcher
terminate	deps/lager/src/lager_manager_killer.erl	/^terminate(_Reason, _State) ->$/;"	f	module:lager_manager_killer
terminate	deps/lager/test/crash.erl	/^terminate(_, _) ->$/;"	f	module:crash
terminate	deps/lager/test/lager_crash_backend.erl	/^terminate(_Reason, _State) ->$/;"	f	module:lager_crash_backend
terminate	deps/lager/test/lager_slow_backend.erl	/^terminate(_Reason, _State) ->$/;"	f	module:lager_slow_backend
terminate	deps/lager/test/lager_test_backend.erl	/^terminate(_Reason, _State) ->$/;"	f	module:lager_test_backend
terminate	deps/ranch/examples/tcp_reverse/src/reverse_protocol.erl	/^terminate(_Reason, _State) ->$/;"	f	module:reverse_protocol
terminate	deps/ranch/src/ranch_conns_sup.erl	/^terminate(#state{shutdown=Shutdown}, Reason, NbChildren) ->$/;"	f	module:ranch_conns_sup
terminate	deps/ranch/src/ranch_conns_sup.erl	/^terminate(#state{shutdown=brutal_kill}, Reason, _) ->$/;"	f	module:ranch_conns_sup
terminate	deps/ranch/src/ranch_server.erl	/^terminate(_Reason, _State) ->$/;"	f	module:ranch_server
terminate	src/ecache_protocol.erl	/^terminate(Reason, #sock_state{socket = _Socket, $/;"	f	module:ecache_protocol
terminate	src/reloader.erl	/^terminate(_Reason, State) ->$/;"	f	module:reloader
test	deps/lager/src/lager_trunc_io.erl	/^test() ->$/;"	f	module:lager_trunc_io
test	deps/lager/src/lager_trunc_io.erl	/^test(Mod, Func) ->$/;"	f	module:lager_trunc_io
test	deps/lager/test/lager_test_backend.erl	/^-record(test, {attrs :: list(), format :: list(), args :: list()}).$/;"	r
test	deps/lager/test/trunc_io_eqc.erl	/^test() ->$/;"	f	module:trunc_io_eqc
test	deps/lager/test/trunc_io_eqc.erl	/^test(N) ->$/;"	f	module:trunc_io_eqc
test	src/tcp_client.erl	/^test() ->$/;"	f	module:tcp_client
test_body	deps/lager/test/lager_test_backend.erl	/^test_body(Expected, Actual) ->$/;"	f	module:lager_test_backend
test_get	deps/lager/src/lager_backend_throttle.erl	/^test_get(Key) ->$/;"	f	module:lager_backend_throttle
test_increment	deps/lager/src/lager_backend_throttle.erl	/^test_increment(Key) ->$/;"	f	module:lager_backend_throttle
throw:	deps/lager/test/pr_stacktrace_test.erl	/^throw:{test,exception}",$/;"	f	module:pr_stacktrace_test
time_diff	deps/goldrush/src/glc_run.erl	/^-define(time_diff(T1, T2), erlang:convert_time_unit(T2 - T1, native, micro_seconds)).$/;"	d
time_diff	deps/goldrush/src/glc_run.erl	/^-define(time_diff(T1, T2), timer:now_diff(T2, T1)). $/;"	d
time_now	deps/goldrush/src/glc_run.erl	/^-define(time_now(), erlang:monotonic_time()).$/;"	d
time_now	deps/goldrush/src/glc_run.erl	/^-define(time_now(), os:timestamp()). $/;"	d
timeout	deps/ranch/test/shutdown_SUITE.erl	/^timeout(_) ->$/;"	f	module:shutdown_SUITE
timeout_trap_exit	deps/ranch/test/shutdown_SUITE.erl	/^timeout_trap_exit(_) ->$/;"	f	module:shutdown_SUITE
timestamp	deps/lager/src/lager_msg.erl	/^timestamp(Msg) ->$/;"	f	module:lager_msg
tpl_cowboy_http	deps/ranch/erlang.mk	/^define tpl_cowboy_http$/;"	m
tpl_cowboy_loop	deps/ranch/erlang.mk	/^define tpl_cowboy_loop$/;"	m
tpl_cowboy_rest	deps/ranch/erlang.mk	/^define tpl_cowboy_rest$/;"	m
tpl_cowboy_ws	deps/ranch/erlang.mk	/^define tpl_cowboy_ws$/;"	m
tpl_gen_fsm	deps/ranch/erlang.mk	/^define tpl_gen_fsm$/;"	m
tpl_gen_server	deps/ranch/erlang.mk	/^define tpl_gen_server$/;"	m
tpl_module	deps/ranch/erlang.mk	/^define tpl_module$/;"	m
tpl_ranch_protocol	deps/ranch/erlang.mk	/^define tpl_ranch_protocol$/;"	m
tpl_supervisor	deps/ranch/erlang.mk	/^define tpl_supervisor$/;"	m
trace	deps/lager/src/lager.erl	/^trace(Backend, Filter) ->$/;"	f	module:lager
trace	deps/lager/src/lager.erl	/^trace(Backend, Filter, Level) ->$/;"	f	module:lager
trace	deps/lager/src/lager.erl	/^trace({lager_file_backend, File}, Filter, Level) ->$/;"	f	module:lager
trace_acc	deps/lager/src/lager_util.erl	/^trace_acc(Query) ->$/;"	f	module:lager_util
trace_acc	deps/lager/src/lager_util.erl	/^trace_acc([], Acc) -> $/;"	f	module:lager_util
trace_acc	deps/lager/src/lager_util.erl	/^trace_acc([{Key, '!'}|T], Acc) ->$/;"	f	module:lager_util
trace_acc	deps/lager/src/lager_util.erl	/^trace_acc([{Key, '*'}|T], Acc) ->$/;"	f	module:lager_util
trace_acc	deps/lager/src/lager_util.erl	/^trace_acc([{Key, '<', Val}|T], Acc) ->$/;"	f	module:lager_util
trace_acc	deps/lager/src/lager_util.erl	/^trace_acc([{Key, '=', Val}|T], Acc) ->$/;"	f	module:lager_util
trace_acc	deps/lager/src/lager_util.erl	/^trace_acc([{Key, '>', Val}|T], Acc) ->$/;"	f	module:lager_util
trace_acc	deps/lager/src/lager_util.erl	/^trace_acc([{Key, Val}|T], Acc) ->$/;"	f	module:lager_util
trace_all	deps/lager/src/lager_util.erl	/^trace_all(Query) -> $/;"	f	module:lager_util
trace_any	deps/lager/src/lager_util.erl	/^trace_any(Query) -> $/;"	f	module:lager_util
trace_console	deps/lager/src/lager.erl	/^trace_console(Filter) ->$/;"	f	module:lager
trace_console	deps/lager/src/lager.erl	/^trace_console(Filter, Level) ->$/;"	f	module:lager
trace_file	deps/lager/src/lager.erl	/^trace_file(File, Filter) ->$/;"	f	module:lager
trace_file	deps/lager/src/lager.erl	/^trace_file(File, Filter, Level) when is_atom(Level) ->$/;"	f	module:lager
trace_file	deps/lager/src/lager.erl	/^trace_file(File, Filter, Level, Options) ->$/;"	f	module:lager
trace_file	deps/lager/src/lager.erl	/^trace_file(File, Filter, Options) when is_list(Options) ->$/;"	f	module:lager
trace_files_test_	deps/lager/src/lager_file_backend.erl	/^trace_files_test_() ->$/;"	f	module:lager_file_backend
trace_filter	deps/lager/src/lager_util.erl	/^trace_filter(Module, Query) when Query == none; Query == [] ->$/;"	f	module:lager_util
trace_filter	deps/lager/src/lager_util.erl	/^trace_filter(Module, Query) when is_list(Query) ->$/;"	f	module:lager_util
trace_filter	deps/lager/src/lager_util.erl	/^trace_filter(Query) ->$/;"	f	module:lager_util
transform	deps/goldrush/src/gr_param.erl	/^transform(Server) ->$/;"	f	module:gr_param
transform_statement	deps/lager/src/lager_transform.erl	/^transform_statement(Stmt, Sinks) when is_list(Stmt) ->$/;"	f	module:lager_transform
transform_statement	deps/lager/src/lager_transform.erl	/^transform_statement(Stmt, Sinks) when is_tuple(Stmt) ->$/;"	f	module:lager_transform
transform_statement	deps/lager/src/lager_transform.erl	/^transform_statement(Stmt, _Sinks) ->$/;"	f	module:lager_transform
transform_statement	deps/lager/src/lager_transform.erl	/^transform_statement({call, Line, {remote, _Line1, {atom, _Line2, Module},$/;"	f	module:lager_transform
trap_exit_protocol	deps/ranch/test/trap_exit_protocol.erl	/^-module(trap_exit_protocol).$/;"	m
triq_check.erl	deps/ranch/erlang.mk	/^define triq_check.erl$/;"	m
trunc_io_eqc	deps/lager/test/trunc_io_eqc.erl	/^-module(trunc_io_eqc).$/;"	m
try_backend_pop	deps/lager/src/lager_handler_watcher.erl	/^try_backend_pop(undefined, String, _Fun) ->$/;"	f	module:lager_handler_watcher
try_backend_pop	deps/lager/src/lager_handler_watcher.erl	/^try_backend_pop({_Severity, _Date, Msg, _Metadata}, String, Fun) ->$/;"	f	module:lager_handler_watcher
tuple_contents	deps/lager/src/lager_trunc_io.erl	/^tuple_contents(Tuple, Max, Options) ->$/;"	f	module:lager_trunc_io
tuple_printing_test	deps/lager/src/lager_trunc_io.erl	/^tuple_printing_test() ->$/;"	f	module:lager_trunc_io
unbroken_cipher_suites	deps/ranch/src/ranch_ssl.erl	/^unbroken_cipher_suites() ->$/;"	f	module:ranch_ssl
unicode_test	deps/lager/src/lager_trunc_io.erl	/^unicode_test() ->$/;"	f	module:lager_trunc_io
uniconv	deps/lager/src/lager_format.erl	/^uniconv(C) ->$/;"	f	module:lager_format
union	deps/goldrush/src/glc.erl	/^union(Queries) ->$/;"	f	module:glc
union	deps/goldrush/src/glc_ops.erl	/^union(Queries) ->$/;"	f	module:glc_ops
union_error_test	deps/goldrush/src/glc.erl	/^union_error_test() ->$/;"	f	module:glc
unprefixed_integer	deps/lager/src/lager_format.erl	/^unprefixed_integer(Int, F, Adj, Base, Pad, Lowercase)$/;"	f	module:lager_format
unsafe_format	deps/lager/src/lager.erl	/^unsafe_format(Fmt, Args) ->$/;"	f	module:lager
unsafe_format_test	deps/lager/test/lager_test_backend.erl	/^unsafe_format_test() ->$/;"	f	module:lager_test_backend
update_counter	deps/goldrush/src/gr_counter.erl	/^update_counter(Server, Counter, Value) when is_atom(Server) ->$/;"	f	module:gr_counter
update_counter	deps/goldrush/src/gr_counter.erl	/^update_counter(Server, Counter, Value) when is_pid(Server) ->$/;"	f	module:gr_counter
update_loglevel_config	deps/lager/src/lager.erl	/^update_loglevel_config(Sink) ->$/;"	f	module:lager
update_loglevel_config	deps/lager/src/lager.erl	/^update_loglevel_config(error_logger) ->$/;"	f	module:lager
valid	deps/goldrush/src/glc_lib.erl	/^valid(Term) ->$/;"	f	module:glc_lib
validate_logfile_proplist	deps/lager/src/lager_file_backend.erl	/^validate_logfile_proplist(List) ->$/;"	f	module:lager_file_backend
validate_logfile_proplist	deps/lager/src/lager_file_backend.erl	/^validate_logfile_proplist([Other|_Tail], _Acc) ->$/;"	f	module:lager_file_backend
validate_logfile_proplist	deps/lager/src/lager_file_backend.erl	/^validate_logfile_proplist([], Acc) ->$/;"	f	module:lager_file_backend
validate_logfile_proplist	deps/lager/src/lager_file_backend.erl	/^validate_logfile_proplist([{check_interval, CheckInt}|Tail], Acc) ->$/;"	f	module:lager_file_backend
validate_logfile_proplist	deps/lager/src/lager_file_backend.erl	/^validate_logfile_proplist([{count, Count}|Tail], Acc) ->$/;"	f	module:lager_file_backend
validate_logfile_proplist	deps/lager/src/lager_file_backend.erl	/^validate_logfile_proplist([{date, Date}|Tail], Acc) ->$/;"	f	module:lager_file_backend
validate_logfile_proplist	deps/lager/src/lager_file_backend.erl	/^validate_logfile_proplist([{file, File}|Tail], Acc) ->$/;"	f	module:lager_file_backend
validate_logfile_proplist	deps/lager/src/lager_file_backend.erl	/^validate_logfile_proplist([{formatter, Fmt}|Tail], Acc) ->$/;"	f	module:lager_file_backend
validate_logfile_proplist	deps/lager/src/lager_file_backend.erl	/^validate_logfile_proplist([{formatter_config, FmtCfg}|Tail], Acc) ->$/;"	f	module:lager_file_backend
validate_logfile_proplist	deps/lager/src/lager_file_backend.erl	/^validate_logfile_proplist([{high_water_mark, HighWaterMark}|Tail], Acc) ->$/;"	f	module:lager_file_backend
validate_logfile_proplist	deps/lager/src/lager_file_backend.erl	/^validate_logfile_proplist([{level, Level}|Tail], Acc) ->$/;"	f	module:lager_file_backend
validate_logfile_proplist	deps/lager/src/lager_file_backend.erl	/^validate_logfile_proplist([{size, Size}|Tail], Acc) ->$/;"	f	module:lager_file_backend
validate_logfile_proplist	deps/lager/src/lager_file_backend.erl	/^validate_logfile_proplist([{sync_interval, SyncInt}|Tail], Acc) ->$/;"	f	module:lager_file_backend
validate_logfile_proplist	deps/lager/src/lager_file_backend.erl	/^validate_logfile_proplist([{sync_on, Level}|Tail], Acc) ->$/;"	f	module:lager_file_backend
validate_logfile_proplist	deps/lager/src/lager_file_backend.erl	/^validate_logfile_proplist([{sync_size, SyncSize}|Tail], Acc) ->$/;"	f	module:lager_file_backend
validate_loglevel	deps/lager/src/lager_file_backend.erl	/^validate_loglevel(Level) ->$/;"	f	module:lager_file_backend
validate_positive	deps/lager/src/lager_sup.erl	/^validate_positive(_Val, Default) ->$/;"	f	module:lager_sup
validate_positive	deps/lager/src/lager_sup.erl	/^validate_positive({ok, Val}, _Default) when is_integer(Val) andalso Val >= 0 ->$/;"	f	module:lager_sup
validate_trace	deps/lager/src/lager_util.erl	/^validate_trace(_) ->$/;"	f	module:lager_util
validate_trace	deps/lager/src/lager_util.erl	/^validate_trace({Filter, Level, Destination}) when is_tuple(Filter); is_list(Filter), is_atom(Level), is_atom(Destination) ->$/;"	f	module:lager_util
validate_trace	deps/lager/src/lager_util.erl	/^validate_trace({Filter, Level, {Destination, ID}}) when is_tuple(Filter); is_list(Filter), is_atom(Level), is_atom(Destination) ->$/;"	f	module:lager_util
validate_trace_filter	deps/lager/src/lager_util.erl	/^validate_trace_filter(Filter) ->$/;"	f	module:lager_util
validate_trace_filter	deps/lager/src/lager_util.erl	/^validate_trace_filter(Filter) when is_tuple(Filter), is_atom(element(1, Filter)) =:= false ->$/;"	f	module:lager_util
validate_trace_filters	deps/lager/src/lager.erl	/^validate_trace_filters(Filters, Level, Backend) ->$/;"	f	module:lager
verbose	deps/ranch/erlang.mk	/^verbose = $(verbose_$(V))$/;"	m
verbose_0	deps/ranch/erlang.mk	/^verbose_0 = @$/;"	m
verbose_2	deps/ranch/erlang.mk	/^verbose_2 = set -x;$/;"	m
wait_children	deps/ranch/src/ranch_conns_sup.erl	/^wait_children(0) ->$/;"	f	module:ranch_conns_sup
wait_children	deps/ranch/src/ranch_conns_sup.erl	/^wait_children(NbChildren) ->$/;"	f	module:ranch_conns_sup
wait_for_pid	deps/goldrush/src/gr_manager.erl	/^wait_for_pid(Managee) when is_atom(Managee), Managee =\/= undefined -> $/;"	f	module:gr_manager
wait_for_pid	deps/goldrush/src/gr_manager.erl	/^wait_for_pid(Managee) when is_pid(Managee) -> $/;"	f	module:gr_manager
wait_until	deps/lager/test/lager_manager_killer_test.erl	/^wait_until(Fun, Delay, Retries) ->$/;"	f	module:lager_manager_killer_test
wait_until	deps/lager/test/lager_manager_killer_test.erl	/^wait_until(_Fun, _Delay, 0) ->$/;"	f	module:lager_manager_killer_test
wait_until	deps/lager/test/lager_rotate.erl	/^wait_until(Fun, Retry) ->$/;"	f	module:lager_rotate
wait_until	deps/lager/test/lager_rotate.erl	/^wait_until(_Fun, 0) -> {error, too_many_retries};$/;"	f	module:lager_rotate
walk_ast	deps/lager/src/lager_transform.erl	/^walk_ast(Acc, [H|T]) ->$/;"	f	module:lager_transform
walk_ast	deps/lager/src/lager_transform.erl	/^walk_ast(Acc, []) ->$/;"	f	module:lager_transform
walk_ast	deps/lager/src/lager_transform.erl	/^walk_ast(Acc, [{attribute, _, module, Module}=H|T]) ->$/;"	f	module:lager_transform
walk_ast	deps/lager/src/lager_transform.erl	/^walk_ast(Acc, [{attribute, _, module, {Module, _PmodArgs}}=H|T]) ->$/;"	f	module:lager_transform
walk_ast	deps/lager/src/lager_transform.erl	/^walk_ast(Acc, [{attribute, _, record, {Name, Fields}}=H|T]) ->$/;"	f	module:lager_transform
walk_ast	deps/lager/src/lager_transform.erl	/^walk_ast(Acc, [{function, Line, Name, Arity, Clauses}|T]) ->$/;"	f	module:lager_transform
walk_body	deps/lager/src/lager_transform.erl	/^walk_body(Acc, [H|T]) ->$/;"	f	module:lager_transform
walk_body	deps/lager/src/lager_transform.erl	/^walk_body(Acc, []) ->$/;"	f	module:lager_transform
walk_clauses	deps/lager/src/lager_transform.erl	/^walk_clauses(Acc, []) ->$/;"	f	module:lager_transform
walk_clauses	deps/lager/src/lager_transform.erl	/^walk_clauses(Acc, [{clause, Line, Arguments, Guards, Body}|T]) ->$/;"	f	module:lager_transform
warning_msg	deps/lager/test/sync_error_logger.erl	/^warning_msg(Format) ->$/;"	f	module:sync_error_logger
warning_msg	deps/lager/test/sync_error_logger.erl	/^warning_msg(Format, Args) ->$/;"	f	module:sync_error_logger
warning_msg_tag	deps/lager/test/sync_error_logger.erl	/^warning_msg_tag() ->$/;"	f	module:sync_error_logger
warning_report	deps/lager/test/sync_error_logger.erl	/^warning_report(Report) ->$/;"	f	module:sync_error_logger
warning_report	deps/lager/test/sync_error_logger.erl	/^warning_report(Type, Report) ->$/;"	f	module:sync_error_logger
warning_report_tag	deps/lager/test/sync_error_logger.erl	/^warning_report_tag(Type) ->$/;"	f	module:sync_error_logger
wc	deps/goldrush/src/glc.erl	/^wc(Key) ->$/;"	f	module:glc
wc	deps/goldrush/src/glc_ops.erl	/^wc(Key) ->$/;"	f	module:glc_ops
wc	deps/goldrush/src/glc_ops.erl	/^wc(Key) when is_atom(Key) ->$/;"	f	module:glc_ops
with	deps/goldrush/src/glc.erl	/^with(Query, Action) ->$/;"	f	module:glc
with	deps/goldrush/src/glc_ops.erl	/^with(Query, Fun) ->$/;"	f	module:glc_ops
with	deps/goldrush/src/glc_ops.erl	/^with(Query, Fun) when is_function(Fun, 1);$/;"	f	module:glc_ops
write	deps/lager/src/lager_file_backend.erl	/^write(#state{name=Name, fd=FD, inode=Inode, flap=Flap, size=RotSize,$/;"	f	module:lager_file_backend
write_time	deps/lager/src/lager_stdlib.erl	/^write_time({utc,{{Y,Mo,D},{H,Mi,S}}},Type) ->$/;"	f	module:lager_stdlib
write_time	deps/lager/src/lager_stdlib.erl	/^write_time({{Y,Mo,D},{H,Mi,S}},Type) ->$/;"	f	module:lager_stdlib
xyrl_verbose	deps/ranch/erlang.mk	/^xyrl_verbose = $(xyrl_verbose_$(V))$/;"	m
xyrl_verbose_0	deps/ranch/erlang.mk	/^xyrl_verbose_0 = @echo " XYRL  " $(filter %.xrl %.yrl,$(?F));$/;"	m
xyrl_verbose_2	deps/ranch/erlang.mk	/^xyrl_verbose_2 = set -x;$/;"	m
zip	deps/lager/src/lager.erl	/^zip([FieldName|RecordFields], [FieldValue|Record], Module, Options, ToReturn) ->$/;"	f	module:lager
zip	deps/lager/src/lager.erl	/^zip([], [], _Module, _Compress, ToReturn) ->$/;"	f	module:lager
zzzz_gh280_crash	deps/lager/test/zzzz_gh280_crash.erl	/^-module(zzzz_gh280_crash).$/;"	m
